<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on Hugo Hermit</title>
		<link>https://example.com/posts/</link>
		<description>Recent content in Posts on Hugo Hermit</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en-us</language>
		<copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
		<lastBuildDate>Mon, 24 Dec 2018 12:29:41 +0800</lastBuildDate>
		<atom:link href="https://example.com/posts/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>The &#34;figure&#34; Shortcode</title>
			<link>https://example.com/posts/the-figure-shortcode/</link>
			<pubDate>Mon, 24 Dec 2018 12:29:41 +0800</pubDate>
			
			<guid>https://example.com/posts/the-figure-shortcode/</guid>
			<description>Hugo has figure shortcode built in, so you can easily add figcaptions or hyperlink rel attributes to images. Documentations can be found here:
https://gohugo.io/content-management/shortcodes/#figure
This theme has 3 CSS classes made for figure elements:
 big: images will break the width limit of main content area. left: images will float to the left. right: images will float to the right.  If a figure has no class set, the image will behave just like a normal markdown image: !</description>
			<content type="html"><![CDATA[<p>Hugo has <code>figure</code> shortcode built in, so you can easily add figcaptions or hyperlink rel attributes to images. Documentations can be found here:</p>
<p><a href="https://gohugo.io/content-management/shortcodes/#figure">https://gohugo.io/content-management/shortcodes/#figure</a></p>
<p>This theme has 3 CSS classes made for figure elements:</p>
<ul>
<li><code>big</code>: images will break the width limit of main content area.</li>
<li><code>left</code>: images will float to the left.</li>
<li><code>right</code>: images will float to the right.</li>
</ul>
<p>If a figure has no class set, the image will behave just like a normal markdown image: <code>![]()</code>.</p>
<p>Here&rsquo;s some examples, please be aware that these styles only take effect when the page width is over 1300px.</p>
<figure>
    <img src="https://via.placeholder.com/1600x800"
         alt="image"/> <figcaption>
            <p>figure-normal (without any classes)</p>
        </figcaption>
</figure>

<p>Pellentesque posuere sem nec nunc varius, id hendrerit arcu consequat. Maecenas commodo, sapien ut gravida porttitor, dolor risus facilisis enim, eget pharetra nibh nisl porttitor sapien. Proin finibus elementum ligula sit amet hendrerit. Praesent et erat sodales ante accumsan pharetra non eu nulla. Sed vehicula consequat lorem, a fermentum ante faucibus quis. Aliquam erat volutpat. In vitae tincidunt dui. Proin sit amet ligula sodales, elementum tortor et, venenatis sem. Maecenas non nisl erat. Curabitur nec velit eros. Ut cursus lacus nisi, non pretium libero euismod et. Fusce luctus in nisi quis sollicitudin. Aenean nec blandit ligula. Duis ac felis lorem. Proin tellus tellus, dictum nec tempus sit amet, venenatis ac felis. Sed in pharetra nulla, non mollis sem.</p>
<figure class="big">
    <img src="https://via.placeholder.com/1600x800"
         alt="image"/> <figcaption>
            <p>figure-big</p>
        </figcaption>
</figure>

<p>Suspendisse fringilla malesuada massa, in malesuada orci lacinia a. Praesent dapibus faucibus nisl, id volutpat elit bibendum eu. Nulla vitae laoreet nibh, eu hendrerit lacus. Donec lacinia auctor ligula, vel interdum ipsum malesuada vitae. Donec placerat a justo eu gravida. Aenean ultricies imperdiet convallis. Pellentesque accumsan non ex sed euismod. Proin bibendum lectus nec enim faucibus feugiat. Donec hendrerit nisi viverra ornare luctus. Nullam non viverra nisl. Nam vel tellus et tortor elementum volutpat sit amet et erat. Aliquam a libero quis libero porta consectetur. Etiam aliquam felis vel nulla mattis finibus. Mauris laoreet lacus arcu, sed rhoncus odio condimentum sed. Aenean in dui rutrum elit faucibus faucibus nec fringilla augue. Fusce non ornare mauris.</p>
<figure class="left">
    <img src="https://via.placeholder.com/400x280"
         alt="image"/> <figcaption>
            <p>figure-left</p>
        </figcaption>
</figure>

<p>In a libero varius, luctus ligula et, bibendum tortor. Sed sit amet dui malesuada, mattis justo id, ultricies enim. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Aliquam sollicitudin cursus feugiat. Vivamus suscipit ipsum eget lobortis sollicitudin. Fusce vehicula neque tellus. Integer eu posuere quam, id laoreet tortor. Mauris sit amet turpis urna. Donec venenatis tempor dolor, nec laoreet orci aliquet et. Sed condimentum elit eu tristique aliquam. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nunc luctus ipsum sit amet nisl maximus pellentesque.</p>
<figure class="right">
    <img src="https://via.placeholder.com/400x280"
         alt="image"/> <figcaption>
            <p>figure-right</p>
        </figcaption>
</figure>

<p>Pellentesque eu consequat nunc. Vivamus eu eros ut nulla dapibus molestie in id tortor. Cras viverra ligula erat, tincidunt hendrerit diam blandit nec. Cras id urna vel dolor dictum mattis. Vestibulum congue erat ac eros molestie accumsan. Maecenas lorem nibh, maximus vel justo eget, facilisis egestas lectus. Mauris eu est ut odio blandit consequat id feugiat eros. Fusce id suscipit mi, et lacinia lectus. Mauris a arcu placerat dolor iaculis feugiat nec non mi. Ut porttitor elit tortor, eget tempus velit mollis eu. Aliquam sem nulla, dictum cursus mauris ac, semper ullamcorper leo.</p>
<p>Donec nec tincidunt est. Sed id metus in erat fringilla mattis at id turpis. Aliquam tempor vehicula faucibus. Phasellus consequat aliquam odio. Morbi a ex vitae sapien porta auctor. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec sit amet nulla arcu. Praesent ut tortor purus. Praesent id eros diam. Pellentesque vitae dolor at nibh ultrices accumsan eu id urna. Aliquam finibus interdum orci in varius. Pellentesque a enim condimentum, condimentum felis id, vehicula augue. Vivamus cursus commodo eros nec lacinia.</p>
]]></content>
		</item>
		
		<item>
			<title>Post With Featured Image</title>
			<link>https://example.com/posts/post-with-featured-image/</link>
			<pubDate>Mon, 01 Oct 2018 16:15:09 +0800</pubDate>
			
			<guid>https://example.com/posts/post-with-featured-image/</guid>
			<description>Just define the image URL in the content’s front matter, the featured image will be displayed as the background.
For example:
---images:- https://picsum.photos/1024/768/?random---This is an array, you can set multiple urls, only the first url will be used. These images is also used in Twitter Cards and the Open Graph metadata.</description>
			<content type="html"><![CDATA[<p>Just define the image URL in the content’s front matter, the featured image will be displayed as the background.</p>
<p>For example:</p>
<div class="highlight"><pre class="chroma"><code class="language-yaml" data-lang="yaml">---<span class="w">
</span><span class="w"></span><span class="k">images</span><span class="p">:</span><span class="w">
</span><span class="w">  </span>- https<span class="p">:</span>//picsum.photos/<span class="m">1024</span>/<span class="m">768</span>/<span class="p">?</span>random<span class="w">
</span><span class="w"></span>---<span class="w">
</span></code></pre></div><p>This is an array, you can set multiple urls, only the first url will be used. These images is also used in <a href="https://developer.twitter.com/en/docs/tweets/optimize-with-cards/guides/getting-started.html">Twitter Cards</a> and the <a href="http://ogp.me/">Open Graph</a> metadata.</p>
]]></content>
		</item>
		
		<item>
			<title>Typography</title>
			<link>https://example.com/posts/typography/</link>
			<pubDate>Sat, 29 Sep 2018 11:36:33 +0800</pubDate>
			
			<guid>https://example.com/posts/typography/</guid>
			<description>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
 An apple is a sweet, edible fruit produced by an apple tree (Malus pumila).</description>
			<content type="html"><![CDATA[<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
<blockquote>
<p>An apple is a sweet, edible fruit produced by an apple tree (Malus pumila). Apple trees are cultivated worldwide, and are the most widely grown species in the genus Malus. The tree originated in Central Asia, where its wild ancestor, Malus sieversii, is still found today. Apples have been grown for thousands of years in Asia and Europe, and were brought to North America by European colonists. Apples have religious and mythological significance in many cultures, including Norse, Greek and European Christian traditions.<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></p>
</blockquote>
<hr>
<p>Inline styles：</p>
<p><strong>strong</strong>, <em>emphasis</em>, <em><strong>strong and emphasis</strong></em>,<code>code</code>, <!-- raw HTML omitted -->underline<!-- raw HTML omitted -->, <del>strikethrough</del>, 😂🤣, $\LaTeX$, X^2^, H~2~O, ==highlight==, <a href="https://example.com">Link</a>, and image:</p>
<p><img src="https://picsum.photos/600/400/?random" alt="img"></p>
<hr>
<p>Headings:</p>
<h1 id="heading-1">Heading 1</h1>
<h2 id="heading-2">Heading 2</h2>
<h3 id="heading-3">Heading 3</h3>
<h4 id="heading-4">Heading 4</h4>
<h5 id="heading-5">Heading 5</h5>
<h6 id="heading-6">Heading 6</h6>
<p>Table:</p>
<table>
<thead>
<tr>
<th align="left">Left-Aligned</th>
<th align="center">Center Aligned</th>
<th align="right">Right Aligned</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">col 3 is</td>
<td align="center">some wordy text</td>
<td align="right">$1600</td>
</tr>
<tr>
<td align="left">col 2 is</td>
<td align="center">centered</td>
<td align="right">$12</td>
</tr>
<tr>
<td align="left">zebra stripes</td>
<td align="center">are neat</td>
<td align="right">$1</td>
</tr>
</tbody>
</table>
<p>Lists:</p>
<ul>
<li>Unordered list item 1.</li>
<li>Unordered list item 2.</li>
</ul>
<ol>
<li>ordered list item 1.</li>
<li>ordered list item 2.
<ul>
<li>sub-unordered list item 1.</li>
<li>sub-unordered list item 2.
<ul>
<li><input checked="" disabled="" type="checkbox"> something is DONE.</li>
<li><input disabled="" type="checkbox"> something is NOT DONE.</li>
</ul>
</li>
</ul>
</li>
</ol>
<p>Syntax Highlighting:</p>
<div class="highlight"><pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">num1</span><span class="p">,</span> <span class="nx">num2</span><span class="p">,</span> <span class="nx">sum</span>
<span class="nx">num1</span> <span class="o">=</span> <span class="nx">prompt</span><span class="p">(</span><span class="s2">&#34;Enter first number&#34;</span><span class="p">)</span>
<span class="nx">num2</span> <span class="o">=</span> <span class="nx">prompt</span><span class="p">(</span><span class="s2">&#34;Enter second number&#34;</span><span class="p">)</span>
<span class="nx">sum</span> <span class="o">=</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">num1</span><span class="p">)</span> <span class="o">+</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">num2</span><span class="p">)</span> <span class="c1">// &#34;+&#34; means &#34;add&#34;
</span><span class="c1"></span><span class="nx">alert</span><span class="p">(</span><span class="s2">&#34;Sum = &#34;</span> <span class="o">+</span> <span class="nx">sum</span><span class="p">)</span>  <span class="c1">// &#34;+&#34; means combine into a string
</span></code></pre></div><section class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1" role="doc-endnote">
<p>From <a href="https://en.wikipedia.org/wiki/Apple">https://en.wikipedia.org/wiki/Apple</a> <a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</section>
]]></content>
		</item>
		
		<item>
			<title>Creating a New Theme</title>
			<link>https://example.com/posts/creating-a-new-theme/</link>
			<pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
			
			<guid>https://example.com/posts/creating-a-new-theme/</guid>
			<description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
			<content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&rsquo;t cover using CSS to style your theme.</p>
<p>We&rsquo;ll start with creating a new site with a very basic template. Then we&rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.</p>
<p>In this tutorial, commands that you enter will start with the &ldquo;$&rdquo; prompt. The output will follow. Lines that start with &ldquo;#&rdquo; are comments that I&rsquo;ve added to explain a point. When I show updates to a file, the &ldquo;:wq&rdquo; on the last line means to save the file.</p>
<p>Here&rsquo;s an example:</p>
<pre><code>## this is a comment
$ echo this is a command
this is a command

## edit the file
$ vi foo.md
+++
date = &quot;2014-09-28&quot;
title = &quot;creating a new theme&quot;
+++

bah and humbug
:wq

## show it
$ cat foo.md
+++
date = &quot;2014-09-28&quot;
title = &quot;creating a new theme&quot;
+++

bah and humbug
$
</code></pre><h2 id="some-definitions">Some Definitions</h2>
<p>There are a few concepts that you need to understand before creating a theme.</p>
<h3 id="skins">Skins</h3>
<p>Skins are the files responsible for the look and feel of your site. It’s the CSS that controls colors and fonts, it’s the Javascript that determines actions and reactions. It’s also the rules that Hugo uses to transform your content into the HTML that the site will serve to visitors.</p>
<p>You have two ways to create a skin. The simplest way is to create it in the <code>layouts/</code> directory. If you do, then you don’t have to worry about configuring Hugo to recognize it. The first place that Hugo will look for rules and files is in the <code>layouts/</code> directory so it will always find the skin.</p>
<p>Your second choice is to create it in a sub-directory of the <code>themes/</code> directory. If you do, then you must always tell Hugo where to search for the skin. It’s extra work, though, so why bother with it?</p>
<p>The difference between creating a skin in <code>layouts/</code> and creating it in <code>themes/</code> is very subtle. A skin in <code>layouts/</code> can’t be customized without updating the templates and static files that it is built from. A skin created in <code>themes/</code>, on the other hand, can be and that makes it easier for other people to use it.</p>
<p>The rest of this tutorial will call a skin created in the <code>themes/</code> directory a theme.</p>
<p>Note that you can use this tutorial to create a skin in the <code>layouts/</code> directory if you wish to. The main difference will be that you won’t need to update the site’s configuration file to use a theme.</p>
<h3 id="the-home-page">The Home Page</h3>
<p>The home page, or landing page, is the first page that many visitors to a site see. It is the index.html file in the root directory of the web site. Since Hugo writes files to the public/ directory, our home page is public/index.html.</p>
<h3 id="site-configuration-file">Site Configuration File</h3>
<p>When Hugo runs, it looks for a configuration file that contains settings that override default values for the entire site. The file can use TOML, YAML, or JSON. I prefer to use TOML for my configuration files. If you prefer to use JSON or YAML, you’ll need to translate my examples. You’ll also need to change the name of the file since Hugo uses the extension to determine how to process it.</p>
<p>Hugo translates Markdown files into HTML. By default, Hugo expects to find Markdown files in your <code>content/</code> directory and template files in your <code>themes/</code> directory. It will create HTML files in your <code>public/</code> directory. You can change this by specifying alternate locations in the configuration file.</p>
<h3 id="content">Content</h3>
<p>Content is stored in text files that contain two sections. The first section is the “front matter,” which is the meta-information on the content. The second section contains Markdown that will be converted to HTML.</p>
<h4 id="front-matter">Front Matter</h4>
<p>The front matter is information about the content. Like the configuration file, it can be written in TOML, YAML, or JSON. Unlike the configuration file, Hugo doesn’t use the file’s extension to know the format. It looks for markers to signal the type. TOML is surrounded by “<code>+++</code>”, YAML by “<code>---</code>”, and JSON is enclosed in curly braces. I prefer to use TOML, so you’ll need to translate my examples if you prefer YAML or JSON.</p>
<p>The information in the front matter is passed into the template before the content is rendered into HTML.</p>
<h4 id="markdown">Markdown</h4>
<p>Content is written in Markdown which makes it easier to create the content. Hugo runs the content through a Markdown engine to create the HTML which will be written to the output file.</p>
<h3 id="template-files">Template Files</h3>
<p>Hugo uses template files to render content into HTML. Template files are a bridge between the content and presentation. Rules in the template define what content is published, where it&rsquo;s published to, and how it will rendered to the HTML file. The template guides the presentation by specifying the style to use.</p>
<p>There are three types of templates: single, list, and partial. Each type takes a bit of content as input and transforms it based on the commands in the template.</p>
<p>Hugo uses its knowledge of the content to find the template file used to render the content. If it can’t find a template that is an exact match for the content, it will shift up a level and search from there. It will continue to do so until it finds a matching template or runs out of templates to try. If it can’t find a template, it will use the default template for the site.</p>
<p>Please note that you can use the front matter to influence Hugo’s choice of templates.</p>
<h4 id="single-template">Single Template</h4>
<p>A single template is used to render a single piece of content. For example, an article or post would be a single piece of content and use a single template.</p>
<h4 id="list-template">List Template</h4>
<p>A list template renders a group of related content. That could be a summary of recent postings or all articles in a category. List templates can contain multiple groups.</p>
<p>The homepage template is a special type of list template. Hugo assumes that the home page of your site will act as the portal for the rest of the content in the site.</p>
<h4 id="partial-template">Partial Template</h4>
<p>A partial template is a template that can be included in other templates. Partial templates must be called using the “partial” template command. They are very handy for rolling up common behavior. For example, your site may have a banner that all pages use. Instead of copying the text of the banner into every single and list template, you could create a partial with the banner in it. That way if you decide to change the banner, you only have to change the partial template.</p>
<h2 id="create-a-new-site">Create a New Site</h2>
<p>Let&rsquo;s use Hugo to create a new web site. I&rsquo;m a Mac user, so I&rsquo;ll create mine in my home directory, in the Sites folder. If you&rsquo;re using Linux, you might have to create the folder first.</p>
<p>The &ldquo;new site&rdquo; command will create a skeleton of a site. It will give you the basic directory structure and a useable configuration file.</p>
<pre><code>$ hugo new site ~/Sites/zafta
$ cd ~/Sites/zafta
$ ls -l
total 8
drwxr-xr-x  7 quoha  staff  238 Sep 29 16:49 .
drwxr-xr-x  3 quoha  staff  102 Sep 29 16:49 ..
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 archetypes
-rw-r--r--  1 quoha  staff   82 Sep 29 16:49 config.toml
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 content
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 layouts
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 static
$
</code></pre><p>Take a look in the content/ directory to confirm that it is empty.</p>
<p>The other directories (archetypes/, layouts/, and static/) are used when customizing a theme. That&rsquo;s a topic for a different tutorial, so please ignore them for now.</p>
<h3 id="generate-the-html-for-the-new-site">Generate the HTML For the New Site</h3>
<p>Running the <code>hugo</code> command with no options will read all the available content and generate the HTML files. It will also copy all static files (that&rsquo;s everything that&rsquo;s not content). Since we have an empty site, it won&rsquo;t do much, but it will do it very quickly.</p>
<pre><code>$ hugo --verbose
INFO: 2014/09/29 Using config file: config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]
WARN: 2014/09/29 Unable to locate layout: [404.html]
0 draft content 
0 future content 
0 pages created 
0 tags created
0 categories created
in 2 ms
$ 
</code></pre><p>The &ldquo;<code>--verbose</code>&rdquo; flag gives extra information that will be helpful when we build the template. Every line of the output that starts with &ldquo;INFO:&rdquo; or &ldquo;WARN:&rdquo; is present because we used that flag. The lines that start with &ldquo;WARN:&rdquo; are warning messages. We&rsquo;ll go over them later.</p>
<p>We can verify that the command worked by looking at the directory again.</p>
<pre><code>$ ls -l
total 8
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 archetypes
-rw-r--r--  1 quoha  staff   82 Sep 29 16:49 config.toml
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 content
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 layouts
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:02 public
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 static
$
</code></pre><p>See that new public/ directory? Hugo placed all generated content there. When you&rsquo;re ready to publish your web site, that&rsquo;s the place to start. For now, though, let&rsquo;s just confirm that we have what we&rsquo;d expect from a site with no content.</p>
<pre><code>$ ls -l public
total 16
-rw-r--r--  1 quoha  staff  416 Sep 29 17:02 index.xml
-rw-r--r--  1 quoha  staff  262 Sep 29 17:02 sitemap.xml
$ 
</code></pre><p>Hugo created two XML files, which is standard, but there are no HTML files.</p>
<h3 id="test-the-new-site">Test the New Site</h3>
<p>Verify that you can run the built-in web server. It will dramatically shorten your development cycle if you do. Start it by running the &ldquo;server&rdquo; command. If it is successful, you will see output similar to the following:</p>
<pre><code>$ hugo server --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]
WARN: 2014/09/29 Unable to locate layout: [404.html]
0 draft content 
0 future content 
0 pages created 
0 tags created
0 categories created
in 2 ms
Serving pages from /Users/quoha/Sites/zafta/public
Web Server is available at http://localhost:1313
Press Ctrl+C to stop
</code></pre><p>Connect to the listed URL (it&rsquo;s on the line that starts with &ldquo;Web Server&rdquo;). If everything is working correctly, you should get a page that shows the following:</p>
<pre><code>index.xml
sitemap.xml
</code></pre><p>That&rsquo;s a listing of your public/ directory. Hugo didn&rsquo;t create a home page because our site has no content. When there&rsquo;s no index.html file in a directory, the server lists the files in the directory, which is what you should see in your browser.</p>
<p>Let’s go back and look at those warnings again.</p>
<pre><code>WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]
WARN: 2014/09/29 Unable to locate layout: [404.html]
</code></pre><p>That second warning is easier to explain. We haven’t created a template to be used to generate “page not found errors.” The 404 message is a topic for a separate tutorial.</p>
<p>Now for the first warning. It is for the home page. You can tell because the first layout that it looked for was “index.html.” That’s only used by the home page.</p>
<p>I like that the verbose flag causes Hugo to list the files that it&rsquo;s searching for. For the home page, they are index.html, _default/list.html, and _default/single.html. There are some rules that we&rsquo;ll cover later that explain the names and paths. For now, just remember that Hugo couldn&rsquo;t find a template for the home page and it told you so.</p>
<p>At this point, you&rsquo;ve got a working installation and site that we can build upon. All that’s left is to add some content and a theme to display it.</p>
<h2 id="create-a-new-theme">Create a New Theme</h2>
<p>Hugo doesn&rsquo;t ship with a default theme. There are a few available (I counted a dozen when I first installed Hugo) and Hugo comes with a command to create new themes.</p>
<p>We&rsquo;re going to create a new theme called &ldquo;zafta.&rdquo; Since the goal of this tutorial is to show you how to fill out the files to pull in your content, the theme will not contain any CSS. In other words, ugly but functional.</p>
<p>All themes have opinions on content and layout. For example, Zafta uses &ldquo;post&rdquo; over &ldquo;blog&rdquo;. Strong opinions make for simpler templates but differing opinions make it tougher to use themes. When you build a theme, consider using the terms that other themes do.</p>
<h3 id="create-a-skeleton">Create a Skeleton</h3>
<p>Use the hugo &ldquo;new&rdquo; command to create the skeleton of a theme. This creates the directory structure and places empty files for you to fill out.</p>
<pre><code>$ hugo new theme zafta

$ ls -l
total 8
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 archetypes
-rw-r--r--  1 quoha  staff   82 Sep 29 16:49 config.toml
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 content
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 layouts
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:02 public
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 static
drwxr-xr-x  3 quoha  staff  102 Sep 29 17:31 themes

$ find themes -type f | xargs ls -l
-rw-r--r--  1 quoha  staff  1081 Sep 29 17:31 themes/zafta/LICENSE.md
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/archetypes/default.md
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/_default/list.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/_default/single.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/index.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/partials/header.html
-rw-r--r--  1 quoha  staff    93 Sep 29 17:31 themes/zafta/theme.toml
$ 
</code></pre><p>The skeleton includes templates (the files ending in .html), license file, a description of your theme (the theme.toml file), and an empty archetype.</p>
<p>Please take a minute to fill out the theme.toml and LICENSE.md files. They&rsquo;re optional, but if you&rsquo;re going to be distributing your theme, it tells the world who to praise (or blame). It&rsquo;s also nice to declare the license so that people will know how they can use the theme.</p>
<pre><code>$ vi themes/zafta/theme.toml
author = &quot;michael d henderson&quot;
description = &quot;a minimal working template&quot;
license = &quot;MIT&quot;
name = &quot;zafta&quot;
source_repo = &quot;&quot;
tags = [&quot;tags&quot;, &quot;categories&quot;]
:wq

## also edit themes/zafta/LICENSE.md and change
## the bit that says &quot;YOUR_NAME_HERE&quot;
</code></pre><p>Note that the the skeleton&rsquo;s template files are empty. Don&rsquo;t worry, we&rsquo;ll be changing that shortly.</p>
<pre><code>$ find themes/zafta -name '*.html' | xargs ls -l
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/_default/list.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/_default/single.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/index.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/partials/header.html
$
</code></pre><h3 id="update-the-configuration-file-to-use-the-theme">Update the Configuration File to Use the Theme</h3>
<p>Now that we&rsquo;ve got a theme to work with, it&rsquo;s a good idea to add the theme name to the configuration file. This is optional, because you can always add &ldquo;-t zafta&rdquo; on all your commands. I like to put it the configuration file because I like shorter command lines. If you don&rsquo;t put it in the configuration file or specify it on the command line, you won&rsquo;t use the template that you&rsquo;re expecting to.</p>
<p>Edit the file to add the theme, add a title for the site, and specify that all of our content will use the TOML format.</p>
<pre><code>$ vi config.toml
theme = &quot;zafta&quot;
baseurl = &quot;&quot;
languageCode = &quot;en-us&quot;
title = &quot;zafta - totally refreshing&quot;
MetaDataFormat = &quot;toml&quot;
:wq

$
</code></pre><h3 id="generate-the-site">Generate the Site</h3>
<p>Now that we have an empty theme, let&rsquo;s generate the site again.</p>
<pre><code>$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
0 pages created 
0 tags created
0 categories created
in 2 ms
$
</code></pre><p>Did you notice that the output is different? The warning message for the home page has disappeared and we have an additional information line saying that Hugo is syncing from the theme&rsquo;s directory.</p>
<p>Let&rsquo;s check the public/ directory to see what Hugo&rsquo;s created.</p>
<pre><code>$ ls -l public
total 16
drwxr-xr-x  2 quoha  staff   68 Sep 29 17:56 css
-rw-r--r--  1 quoha  staff    0 Sep 29 17:56 index.html
-rw-r--r--  1 quoha  staff  407 Sep 29 17:56 index.xml
drwxr-xr-x  2 quoha  staff   68 Sep 29 17:56 js
-rw-r--r--  1 quoha  staff  243 Sep 29 17:56 sitemap.xml
$
</code></pre><p>Notice four things:</p>
<ol>
<li>Hugo created a home page. This is the file public/index.html.</li>
<li>Hugo created a css/ directory.</li>
<li>Hugo created a js/ directory.</li>
<li>Hugo claimed that it created 0 pages. It created a file and copied over static files, but didn&rsquo;t create any pages. That&rsquo;s because it considers a &ldquo;page&rdquo; to be a file created directly from a content file. It doesn&rsquo;t count things like the index.html files that it creates automatically.</li>
</ol>
<h4 id="the-home-page-1">The Home Page</h4>
<p>Hugo supports many different types of templates. The home page is special because it gets its own type of template and its own template file. The file, layouts/index.html, is used to generate the HTML for the home page. The Hugo documentation says that this is the only required template, but that depends. Hugo&rsquo;s warning message shows that it looks for three different templates:</p>
<pre><code>WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]
</code></pre><p>If it can&rsquo;t find any of these, it completely skips creating the home page. We noticed that when we built the site without having a theme installed.</p>
<p>When Hugo created our theme, it created an empty home page template. Now, when we build the site, Hugo finds the template and uses it to generate the HTML for the home page. Since the template file is empty, the HTML file is empty, too. If the template had any rules in it, then Hugo would have used them to generate the home page.</p>
<pre><code>$ find . -name index.html | xargs ls -l
-rw-r--r--  1 quoha  staff  0 Sep 29 20:21 ./public/index.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 ./themes/zafta/layouts/index.html
$ 
</code></pre><h4 id="the-magic-of-static">The Magic of Static</h4>
<p>Hugo does two things when generating the site. It uses templates to transform content into HTML and it copies static files into the site. Unlike content, static files are not transformed. They are copied exactly as they are.</p>
<p>Hugo assumes that your site will use both CSS and JavaScript, so it creates directories in your theme to hold them. Remember opinions? Well, Hugo&rsquo;s opinion is that you&rsquo;ll store your CSS in a directory named css/ and your JavaScript in a directory named js/. If you don&rsquo;t like that, you can change the directory names in your theme directory or even delete them completely. Hugo&rsquo;s nice enough to offer its opinion, then behave nicely if you disagree.</p>
<pre><code>$ find themes/zafta -type d | xargs ls -ld
drwxr-xr-x  7 quoha  staff  238 Sep 29 17:38 themes/zafta
drwxr-xr-x  3 quoha  staff  102 Sep 29 17:31 themes/zafta/archetypes
drwxr-xr-x  5 quoha  staff  170 Sep 29 17:31 themes/zafta/layouts
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:31 themes/zafta/layouts/_default
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:31 themes/zafta/layouts/partials
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:31 themes/zafta/static
drwxr-xr-x  2 quoha  staff   68 Sep 29 17:31 themes/zafta/static/css
drwxr-xr-x  2 quoha  staff   68 Sep 29 17:31 themes/zafta/static/js
$ 
</code></pre><h2 id="the-theme-development-cycle">The Theme Development Cycle</h2>
<p>When you&rsquo;re working on a theme, you will make changes in the theme&rsquo;s directory, rebuild the site, and check your changes in the browser. Hugo makes this very easy:</p>
<ol>
<li>Purge the public/ directory.</li>
<li>Run the built in web server in watch mode.</li>
<li>Open your site in a browser.</li>
<li>Update the theme.</li>
<li>Glance at your browser window to see changes.</li>
<li>Return to step 4.</li>
</ol>
<p>I’ll throw in one more opinion: never work on a theme on a live site. Always work on a copy of your site. Make changes to your theme, test them, then copy them up to your site. For added safety, use a tool like Git to keep a revision history of your content and your theme. Believe me when I say that it is too easy to lose both your mind and your changes.</p>
<p>Check the main Hugo site for information on using Git with Hugo.</p>
<h3 id="purge-the-public-directory">Purge the public/ Directory</h3>
<p>When generating the site, Hugo will create new files and update existing ones in the <code>public/</code> directory. It will not delete files that are no longer used. For example, files that were created in the wrong directory or with the wrong title will remain. If you leave them, you might get confused by them later. I recommend cleaning out your site prior to generating it.</p>
<p>Note: If you&rsquo;re building on an SSD, you should ignore this. Churning on a SSD can be costly.</p>
<h3 id="hugos-watch-option">Hugo&rsquo;s Watch Option</h3>
<p>Hugo&rsquo;s &ldquo;<code>--watch</code>&rdquo; option will monitor the content/ and your theme directories for changes and rebuild the site automatically.</p>
<h3 id="live-reload">Live Reload</h3>
<p>Hugo&rsquo;s built in web server supports live reload. As pages are saved on the server, the browser is told to refresh the page. Usually, this happens faster than you can say, &ldquo;Wow, that&rsquo;s totally amazing.&rdquo;</p>
<h3 id="development-commands">Development Commands</h3>
<p>Use the following commands as the basis for your workflow.</p>
<pre><code>## purge old files. hugo will recreate the public directory.
##
$ rm -rf public
##
## run hugo in watch mode
##
$ hugo server --watch --verbose
</code></pre><p>Here&rsquo;s sample output showing Hugo detecting a change to the template for the home page. Once generated, the web browser automatically reloaded the page. I&rsquo;ve said this before, it&rsquo;s amazing.</p>
<pre><code>$ rm -rf public
$ hugo server --watch --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
0 pages created 
0 tags created
0 categories created
in 2 ms
Watching for changes in /Users/quoha/Sites/zafta/content
Serving pages from /Users/quoha/Sites/zafta/public
Web Server is available at http://localhost:1313
Press Ctrl+C to stop
INFO: 2014/09/29 File System Event: [&quot;/Users/quoha/Sites/zafta/themes/zafta/layouts/index.html&quot;: MODIFY|ATTRIB]
Change detected, rebuilding site

WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
0 pages created 
0 tags created
0 categories created
in 1 ms
</code></pre><h2 id="update-the-home-page-template">Update the Home Page Template</h2>
<p>The home page is one of a few special pages that Hugo creates automatically. As mentioned earlier, it looks for one of three files in the theme&rsquo;s layout/ directory:</p>
<ol>
<li>index.html</li>
<li>_default/list.html</li>
<li>_default/single.html</li>
</ol>
<p>We could update one of the default templates, but a good design decision is to update the most specific template available. That&rsquo;s not a hard and fast rule (in fact, we&rsquo;ll break it a few times in this tutorial), but it is a good generalization.</p>
<h3 id="make-a-static-home-page">Make a Static Home Page</h3>
<p>Right now, that page is empty because we don&rsquo;t have any content and we don&rsquo;t have any logic in the template. Let&rsquo;s change that by adding some text to the template.</p>
<pre><code>$ vi themes/zafta/layouts/index.html
&lt;!DOCTYPE html&gt; 
&lt;html&gt; 
&lt;body&gt; 
  &lt;p&gt;hugo says hello!&lt;/p&gt; 
&lt;/body&gt; 
&lt;/html&gt; 
:wq

$
</code></pre><p>Build the web site and then verify the results.</p>
<pre><code>$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
0 pages created 
0 tags created
0 categories created
in 2 ms

$ find public -type f -name '*.html' | xargs ls -l
-rw-r--r--  1 quoha  staff  78 Sep 29 21:26 public/index.html

$ cat public/index.html 
&lt;!DOCTYPE html&gt; 
&lt;html&gt; 
&lt;body&gt; 
  &lt;p&gt;hugo says hello!&lt;/p&gt; 
&lt;/html&gt;
</code></pre><h4 id="live-reload-1">Live Reload</h4>
<p>Note: If you&rsquo;re running the server with the <code>--watch</code> option, you&rsquo;ll see different content in the file:</p>
<pre><code>$ cat public/index.html 
&lt;!DOCTYPE html&gt; 
&lt;html&gt; 
&lt;body&gt; 
  &lt;p&gt;hugo says hello!&lt;/p&gt; 
&lt;script&gt;document.write('&lt;script src=&quot;http://' 
        + (location.host || 'localhost').split(':')[0] 
    + ':1313/livereload.js?mindelay=10&quot;&gt;&lt;/' 
        + 'script&gt;')&lt;/script&gt;&lt;/body&gt; 
&lt;/html&gt;
</code></pre><p>When you use <code>--watch</code>, the Live Reload script is added by Hugo. Look for live reload in the documentation to see what it does and how to disable it.</p>
<h3 id="build-a-dynamic-home-page">Build a &ldquo;Dynamic&rdquo; Home Page</h3>
<p>&ldquo;Dynamic home page?&rdquo; Hugo&rsquo;s a static web site generator, so this seems an odd thing to say. I mean let&rsquo;s have the home page automatically reflect the content in the site every time Hugo builds it. We&rsquo;ll use iteration in the template to do that.</p>
<h4 id="create-new-posts">Create New Posts</h4>
<p>Now that we have the home page generating static content, let&rsquo;s add some content to the site. We&rsquo;ll display these posts as a list on the home page and on their own page, too.</p>
<p>Hugo has a command to generate a skeleton post, just like it does for sites and themes.</p>
<pre><code>$ hugo --verbose new post/first.md
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 attempting to create  post/first.md of post
INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/default.md
ERROR: 2014/09/29 Unable to Cast &lt;nil&gt; to map[string]interface{}

$ 
</code></pre><p>That wasn&rsquo;t very nice, was it?</p>
<p>The &ldquo;new&rdquo; command uses an archetype to create the post file. Hugo created an empty default archetype file, but that causes an error when there&rsquo;s a theme. For me, the workaround was to create an archetypes file specifically for the post type.</p>
<pre><code>$ vi themes/zafta/archetypes/post.md
+++
Description = &quot;&quot;
Tags = []
Categories = []
+++
:wq

$ find themes/zafta/archetypes -type f | xargs ls -l
-rw-r--r--  1 quoha  staff   0 Sep 29 21:53 themes/zafta/archetypes/default.md
-rw-r--r--  1 quoha  staff  51 Sep 29 21:54 themes/zafta/archetypes/post.md

$ hugo --verbose new post/first.md
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 attempting to create  post/first.md of post
INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md
INFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/first.md
/Users/quoha/Sites/zafta/content/post/first.md created

$ hugo --verbose new post/second.md
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 attempting to create  post/second.md of post
INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md
INFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/second.md
/Users/quoha/Sites/zafta/content/post/second.md created

$ ls -l content/post
total 16
-rw-r--r--  1 quoha  staff  104 Sep 29 21:54 first.md
-rw-r--r--  1 quoha  staff  105 Sep 29 21:57 second.md

$ cat content/post/first.md 
+++
Categories = []
Description = &quot;&quot;
Tags = []
date = &quot;2014-09-29T21:54:53-05:00&quot;
title = &quot;first&quot;

+++
my first post

$ cat content/post/second.md 
+++
Categories = []
Description = &quot;&quot;
Tags = []
date = &quot;2014-09-29T21:57:09-05:00&quot;
title = &quot;second&quot;

+++
my second post

$ 
</code></pre><p>Build the web site and then verify the results.</p>
<pre><code>$ rm -rf public
$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 found taxonomies: map[string]string{&quot;category&quot;:&quot;categories&quot;, &quot;tag&quot;:&quot;tags&quot;}
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
2 pages created 
0 tags created
0 categories created
in 4 ms
$
</code></pre><p>The output says that it created 2 pages. Those are our new posts:</p>
<pre><code>$ find public -type f -name '*.html' | xargs ls -l
-rw-r--r--  1 quoha  staff  78 Sep 29 22:13 public/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:13 public/post/first/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:13 public/post/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:13 public/post/second/index.html
$
</code></pre><p>The new files are empty because because the templates used to generate the content are empty. The homepage doesn&rsquo;t show the new content, either. We have to update the templates to add the posts.</p>
<h3 id="list-and-single-templates">List and Single Templates</h3>
<p>In Hugo, we have three major kinds of templates. There&rsquo;s the home page template that we updated previously. It is used only by the home page. We also have &ldquo;single&rdquo; templates which are used to generate output for a single content file. We also have &ldquo;list&rdquo; templates that are used to group multiple pieces of content before generating output.</p>
<p>Generally speaking, list templates are named &ldquo;list.html&rdquo; and single templates are named &ldquo;single.html.&rdquo;</p>
<p>There are three other types of templates: partials, content views, and terms. We will not go into much detail on these.</p>
<h3 id="add-content-to-the-homepage">Add Content to the Homepage</h3>
<p>The home page will contain a list of posts. Let&rsquo;s update its template to add the posts that we just created. The logic in the template will run every time we build the site.</p>
<pre><code>$ vi themes/zafta/layouts/index.html 
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;
  {{ range first 10 .Data.Pages }}
    &lt;h1&gt;{{ .Title }}&lt;/h1&gt;
  {{ end }}
&lt;/body&gt;
&lt;/html&gt;
:wq

$
</code></pre><p>Hugo uses the Go template engine. That engine scans the template files for commands which are enclosed between &ldquo;{{&rdquo; and &ldquo;}}&quot;. In our template, the commands are:</p>
<ol>
<li>range</li>
<li>.Title</li>
<li>end</li>
</ol>
<p>The &ldquo;range&rdquo; command is an iterator. We&rsquo;re going to use it to go through the first ten pages. Every HTML file that Hugo creates is treated as a page, so looping through the list of pages will look at every file that will be created.</p>
<p>The &ldquo;.Title&rdquo; command prints the value of the &ldquo;title&rdquo; variable. Hugo pulls it from the front matter in the Markdown file.</p>
<p>The &ldquo;end&rdquo; command signals the end of the range iterator. The engine loops back to the top of the iteration when it finds &ldquo;end.&rdquo; Everything between the &ldquo;range&rdquo; and &ldquo;end&rdquo; is evaluated every time the engine goes through the iteration. In this file, that would cause the title from the first ten pages to be output as heading level one.</p>
<p>It&rsquo;s helpful to remember that some variables, like .Data, are created before any output files. Hugo loads every content file into the variable and then gives the template a chance to process before creating the HTML files.</p>
<p>Build the web site and then verify the results.</p>
<pre><code>$ rm -rf public
$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 found taxonomies: map[string]string{&quot;tag&quot;:&quot;tags&quot;, &quot;category&quot;:&quot;categories&quot;}
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
2 pages created 
0 tags created
0 categories created
in 4 ms
$ find public -type f -name '*.html' | xargs ls -l 
-rw-r--r--  1 quoha  staff  94 Sep 29 22:23 public/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:23 public/post/first/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:23 public/post/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:23 public/post/second/index.html
$ cat public/index.html 
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;
  
    &lt;h1&gt;second&lt;/h1&gt;
  
    &lt;h1&gt;first&lt;/h1&gt;
  
&lt;/body&gt;
&lt;/html&gt;
$
</code></pre><p>Congratulations, the home page shows the title of the two posts. The posts themselves are still empty, but let&rsquo;s take a moment to appreciate what we&rsquo;ve done. Your template now generates output dynamically. Believe it or not, by inserting the range command inside of those curly braces, you&rsquo;ve learned everything you need to know to build a theme. All that&rsquo;s really left is understanding which template will be used to generate each content file and becoming familiar with the commands for the template engine.</p>
<p>And, if that were entirely true, this tutorial would be much shorter. There are a few things to know that will make creating a new template much easier. Don&rsquo;t worry, though, that&rsquo;s all to come.</p>
<h3 id="add-content-to-the-posts">Add Content to the Posts</h3>
<p>We&rsquo;re working with posts, which are in the content/post/ directory. That means that their section is &ldquo;post&rdquo; (and if we don&rsquo;t do something weird, their type is also &ldquo;post&rdquo;).</p>
<p>Hugo uses the section and type to find the template file for every piece of content. Hugo will first look for a template file that matches the section or type name. If it can&rsquo;t find one, then it will look in the _default/ directory. There are some twists that we&rsquo;ll cover when we get to categories and tags, but for now we can assume that Hugo will try post/single.html, then _default/single.html.</p>
<p>Now that we know the search rule, let&rsquo;s see what we actually have available:</p>
<pre><code>$ find themes/zafta -name single.html | xargs ls -l
-rw-r--r--  1 quoha  staff  132 Sep 29 17:31 themes/zafta/layouts/_default/single.html
</code></pre><p>We could create a new template, post/single.html, or change the default. Since we don&rsquo;t know of any other content types, let&rsquo;s start with updating the default.</p>
<p>Remember, any content that we haven&rsquo;t created a template for will end up using this template. That can be good or bad. Bad because I know that we&rsquo;re going to be adding different types of content and we&rsquo;re going to end up undoing some of the changes we&rsquo;ve made. It&rsquo;s good because we&rsquo;ll be able to see immediate results. It&rsquo;s also good to start here because we can start to build the basic layout for the site. As we add more content types, we&rsquo;ll refactor this file and move logic around. Hugo makes that fairly painless, so we&rsquo;ll accept the cost and proceed.</p>
<p>Please see the Hugo documentation on template rendering for all the details on determining which template to use. And, as the docs mention, if you&rsquo;re building a single page application (SPA) web site, you can delete all of the other templates and work with just the default single page. That&rsquo;s a refreshing amount of joy right there.</p>
<h4 id="update-the-template-file">Update the Template File</h4>
<pre><code>$ vi themes/zafta/layouts/_default/single.html 
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;{{ .Title }}&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;{{ .Title }}&lt;/h1&gt;
  {{ .Content }}
&lt;/body&gt;
&lt;/html&gt;
:wq

$
</code></pre><p>Build the web site and verify the results.</p>
<pre><code>$ rm -rf public
$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 found taxonomies: map[string]string{&quot;tag&quot;:&quot;tags&quot;, &quot;category&quot;:&quot;categories&quot;}
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
2 pages created 
0 tags created
0 categories created
in 4 ms

$ find public -type f -name '*.html' | xargs ls -l
-rw-r--r--  1 quoha  staff   94 Sep 29 22:40 public/index.html
-rw-r--r--  1 quoha  staff  125 Sep 29 22:40 public/post/first/index.html
-rw-r--r--  1 quoha  staff    0 Sep 29 22:40 public/post/index.html
-rw-r--r--  1 quoha  staff  128 Sep 29 22:40 public/post/second/index.html

$ cat public/post/first/index.html 
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;first&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;first&lt;/h1&gt;
  &lt;p&gt;my first post&lt;/p&gt;

&lt;/body&gt;
&lt;/html&gt;

$ cat public/post/second/index.html 
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;second&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;second&lt;/h1&gt;
  &lt;p&gt;my second post&lt;/p&gt;

&lt;/body&gt;
&lt;/html&gt;
$
</code></pre><p>Notice that the posts now have content. You can go to localhost:1313/post/first to verify.</p>
<h3 id="linking-to-content">Linking to Content</h3>
<p>The posts are on the home page. Let&rsquo;s add a link from there to the post. Since this is the home page, we&rsquo;ll update its template.</p>
<pre><code>$ vi themes/zafta/layouts/index.html
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;
  {{ range first 10 .Data.Pages }}
    &lt;h1&gt;&lt;a href=&quot;{{ .Permalink }}&quot;&gt;{{ .Title }}&lt;/a&gt;&lt;/h1&gt;
  {{ end }}
&lt;/body&gt;
&lt;/html&gt;
</code></pre><p>Build the web site and verify the results.</p>
<pre><code>$ rm -rf public
$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 found taxonomies: map[string]string{&quot;tag&quot;:&quot;tags&quot;, &quot;category&quot;:&quot;categories&quot;}
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
2 pages created 
0 tags created
0 categories created
in 4 ms

$ find public -type f -name '*.html' | xargs ls -l
-rw-r--r--  1 quoha  staff  149 Sep 29 22:44 public/index.html
-rw-r--r--  1 quoha  staff  125 Sep 29 22:44 public/post/first/index.html
-rw-r--r--  1 quoha  staff    0 Sep 29 22:44 public/post/index.html
-rw-r--r--  1 quoha  staff  128 Sep 29 22:44 public/post/second/index.html

$ cat public/index.html 
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;
  
    &lt;h1&gt;&lt;a href=&quot;/post/second/&quot;&gt;second&lt;/a&gt;&lt;/h1&gt;
  
    &lt;h1&gt;&lt;a href=&quot;/post/first/&quot;&gt;first&lt;/a&gt;&lt;/h1&gt;
  
&lt;/body&gt;
&lt;/html&gt;

$
</code></pre><h3 id="create-a-post-listing">Create a Post Listing</h3>
<p>We have the posts displaying on the home page and on their own page. We also have a file public/post/index.html that is empty. Let&rsquo;s make it show a list of all posts (not just the first ten).</p>
<p>We need to decide which template to update. This will be a listing, so it should be a list template. Let&rsquo;s take a quick look and see which list templates are available.</p>
<pre><code>$ find themes/zafta -name list.html | xargs ls -l
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/_default/list.html
</code></pre><p>As with the single post, we have to decide to update _default/list.html or create post/list.html. We still don&rsquo;t have multiple content types, so let&rsquo;s stay consistent and update the default list template.</p>
<h2 id="creating-top-level-pages">Creating Top Level Pages</h2>
<p>Let&rsquo;s add an &ldquo;about&rdquo; page and display it at the top level (as opposed to a sub-level like we did with posts).</p>
<p>The default in Hugo is to use the directory structure of the content/ directory to guide the location of the generated html in the public/ directory. Let&rsquo;s verify that by creating an &ldquo;about&rdquo; page at the top level:</p>
<pre><code>$ vi content/about.md 
+++
title = &quot;about&quot;
description = &quot;about this site&quot;
date = &quot;2014-09-27&quot;
slug = &quot;about time&quot;
+++

## about us

i'm speechless
:wq
</code></pre><p>Generate the web site and verify the results.</p>
<pre><code>$ find public -name '*.html' | xargs ls -l
-rw-rw-r--  1 mdhender  staff   334 Sep 27 15:08 public/about-time/index.html
-rw-rw-r--  1 mdhender  staff   527 Sep 27 15:08 public/index.html
-rw-rw-r--  1 mdhender  staff   358 Sep 27 15:08 public/post/first-post/index.html
-rw-rw-r--  1 mdhender  staff     0 Sep 27 15:08 public/post/index.html
-rw-rw-r--  1 mdhender  staff   342 Sep 27 15:08 public/post/second-post/index.html
</code></pre><p>Notice that the page wasn&rsquo;t created at the top level. It was created in a sub-directory named &lsquo;about-time/'. That name came from our slug. Hugo will use the slug to name the generated content. It&rsquo;s a reasonable default, by the way, but we can learn a few things by fighting it for this file.</p>
<p>One other thing. Take a look at the home page.</p>
<pre><code>$ cat public/index.html
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;
    &lt;h1&gt;&lt;a href=&quot;http://localhost:1313/post/theme/&quot;&gt;creating a new theme&lt;/a&gt;&lt;/h1&gt;
    &lt;h1&gt;&lt;a href=&quot;http://localhost:1313/about-time/&quot;&gt;about&lt;/a&gt;&lt;/h1&gt;
    &lt;h1&gt;&lt;a href=&quot;http://localhost:1313/post/second-post/&quot;&gt;second&lt;/a&gt;&lt;/h1&gt;
    &lt;h1&gt;&lt;a href=&quot;http://localhost:1313/post/first-post/&quot;&gt;first&lt;/a&gt;&lt;/h1&gt;
&lt;script&gt;document.write('&lt;script src=&quot;http://'
        + (location.host || 'localhost').split(':')[0]
		+ ':1313/livereload.js?mindelay=10&quot;&gt;&lt;/'
        + 'script&gt;')&lt;/script&gt;&lt;/body&gt;
&lt;/html&gt;
</code></pre><p>Notice that the &ldquo;about&rdquo; link is listed with the posts? That&rsquo;s not desirable, so let&rsquo;s change that first.</p>
<pre><code>$ vi themes/zafta/layouts/index.html
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;
  &lt;h1&gt;posts&lt;/h1&gt;
  {{ range first 10 .Data.Pages }}
    {{ if eq .Type &quot;post&quot;}}
      &lt;h2&gt;&lt;a href=&quot;{{ .Permalink }}&quot;&gt;{{ .Title }}&lt;/a&gt;&lt;/h2&gt;
    {{ end }}
  {{ end }}

  &lt;h1&gt;pages&lt;/h1&gt;
  {{ range .Data.Pages }}
    {{ if eq .Type &quot;page&quot; }}
      &lt;h2&gt;&lt;a href=&quot;{{ .Permalink }}&quot;&gt;{{ .Title }}&lt;/a&gt;&lt;/h2&gt;
    {{ end }}
  {{ end }}
&lt;/body&gt;
&lt;/html&gt;
:wq
</code></pre><p>Generate the web site and verify the results. The home page has two sections, posts and pages, and each section has the right set of headings and links in it.</p>
<p>But, that about page still renders to about-time/index.html.</p>
<pre><code>$ find public -name '*.html' | xargs ls -l
-rw-rw-r--  1 mdhender  staff    334 Sep 27 15:33 public/about-time/index.html
-rw-rw-r--  1 mdhender  staff    645 Sep 27 15:33 public/index.html
-rw-rw-r--  1 mdhender  staff    358 Sep 27 15:33 public/post/first-post/index.html
-rw-rw-r--  1 mdhender  staff      0 Sep 27 15:33 public/post/index.html
-rw-rw-r--  1 mdhender  staff    342 Sep 27 15:33 public/post/second-post/index.html
</code></pre><p>Knowing that hugo is using the slug to generate the file name, the simplest solution is to change the slug. Let&rsquo;s do it the hard way and change the permalink in the configuration file.</p>
<pre><code>$ vi config.toml
[permalinks]
	page = &quot;/:title/&quot;
	about = &quot;/:filename/&quot;
</code></pre><p>Generate the web site and verify that this didn&rsquo;t work. Hugo lets &ldquo;slug&rdquo; or &ldquo;URL&rdquo; override the permalinks setting in the configuration file. Go ahead and comment out the slug in content/about.md, then generate the web site to get it to be created in the right place.</p>
<h2 id="sharing-templates">Sharing Templates</h2>
<p>If you&rsquo;ve been following along, you probably noticed that posts have titles in the browser and the home page doesn&rsquo;t. That&rsquo;s because we didn&rsquo;t put the title in the home page&rsquo;s template (layouts/index.html). That&rsquo;s an easy thing to do, but let&rsquo;s look at a different option.</p>
<p>We can put the common bits into a shared template that&rsquo;s stored in the themes/zafta/layouts/partials/ directory.</p>
<h3 id="create-the-header-and-footer-partials">Create the Header and Footer Partials</h3>
<p>In Hugo, a partial is a sugar-coated template. Normally a template reference has a path specified. Partials are different. Hugo searches for them along a TODO defined search path. This makes it easier for end-users to override the theme&rsquo;s presentation.</p>
<pre><code>$ vi themes/zafta/layouts/partials/header.html
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;{{ .Title }}&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
:wq

$ vi themes/zafta/layouts/partials/footer.html
&lt;/body&gt;
&lt;/html&gt;
:wq
</code></pre><h3 id="update-the-home-page-template-to-use-the-partials">Update the Home Page Template to Use the Partials</h3>
<p>The most noticeable difference between a template call and a partials call is the lack of path:</p>
<pre><code>{{ template &quot;theme/partials/header.html&quot; . }}
</code></pre><p>versus</p>
<pre><code>{{ partial &quot;header.html&quot; . }}
</code></pre><p>Both pass in the context.</p>
<p>Let&rsquo;s change the home page template to use these new partials.</p>
<pre><code>$ vi themes/zafta/layouts/index.html
{{ partial &quot;header.html&quot; . }}

  &lt;h1&gt;posts&lt;/h1&gt;
  {{ range first 10 .Data.Pages }}
    {{ if eq .Type &quot;post&quot;}}
      &lt;h2&gt;&lt;a href=&quot;{{ .Permalink }}&quot;&gt;{{ .Title }}&lt;/a&gt;&lt;/h2&gt;
    {{ end }}
  {{ end }}

  &lt;h1&gt;pages&lt;/h1&gt;
  {{ range .Data.Pages }}
    {{ if or (eq .Type &quot;page&quot;) (eq .Type &quot;about&quot;) }}
      &lt;h2&gt;&lt;a href=&quot;{{ .Permalink }}&quot;&gt;{{ .Type }} - {{ .Title }} - {{ .RelPermalink }}&lt;/a&gt;&lt;/h2&gt;
    {{ end }}
  {{ end }}

{{ partial &quot;footer.html&quot; . }}
:wq
</code></pre><p>Generate the web site and verify the results. The title on the home page is now &ldquo;your title here&rdquo;, which comes from the &ldquo;title&rdquo; variable in the config.toml file.</p>
<h3 id="update-the-default-single-template-to-use-the-partials">Update the Default Single Template to Use the Partials</h3>
<pre><code>$ vi themes/zafta/layouts/_default/single.html
{{ partial &quot;header.html&quot; . }}

  &lt;h1&gt;{{ .Title }}&lt;/h1&gt;
  {{ .Content }}

{{ partial &quot;footer.html&quot; . }}
:wq
</code></pre><p>Generate the web site and verify the results. The title on the posts and the about page should both reflect the value in the markdown file.</p>
<h2 id="add-date-published-to-posts">Add “Date Published” to Posts</h2>
<p>It&rsquo;s common to have posts display the date that they were written or published, so let&rsquo;s add that. The front matter of our posts has a variable named &ldquo;date.&rdquo; It&rsquo;s usually the date the content was created, but let&rsquo;s pretend that&rsquo;s the value we want to display.</p>
<h3 id="add-date-published-to-the-template">Add “Date Published” to the Template</h3>
<p>We&rsquo;ll start by updating the template used to render the posts. The template code will look like:</p>
<pre><code>{{ .Date.Format &quot;Mon, Jan 2, 2006&quot; }}
</code></pre><p>Posts use the default single template, so we&rsquo;ll change that file.</p>
<pre><code>$ vi themes/zafta/layouts/_default/single.html
{{ partial &quot;header.html&quot; . }}

  &lt;h1&gt;{{ .Title }}&lt;/h1&gt;
  &lt;h2&gt;{{ .Date.Format &quot;Mon, Jan 2, 2006&quot; }}&lt;/h2&gt;
  {{ .Content }}

{{ partial &quot;footer.html&quot; . }}
:wq
</code></pre><p>Generate the web site and verify the results. The posts now have the date displayed in them. There&rsquo;s a problem, though. The &ldquo;about&rdquo; page also has the date displayed.</p>
<p>As usual, there are a couple of ways to make the date display only on posts. We could do an &ldquo;if&rdquo; statement like we did on the home page. Another way would be to create a separate template for posts.</p>
<p>The &ldquo;if&rdquo; solution works for sites that have just a couple of content types. It aligns with the principle of &ldquo;code for today,&rdquo; too.</p>
<p>Let&rsquo;s assume, though, that we&rsquo;ve made our site so complex that we feel we have to create a new template type. In Hugo-speak, we&rsquo;re going to create a section template.</p>
<p>Let&rsquo;s restore the default single template before we forget.</p>
<pre><code>$ mkdir themes/zafta/layouts/post
$ vi themes/zafta/layouts/_default/single.html
{{ partial &quot;header.html&quot; . }}

  &lt;h1&gt;{{ .Title }}&lt;/h1&gt;
  {{ .Content }}

{{ partial &quot;footer.html&quot; . }}
:wq
</code></pre><p>Now we&rsquo;ll update the post&rsquo;s version of the single template. If you remember Hugo&rsquo;s rules, the template engine will use this version over the default.</p>
<pre><code>$ vi themes/zafta/layouts/post/single.html
{{ partial &quot;header.html&quot; . }}

  &lt;h1&gt;{{ .Title }}&lt;/h1&gt;
  &lt;h2&gt;{{ .Date.Format &quot;Mon, Jan 2, 2006&quot; }}&lt;/h2&gt;
  {{ .Content }}

{{ partial &quot;footer.html&quot; . }}
:wq

</code></pre><p>Note that we removed the date logic from the default template and put it in the post template. Generate the web site and verify the results. Posts have dates and the about page doesn&rsquo;t.</p>
<h3 id="dont-repeat-yourself">Don&rsquo;t Repeat Yourself</h3>
<p>DRY is a good design goal and Hugo does a great job supporting it. Part of the art of a good template is knowing when to add a new template and when to update an existing one. While you&rsquo;re figuring that out, accept that you&rsquo;ll be doing some refactoring. Hugo makes that easy and fast, so it&rsquo;s okay to delay splitting up a template.</p>
]]></content>
		</item>
		
		<item>
			<title>(Hu)go Template Primer</title>
			<link>https://example.com/posts/goisforlovers/</link>
			<pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
			
			<guid>https://example.com/posts/goisforlovers/</guid>
			<description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
			<content type="html"><![CDATA[<p>Hugo uses the excellent <a href="https://golang.org/">Go</a> <a href="https://golang.org/pkg/html/template/">html/template</a> library for
its template engine. It is an extremely lightweight engine that provides a very
small amount of logic. In our experience that it is just the right amount of
logic to be able to create a good static website. If you have used other
template systems from different languages or frameworks you will find a lot of
similarities in Go templates.</p>
<p>This document is a brief primer on using Go templates. The <a href="https://golang.org/pkg/html/template/">Go docs</a>
provide more details.</p>
<h2 id="introduction-to-go-templates">Introduction to Go Templates</h2>
<p>Go templates provide an extremely simple template language. It adheres to the
belief that only the most basic of logic belongs in the template or view layer.
One consequence of this simplicity is that Go templates parse very quickly.</p>
<p>A unique characteristic of Go templates is they are content aware. Variables and
content will be sanitized depending on the context of where they are used. More
details can be found in the <a href="https://golang.org/pkg/html/template/">Go docs</a>.</p>
<h2 id="basic-syntax">Basic Syntax</h2>
<p>Golang templates are HTML files with the addition of variables and
functions.</p>
<p><strong>Go variables and functions are accessible within {{ }}</strong></p>
<p>Accessing a predefined variable &ldquo;foo&rdquo;:</p>
<pre><code>{{ foo }}
</code></pre>
<p><strong>Parameters are separated using spaces</strong></p>
<p>Calling the add function with input of 1, 2:</p>
<pre><code>{{ add 1 2 }}
</code></pre>
<p><strong>Methods and fields are accessed via dot notation</strong></p>
<p>Accessing the Page Parameter &ldquo;bar&rdquo;</p>
<pre><code>{{ .Params.bar }}
</code></pre>
<p><strong>Parentheses can be used to group items together</strong></p>
<pre><code>{{ if or (isset .Params &quot;alt&quot;) (isset .Params &quot;caption&quot;) }} Caption {{ end }}
</code></pre>
<h2 id="variables">Variables</h2>
<p>Each Go template has a struct (object) made available to it. In hugo each
template is passed either a page or a node struct depending on which type of
page you are rendering. More details are available on the
<a href="/layout/variables">variables</a> page.</p>
<p>A variable is accessed by referencing the variable name.</p>
<pre><code>&lt;title&gt;{{ .Title }}&lt;/title&gt;
</code></pre>
<p>Variables can also be defined and referenced.</p>
<pre><code>{{ $address := &quot;123 Main St.&quot;}}
{{ $address }}
</code></pre>
<h2 id="functions">Functions</h2>
<p>Go template ship with a few functions which provide basic functionality. The Go
template system also provides a mechanism for applications to extend the
available functions with their own. <a href="/layout/functions">Hugo template
functions</a> provide some additional functionality we believe
are useful for building websites. Functions are called by using their name
followed by the required parameters separated by spaces. Template
functions cannot be added without recompiling hugo.</p>
<p><strong>Example:</strong></p>
<pre><code>{{ add 1 2 }}
</code></pre>
<h2 id="includes">Includes</h2>
<p>When including another template you will pass to it the data it will be
able to access. To pass along the current context please remember to
include a trailing dot. The templates location will always be starting at
the /layout/ directory within Hugo.</p>
<p><strong>Example:</strong></p>
<pre><code>{{ template &quot;chrome/header.html&quot; . }}
</code></pre>
<h2 id="logic">Logic</h2>
<p>Go templates provide the most basic iteration and conditional logic.</p>
<h3 id="iteration">Iteration</h3>
<p>Just like in Go, the Go templates make heavy use of range to iterate over
a map, array or slice. The following are different examples of how to use
range.</p>
<p><strong>Example 1: Using Context</strong></p>
<pre><code>{{ range array }}
    {{ . }}
{{ end }}
</code></pre>
<p><strong>Example 2: Declaring value variable name</strong></p>
<pre><code>{{range $element := array}}
    {{ $element }}
{{ end }}
</code></pre>
<p><strong>Example 2: Declaring key and value variable name</strong></p>
<pre><code>{{range $index, $element := array}}
    {{ $index }}
    {{ $element }}
{{ end }}
</code></pre>
<h3 id="conditionals">Conditionals</h3>
<p>If, else, with, or, &amp; and provide the framework for handling conditional
logic in Go Templates. Like range, each statement is closed with <code>end</code>.</p>
<p>Go Templates treat the following values as false:</p>
<ul>
<li>false</li>
<li>0</li>
<li>any array, slice, map, or string of length zero</li>
</ul>
<p><strong>Example 1: If</strong></p>
<pre><code>{{ if isset .Params &quot;title&quot; }}&lt;h4&gt;{{ index .Params &quot;title&quot; }}&lt;/h4&gt;{{ end }}
</code></pre>
<p><strong>Example 2: If -&gt; Else</strong></p>
<pre><code>{{ if isset .Params &quot;alt&quot; }}
    {{ index .Params &quot;alt&quot; }}
{{else}}
    {{ index .Params &quot;caption&quot; }}
{{ end }}
</code></pre>
<p><strong>Example 3: And &amp; Or</strong></p>
<pre><code>{{ if and (or (isset .Params &quot;title&quot;) (isset .Params &quot;caption&quot;)) (isset .Params &quot;attr&quot;)}}
</code></pre>
<p><strong>Example 4: With</strong></p>
<p>An alternative way of writing &ldquo;if&rdquo; and then referencing the same value
is to use &ldquo;with&rdquo; instead. With rebinds the context <code>.</code> within its scope,
and skips the block if the variable is absent.</p>
<p>The first example above could be simplified as:</p>
<pre><code>{{ with .Params.title }}&lt;h4&gt;{{ . }}&lt;/h4&gt;{{ end }}
</code></pre>
<p><strong>Example 5: If -&gt; Else If</strong></p>
<pre><code>{{ if isset .Params &quot;alt&quot; }}
    {{ index .Params &quot;alt&quot; }}
{{ else if isset .Params &quot;caption&quot; }}
    {{ index .Params &quot;caption&quot; }}
{{ end }}
</code></pre>
<h2 id="pipes">Pipes</h2>
<p>One of the most powerful components of Go templates is the ability to
stack actions one after another. This is done by using pipes. Borrowed
from unix pipes, the concept is simple, each pipeline&rsquo;s output becomes the
input of the following pipe.</p>
<p>Because of the very simple syntax of Go templates, the pipe is essential
to being able to chain together function calls. One limitation of the
pipes is that they only can work with a single value and that value
becomes the last parameter of the next pipeline.</p>
<p>A few simple examples should help convey how to use the pipe.</p>
<p><strong>Example 1 :</strong></p>
<pre><code>{{ if eq 1 1 }} Same {{ end }}
</code></pre>
<p>is the same as</p>
<pre><code>{{ eq 1 1 | if }} Same {{ end }}
</code></pre>
<p>It does look odd to place the if at the end, but it does provide a good
illustration of how to use the pipes.</p>
<p><strong>Example 2 :</strong></p>
<pre><code>{{ index .Params &quot;disqus_url&quot; | html }}
</code></pre>
<p>Access the page parameter called &ldquo;disqus_url&rdquo; and escape the HTML.</p>
<p><strong>Example 3 :</strong></p>
<pre><code>{{ if or (or (isset .Params &quot;title&quot;) (isset .Params &quot;caption&quot;)) (isset .Params &quot;attr&quot;)}}
Stuff Here
{{ end }}
</code></pre>
<p>Could be rewritten as</p>
<pre><code>{{  isset .Params &quot;caption&quot; | or isset .Params &quot;title&quot; | or isset .Params &quot;attr&quot; | if }}
Stuff Here
{{ end }}
</code></pre>
<h2 id="context-aka-the-dot">Context (aka. the dot)</h2>
<p>The most easily overlooked concept to understand about Go templates is that {{ . }}
always refers to the current context. In the top level of your template this
will be the data set made available to it. Inside of a iteration it will have
the value of the current item. When inside of a loop the context has changed. .
will no longer refer to the data available to the entire page. If you need to
access this from within the loop you will likely want to set it to a variable
instead of depending on the context.</p>
<p><strong>Example:</strong></p>
<pre><code>  {{ $title := .Site.Title }}
  {{ range .Params.tags }}
    &lt;li&gt; &lt;a href=&quot;{{ $baseurl }}/tags/{{ . | urlize }}&quot;&gt;{{ . }}&lt;/a&gt; - {{ $title }} &lt;/li&gt;
  {{ end }}
</code></pre>
<p>Notice how once we have entered the loop the value of {{ . }} has changed. We
have defined a variable outside of the loop so we have access to it from within
the loop.</p>
<h1 id="hugo-parameters">Hugo Parameters</h1>
<p>Hugo provides the option of passing values to the template language
through the site configuration (for sitewide values), or through the meta
data of each specific piece of content. You can define any values of any
type (supported by your front matter/config format) and use them however
you want to inside of your templates.</p>
<h2 id="using-content-page-parameters">Using Content (page) Parameters</h2>
<p>In each piece of content you can provide variables to be used by the
templates. This happens in the <a href="/content/front-matter">front matter</a>.</p>
<p>An example of this is used in this documentation site. Most of the pages
benefit from having the table of contents provided. Sometimes the TOC just
doesn&rsquo;t make a lot of sense. We&rsquo;ve defined a variable in our front matter
of some pages to turn off the TOC from being displayed.</p>
<p>Here is the example front matter:</p>
<pre><code>---
title: &quot;Permalinks&quot;
date: &quot;2013-11-18&quot;
aliases:
  - &quot;/doc/permalinks/&quot;
groups: [&quot;extras&quot;]
groups_weight: 30
notoc: true
---
</code></pre><p>Here is the corresponding code inside of the template:</p>
<pre><code>  {{ if not .Params.notoc }}
    &lt;div id=&quot;toc&quot; class=&quot;well col-md-4 col-sm-6&quot;&gt;
    {{ .TableOfContents }}
    &lt;/div&gt;
  {{ end }}
</code></pre>
<h2 id="using-site-config-parameters">Using Site (config) Parameters</h2>
<p>In your top-level configuration file (eg, <code>config.yaml</code>) you can define site
parameters, which are values which will be available to you in chrome.</p>
<p>For instance, you might declare:</p>
<div class="highlight"><pre class="chroma"><code class="language-yaml" data-lang="yaml"><span class="k">params</span><span class="p">:</span><span class="w">
</span><span class="w">  </span><span class="k">CopyrightHTML</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Copyright &amp;#xA9; 2013 John Doe. All Rights Reserved.&#34;</span><span class="w">
</span><span class="w">  </span><span class="k">TwitterUser</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;spf13&#34;</span><span class="w">
</span><span class="w">  </span><span class="k">SidebarRecentLimit</span><span class="p">:</span><span class="w"> </span><span class="m">5</span><span class="w">
</span></code></pre></div><p>Within a footer layout, you might then declare a <code>&lt;footer&gt;</code> which is only
provided if the <code>CopyrightHTML</code> parameter is provided, and if it is given,
you would declare it to be HTML-safe, so that the HTML entity is not escaped
again.  This would let you easily update just your top-level config file each
January 1st, instead of hunting through your templates.</p>
<pre><code>{{if .Site.Params.CopyrightHTML}}&lt;footer&gt;
&lt;div class=&quot;text-center&quot;&gt;{{.Site.Params.CopyrightHTML | safeHtml}}&lt;/div&gt;
&lt;/footer&gt;{{end}}
</code></pre><p>An alternative way of writing the &ldquo;if&rdquo; and then referencing the same value
is to use &ldquo;with&rdquo; instead. With rebinds the context <code>.</code> within its scope,
and skips the block if the variable is absent:</p>
<pre><code>{{with .Site.Params.TwitterUser}}&lt;span class=&quot;twitter&quot;&gt;
&lt;a href=&quot;https://twitter.com/{{.}}&quot; rel=&quot;author&quot;&gt;
&lt;img src=&quot;/images/twitter.png&quot; width=&quot;48&quot; height=&quot;48&quot; title=&quot;Twitter: {{.}}&quot;
 alt=&quot;Twitter&quot;&gt;&lt;/a&gt;
&lt;/span&gt;{{end}}
</code></pre><p>Finally, if you want to pull &ldquo;magic constants&rdquo; out of your layouts, you can do
so, such as in this example:</p>
<pre><code>&lt;nav class=&quot;recent&quot;&gt;
  &lt;h1&gt;Recent Posts&lt;/h1&gt;
  &lt;ul&gt;{{range first .Site.Params.SidebarRecentLimit .Site.Recent}}
    &lt;li&gt;&lt;a href=&quot;{{.RelPermalink}}&quot;&gt;{{.Title}}&lt;/a&gt;&lt;/li&gt;
  {{end}}&lt;/ul&gt;
&lt;/nav&gt;
</code></pre>]]></content>
		</item>
		
		<item>
			<title>Getting Started with Hugo</title>
			<link>https://example.com/posts/hugoisforlovers/</link>
			<pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
			
			<guid>https://example.com/posts/hugoisforlovers/</guid>
			<description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
			<content type="html"><![CDATA[<h2 id="step-1-install-hugo">Step 1. Install Hugo</h2>
<p>Go to <a href="https://github.com/spf13/hugo/releases">Hugo releases</a> and download the
appropriate version for your OS and architecture.</p>
<p>Save it somewhere specific as we will be using it in the next step.</p>
<p>More complete instructions are available at <a href="https://gohugo.io/getting-started/installing/">Install Hugo</a></p>
<h2 id="step-2-build-the-docs">Step 2. Build the Docs</h2>
<p>Hugo has its own example site which happens to also be the documentation site
you are reading right now.</p>
<p>Follow the following steps:</p>
<ol>
<li>Clone the <a href="http://github.com/spf13/hugo">Hugo repository</a></li>
<li>Go into the repo</li>
<li>Run hugo in server mode and build the docs</li>
<li>Open your browser to http://localhost:1313</li>
</ol>
<p>Corresponding pseudo commands:</p>
<pre><code>git clone https://github.com/spf13/hugo
cd hugo
/path/to/where/you/installed/hugo server --source=./docs
&gt; 29 pages created
&gt; 0 tags index created
&gt; in 27 ms
&gt; Web Server is available at http://localhost:1313
&gt; Press ctrl+c to stop
</code></pre>
<p>Once you&rsquo;ve gotten here, follow along the rest of this page on your local build.</p>
<h2 id="step-3-change-the-docs-site">Step 3. Change the docs site</h2>
<p>Stop the Hugo process by hitting Ctrl+C.</p>
<p>Now we are going to run hugo again, but this time with hugo in watch mode.</p>
<pre><code>/path/to/hugo/from/step/1/hugo server --source=./docs --watch
&gt; 29 pages created
&gt; 0 tags index created
&gt; in 27 ms
&gt; Web Server is available at http://localhost:1313
&gt; Watching for changes in /Users/spf13/Code/hugo/docs/content
&gt; Press ctrl+c to stop
</code></pre>
<p>Open your <a href="http://vim.spf13.com">favorite editor</a> and change one of the source
content pages. How about changing this very file to <em>fix the typo</em>. How about changing this very file to <em>fix the typo</em>.</p>
<p>Content files are found in <code>docs/content/</code>. Unless otherwise specified, files
are located at the same relative location as the url, in our case
<code>docs/content/overview/quickstart.md</code>.</p>
<p>Change and save this file.. Notice what happened in your terminal.</p>
<pre><code>&gt; Change detected, rebuilding site

&gt; 29 pages created
&gt; 0 tags index created
&gt; in 26 ms
</code></pre>
<p>Refresh the browser and observe that the typo is now fixed.</p>
<p>Notice how quick that was. Try to refresh the site before it&rsquo;s finished building. I double dare you.
Having nearly instant feedback enables you to have your creativity flow without waiting for long builds.</p>
<h2 id="step-4-have-fun">Step 4. Have fun</h2>
<p>The best way to learn something is to play with it.</p>
]]></content>
		</item>
		
		<item>
			<title></title>
			<link>https://example.com/posts/beego/</link>
			<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
			
			<guid>https://example.com/posts/beego/</guid>
			<description>beego架构 积木式集合
cache 缓存模块
config 配置模块
context 上下文模块
logs 日志模块
orm	和数据库操作相关模块
session 会话
httplib 网络相关模块
beego执行逻辑 页面(V) &amp;mdash; 控制(C) &amp;mdash; 数据库(M)
beego项目结构 |_____config | |---app.config |_____controllers(C) | |---admin | |---default.go |_____main.go |_____modles(M) | |---modles.go |_____static | |---css | |---ico | |---img | |---js |_____views(V) | |---admin | |---index.tpl config 配置文件
controllers 控制ceng
main.go 主入口
modles 和数据库相关
statics 静态文件(html, css, js)
views 页面展示
快速开发 1.环境安装
2.安装bee工具
bee命令 new 基于web开发
api 基于手机接口开发</description>
			<content type="html"><![CDATA[<h4 id="beego架构">beego架构</h4>
<p>积木式集合</p>
<p>cache 缓存模块</p>
<p>config 配置模块</p>
<p>context 上下文模块</p>
<p>logs 日志模块</p>
<p>orm	和数据库操作相关模块</p>
<p>session 会话</p>
<p>httplib 网络相关模块</p>
<h4 id="beego执行逻辑">beego执行逻辑</h4>
<p>页面(V) &mdash; 控制(C) &mdash; 数据库(M)</p>
<h4 id="beego项目结构">beego项目结构</h4>
<pre><code>|_____config
|   |---app.config
|_____controllers(C)
|   |---admin
|   |---default.go
|_____main.go
|_____modles(M)
|   |---modles.go
|_____static
|   |---css
|   |---ico
|   |---img
|   |---js
|_____views(V)
|   |---admin
|   |---index.tpl
</code></pre><p>config 配置文件</p>
<p>controllers 控制ceng</p>
<p>main.go 主入口</p>
<p>modles 和数据库相关</p>
<p>statics 静态文件(html, css, js)</p>
<p>views 页面展示</p>
<h4 id="快速开发">快速开发</h4>
<p>1.环境安装</p>
<p>2.安装bee工具</p>
<h4 id="bee命令">bee命令</h4>
<p>new  基于web开发</p>
<p>api  基于手机接口开发</p>
<p>run  运行</p>
<pre><code>new命令
.
├── conf
│   └── app.conf
├── controllers
│   └── default.go
├── main.go
├── models
├── routers
│   └── router.go
├── static
│   ├── css
│   ├── img
│   └── js
│       └── reload.min.js
├── tests
│   └── default_test.go
└── views
    └── index.tpl
</code></pre><pre><code>api命令
.
├── conf
│   └── app.conf
├── controllers
│   ├── object.go
│   └── user.go
├── main.go
├── models
│   ├── object.go
│   └── user.go
├── routers
│   └── router.go
└── tests
    └── default_test.go
</code></pre><pre><code>run命令
bee run (在项目根目录去执行)
http://172.0.0.1:8080/
</code></pre><h4 id="配置文件">配置文件</h4>
<h5 id="1系统配置">1.系统配置</h5>
<pre><code>appname = myweb
httpport = 8080
runmode = dev prod test
</code></pre><h5 id="2应用配置">2.应用配置</h5>
<p>配置数据库</p>
<pre><code>动态配置:
runmode
[dev]
httpport = 8080
[test]
httpport = 8081
[prod]
httpport = 8082
</code></pre><h4 id="路径操作">路径操作</h4>
<h5 id="1固定路由">1.固定路由</h5>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="nx">beego</span><span class="p">.</span><span class="nf">Router</span><span class="p">(</span><span class="s">&#34;/&#34;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">controllers</span><span class="p">.</span><span class="nx">MainController</span><span class="p">{})</span>
<span class="nx">beego</span><span class="p">.</span><span class="nf">Router</span><span class="p">(</span><span class="s">&#34;/admin&#34;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">controllers</span><span class="p">.</span><span class="nx">UserController</span><span class="p">{})</span>
<span class="nx">beego</span><span class="p">.</span><span class="nf">Router</span><span class="p">(</span><span class="s">&#34;/admin/index&#34;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">controllers</span><span class="p">.</span><span class="nx">ArticleController</span><span class="p">{})</span>
<span class="nx">beego</span><span class="p">.</span><span class="nf">Router</span><span class="p">(</span><span class="s">&#34;/admin/addpkg&#34;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">controllers</span><span class="p">.</span><span class="nx">AddController</span><span class="p">{})</span>
</code></pre></div><h5 id="2基础路由">2.基础路由</h5>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="nx">基本Get路由</span>
<span class="nx">beego</span><span class="p">.</span><span class="nf">Get</span><span class="p">(</span><span class="s">&#34;/&#34;</span><span class="p">,</span><span class="kd">func</span><span class="p">(</span><span class="nx">ctx</span> <span class="o">*</span><span class="nx">context</span><span class="p">.</span><span class="nx">Context</span><span class="p">){</span>
	<span class="nx">ctx</span><span class="p">.</span><span class="nx">Output</span><span class="p">.</span><span class="nf">Body</span><span class="p">([]</span><span class="kt">byte</span> <span class="p">(</span><span class="s">&#34;hello world&#34;</span><span class="p">))</span>
<span class="p">})</span>
</code></pre></div><div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="nx">基本Post路由</span>
<span class="nx">beego</span><span class="p">.</span><span class="nf">Post</span><span class="p">(</span><span class="s">&#34;/&#34;</span><span class="p">,</span><span class="kd">func</span><span class="p">(</span><span class="nx">ctx</span> <span class="o">*</span><span class="nx">context</span><span class="p">.</span><span class="nx">Context</span><span class="p">){</span>
	<span class="nx">ctx</span><span class="p">.</span><span class="nx">Output</span><span class="p">.</span><span class="nf">Body</span><span class="p">([]</span><span class="kt">byte</span> <span class="p">(</span><span class="s">&#34;hello world&#34;</span><span class="p">))</span>
<span class="p">})</span>
</code></pre></div><h5 id="3自定义方法及restful规则">3.自定义方法及RESTful规则</h5>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="nx">beego</span><span class="p">.</span><span class="nf">Router</span><span class="p">(</span><span class="s">&#34;/&#34;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">IndexController</span><span class="p">{},</span> <span class="s">&#34;*:Index&#34;</span><span class="p">)</span>
<span class="o">*</span><span class="nx">post</span> <span class="nx">get</span> <span class="nx">put</span> <span class="nx">delete</span>
<span class="mf">127.0.0.1</span><span class="p">:</span><span class="mi">8080</span><span class="o">/</span>  <span class="p">(</span><span class="nx">post</span> <span class="nx">get</span> <span class="nx">put</span> <span class="nx">delete</span><span class="p">)</span>

<span class="kd">func</span> <span class="nf">init</span><span class="p">()</span> <span class="p">{</span>
	<span class="nx">beego</span><span class="p">.</span><span class="nf">Router</span><span class="p">(</span><span class="s">&#34;/&#34;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">controllers</span><span class="p">.</span><span class="nx">MainController</span><span class="p">{},</span> <span class="s">&#34;post:Get&#34;</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div><h4 id="操作">操作</h4>
<h5 id="1控制器两个方法">1.控制器两个方法</h5>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kd">func</span> <span class="p">(</span><span class="nx">c</span> <span class="o">*</span><span class="nx">MainController</span><span class="p">)</span> <span class="nf">Get</span><span class="p">()</span> <span class="p">{</span>
	<span class="nx">c</span><span class="p">.</span><span class="nx">Data</span><span class="p">[</span><span class="s">&#34;Website&#34;</span><span class="p">]</span> <span class="p">=</span> <span class="s">&#34;beego.me&#34;</span>
	<span class="nx">c</span><span class="p">.</span><span class="nx">Data</span><span class="p">[</span><span class="s">&#34;Email&#34;</span><span class="p">]</span> <span class="p">=</span> <span class="s">&#34;astaxie@gmail.com&#34;</span>
	<span class="nx">c</span><span class="p">.</span><span class="nx">TplName</span> <span class="p">=</span> <span class="s">&#34;myindex.tpl&#34;</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="p">(</span><span class="nx">c</span> <span class="o">*</span><span class="nx">MainController</span><span class="p">)</span> <span class="nf">Test</span><span class="p">()</span> <span class="p">{</span>
	<span class="nx">c</span><span class="p">.</span><span class="nx">Ctx</span><span class="p">.</span><span class="nf">WriteString</span><span class="p">(</span><span class="s">&#34;this is method post!&#34;</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div><h5 id="2路由配置">2.路由配置</h5>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kd">func</span> <span class="nf">init</span><span class="p">()</span> <span class="p">{</span>
	<span class="nx">beego</span><span class="p">.</span><span class="nf">Router</span><span class="p">(</span><span class="s">&#34;/&#34;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">controllers</span><span class="p">.</span><span class="nx">MainController</span><span class="p">{},</span> <span class="s">&#34;post:Get&#34;</span><span class="p">,</span> <span class="s">&#34;post:Test&#34;</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div><h5 id="3curl测试">3.curl测试</h5>
<pre><code>curl -d 'id=1' '127.0.0.1:8080'
</code></pre><h5 id="案例">案例</h5>
<h6 id="1写控制器">1.写控制器</h6>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kn">package</span> <span class="nx">controllers</span>

<span class="kn">import</span> <span class="p">(</span>
	<span class="s">&#34;github.com/astaxie/beego&#34;</span>
<span class="p">)</span>

<span class="kd">type</span> <span class="nx">TestController</span> <span class="kd">struct</span> <span class="p">{</span>
	<span class="nx">beego</span><span class="p">.</span><span class="nx">Controller</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="p">(</span><span class="nx">c</span> <span class="o">*</span><span class="nx">TestController</span><span class="p">)</span> <span class="nf">Get</span><span class="p">()</span>  <span class="p">{</span>
	<span class="nx">c</span><span class="p">.</span><span class="nx">Ctx</span><span class="p">.</span><span class="nf">WriteString</span><span class="p">(</span><span class="s">&#34;beego controller&#34;</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div><h6 id="写路由">写路由</h6>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kd">func</span> <span class="nf">init</span><span class="p">()</span> <span class="p">{</span>
	<span class="nx">beego</span><span class="p">.</span><span class="nf">Router</span><span class="p">(</span><span class="s">&#34;/&#34;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">controllers</span><span class="p">.</span><span class="nx">MainController</span><span class="p">{},</span> <span class="s">&#34;post:Get&#34;</span><span class="p">,</span> <span class="s">&#34;post:Test&#34;</span><span class="p">)</span>
	<span class="nx">beego</span><span class="p">.</span><span class="nf">Router</span><span class="p">(</span><span class="s">&#34;/test&#34;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">controllers</span><span class="p">.</span><span class="nx">MainController</span><span class="p">{},</span> <span class="s">&#34;post:Get&#34;</span><span class="p">,</span> <span class="s">&#34;post:Test&#34;</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div><h6 id="3开启">3.开启</h6>
<pre><code>bee run
</code></pre><h6 id="4测试">4.测试</h6>
<pre><code>curl去请求
post:
curl -d 'id=1' '127.0.0.1:8080/test'
get:
curl 127.0.0.1:8080/test'
</code></pre><h4 id="请求参数">请求参数</h4>
<p>http://192.168.0.12/?id=xxx&amp;name=xxxx</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="nf">GetString</span><span class="p">(</span><span class="nx">key</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">string</span>
<span class="nf">GetStrings</span><span class="p">(</span><span class="nx">key</span> <span class="kt">string</span><span class="p">)</span> <span class="p">[]</span><span class="kt">string</span>
<span class="nf">GetInt</span><span class="p">(</span><span class="nx">key</span> <span class="kt">string</span><span class="p">)</span> <span class="p">(</span><span class="kt">int64</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span>
<span class="nf">GetBool</span><span class="p">(</span><span class="nx">key</span> <span class="kt">string</span><span class="p">)</span> <span class="p">(</span><span class="kt">bool</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span>
<span class="nf">GetFloat</span><span class="p">(</span><span class="nx">key</span> <span class="kt">string</span><span class="p">)</span> <span class="p">(</span><span class="kt">float64</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span>

<span class="nx">this</span><span class="p">.</span><span class="nf">Input</span><span class="p">().</span><span class="nf">Get</span><span class="p">(</span><span class="s">&#34;id&#34;</span><span class="p">)</span>
</code></pre></div><h5 id="案例-1">案例</h5>
<h6 id="1控制器获取参数">1.控制器获取参数</h6>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kn">package</span> <span class="nx">controllers</span>

<span class="kn">import</span> <span class="p">(</span>
	<span class="s">&#34;github.com/astaxie/beego&#34;</span>
<span class="p">)</span>

<span class="kd">type</span> <span class="nx">TestArgController</span> <span class="kd">struct</span> <span class="p">{</span>
	<span class="nx">beego</span><span class="p">.</span><span class="nx">Controller</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="p">(</span><span class="nx">c</span> <span class="o">*</span><span class="nx">TestArgController</span><span class="p">)</span> <span class="nf">Get</span><span class="p">()</span> <span class="p">{</span>
	<span class="nx">id</span> <span class="o">:=</span> <span class="nx">c</span><span class="p">.</span><span class="nf">GetString</span><span class="p">(</span><span class="s">&#34;id&#34;</span><span class="p">)</span>
	<span class="nx">c</span><span class="p">.</span><span class="nx">Ctx</span><span class="p">.</span><span class="nf">WriteString</span><span class="p">(</span><span class="nx">id</span><span class="p">)</span>

	<span class="nx">name</span> <span class="o">:=</span> <span class="nx">c</span><span class="p">.</span><span class="nf">Input</span><span class="p">().</span><span class="nf">Get</span><span class="p">(</span><span class="s">&#34;name&#34;</span><span class="p">)</span>
	<span class="nx">c</span><span class="p">.</span><span class="nx">Ctx</span><span class="p">.</span><span class="nf">WriteString</span><span class="p">(</span><span class="nx">name</span><span class="p">)</span>
<span class="p">}</span>

</code></pre></div><h6 id="2写路由">2.写路由</h6>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="nx">beego</span><span class="p">.</span><span class="nf">Router</span><span class="p">(</span><span class="s">&#34;/test/arg&#34;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">controllers</span><span class="p">.</span><span class="nx">TestArgController</span><span class="p">{},</span> <span class="s">&#34;get:Get;post:Post&#34;</span><span class="p">)</span>
</code></pre></div><h6 id="3访问">3.访问</h6>
<p>http://localhost:8080//test/arg?id=10&amp;name=xiang</p>
<h5 id="获取结构体">获取结构体</h5>
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">form</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;user&#34;</span> <span class="na">action</span><span class="o">=</span><span class="s">&#34;http://127.0.0.1:8080/test/arg&#34;</span> <span class="na">method</span><span class="o">=</span><span class="s">&#34;post&#34;</span><span class="p">&gt;</span>
            名字: <span class="p">&lt;</span><span class="nt">input</span> <span class="na">name</span><span class="o">=</span><span class="s">&#34;username&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text&#34;</span> <span class="p">/&gt;</span>
            年龄: <span class="p">&lt;</span><span class="nt">input</span> <span class="na">name</span><span class="o">=</span><span class="s">&#34;age&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text&#34;</span> <span class="p">/&gt;</span>
            邮箱: <span class="p">&lt;</span><span class="nt">input</span> <span class="na">name</span><span class="o">=</span><span class="s">&#34;email&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text&#34;</span> <span class="p">/&gt;</span>
            <span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;submit&#34;</span> <span class="na">value</span><span class="o">=</span><span class="s">&#34;提交&#34;</span> <span class="p">/&gt;</span>
</code></pre></div><div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kn">package</span> <span class="nx">controllers</span>

<span class="kn">import</span> <span class="p">(</span>
	<span class="s">&#34;github.com/astaxie/beego&#34;</span>
<span class="p">)</span>

<span class="kd">type</span> <span class="nx">User</span> <span class="kd">struct</span> <span class="p">{</span>
	<span class="nx">Uid</span>      <span class="kt">int</span>    <span class="s">`form:&#34;-&#34;`</span>
	<span class="nx">Username</span> <span class="kt">string</span> <span class="s">`form:&#34;username&#34;`</span>
	<span class="nx">Age</span>      <span class="kt">string</span> <span class="s">`form:&#34;age&#34;`</span>
	<span class="nx">Email</span>    <span class="kt">string</span> <span class="s">`form:&#34;email&#34;`</span>
<span class="p">}</span>
<span class="kd">type</span> <span class="nx">TestArgController</span> <span class="kd">struct</span> <span class="p">{</span>
	<span class="nx">beego</span><span class="p">.</span><span class="nx">Controller</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="p">(</span><span class="nx">c</span> <span class="o">*</span><span class="nx">TestArgController</span><span class="p">)</span> <span class="nf">Get</span><span class="p">()</span> <span class="p">{</span>
	<span class="nx">c</span><span class="p">.</span><span class="nx">TplName</span> <span class="p">=</span> <span class="s">&#34;myindex.tpl&#34;</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="p">(</span><span class="nx">c</span> <span class="o">*</span><span class="nx">TestArgController</span><span class="p">)</span> <span class="nf">Post</span><span class="p">()</span> <span class="p">{</span>
	<span class="nx">u</span> <span class="o">:=</span> <span class="nx">User</span><span class="p">{}</span>
	<span class="k">if</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">c</span><span class="p">.</span><span class="nf">ParseForm</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">u</span><span class="p">);</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>

	<span class="p">}</span>
	<span class="nx">c</span><span class="p">.</span><span class="nx">Ctx</span><span class="p">.</span><span class="nf">WriteString</span><span class="p">(</span><span class="s">&#34;Username:&#34;</span> <span class="o">+</span> <span class="nx">u</span><span class="p">.</span><span class="nx">Username</span> <span class="o">+</span> <span class="s">&#34;Age:&#34;</span> <span class="o">+</span> <span class="nx">u</span><span class="p">.</span><span class="nx">Age</span> <span class="o">+</span> <span class="s">&#34;Email:&#34;</span> <span class="o">+</span> <span class="nx">u</span><span class="p">.</span><span class="nx">Email</span><span class="p">)</span>
<span class="p">}</span>

</code></pre></div><h4 id="model层">model层</h4>
<p>beego ORM是一个强大的go语言ORM框架</p>
<h5 id="1orm特性">1.ORM特性</h5>
<pre><code>支持go所有类型存储
简单易上手
自动Join关联表
跨数据库兼容
允许直接使用SQL查询/映射
</code></pre><h5 id="2代码实战">2.代码实战</h5>
<h6 id="1控制器">1.控制器</h6>
<p>xxxController</p>
<p>TestMode.go</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kd">func</span> <span class="nf">init</span><span class="p">()</span> <span class="p">{</span>
	<span class="nx">err</span> <span class="o">:=</span> <span class="nx">orm</span><span class="p">.</span><span class="nf">RegisterDataBase</span><span class="p">(</span><span class="s">&#34;default&#34;</span><span class="p">,</span> <span class="s">&#34;mysql&#34;</span><span class="p">,</span> <span class="s">&#34;root:li000000@tcp(127.0.0.1:3306)/WebTest?charset=utf8&#34;</span><span class="p">,</span> <span class="mi">30</span><span class="p">)</span>
	<span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
		<span class="nb">panic</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
	<span class="p">}</span>
	<span class="nx">orm</span><span class="p">.</span><span class="nf">RegisterModel</span><span class="p">(</span><span class="nb">new</span><span class="p">(</span><span class="nx">UserInfo</span><span class="p">))</span> <span class="c1">//创建一个user_info表 UserInfo
</span><span class="c1"></span><span class="p">}</span>

<span class="kd">func</span> <span class="p">(</span><span class="nx">c</span> <span class="o">*</span><span class="nx">TestModelController</span><span class="p">)</span> <span class="nf">Get</span><span class="p">()</span> <span class="p">{</span>
	<span class="nx">o</span> <span class="o">:=</span> <span class="nx">orm</span><span class="p">.</span><span class="nf">NewOrm</span><span class="p">()</span>
	<span class="nx">user</span> <span class="o">:=</span> <span class="nx">UserInfo</span><span class="p">{</span><span class="nx">Username</span><span class="p">:</span> <span class="s">&#34;xiang&#34;</span><span class="p">,</span> <span class="nx">Password</span><span class="p">:</span> <span class="s">&#34;123456&#34;</span><span class="p">}</span>
	<span class="nx">id</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">o</span><span class="p">.</span><span class="nf">Insert</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">user</span><span class="p">)</span>

	<span class="nx">c</span><span class="p">.</span><span class="nx">Ctx</span><span class="p">.</span><span class="nf">WriteString</span><span class="p">(</span><span class="nx">fmt</span><span class="p">.</span><span class="nf">Sprintf</span><span class="p">(</span><span class="s">&#34;操作数据库id=%d err:%v&#34;</span><span class="p">,</span> <span class="nx">id</span><span class="p">,</span> <span class="nx">err</span><span class="p">))</span>

<span class="p">}</span>
</code></pre></div><p>router.go</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kn">package</span> <span class="nx">routers</span>

<span class="kn">import</span> <span class="p">(</span>
	<span class="s">&#34;github.com/astaxie/beego&#34;</span>
	<span class="s">&#34;github.com/beego/bee/myweb/controllers&#34;</span>
<span class="p">)</span>

<span class="kd">func</span> <span class="nf">init</span><span class="p">()</span> <span class="p">{</span>
	<span class="nx">beego</span><span class="p">.</span><span class="nf">Router</span><span class="p">(</span><span class="s">&#34;/&#34;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">controllers</span><span class="p">.</span><span class="nx">MainController</span><span class="p">{},</span> <span class="s">&#34;get:Get;post:Test&#34;</span><span class="p">)</span>
	<span class="nx">beego</span><span class="p">.</span><span class="nf">Router</span><span class="p">(</span><span class="s">&#34;/test&#34;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">controllers</span><span class="p">.</span><span class="nx">TestController</span><span class="p">{},</span> <span class="s">&#34;get:Get;post:Post&#34;</span><span class="p">)</span>
	<span class="nx">beego</span><span class="p">.</span><span class="nf">Router</span><span class="p">(</span><span class="s">&#34;/test/arg&#34;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">controllers</span><span class="p">.</span><span class="nx">TestArgController</span><span class="p">{},</span> <span class="s">&#34;get:Get;post:Post&#34;</span><span class="p">)</span>
	<span class="c1">//测试ORM
</span><span class="c1"></span>	<span class="nx">beego</span><span class="p">.</span><span class="nf">Router</span><span class="p">(</span><span class="s">&#34;/test/orm&#34;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">controllers</span><span class="p">.</span><span class="nx">TestModelController</span><span class="p">{},</span> <span class="s">&#34;get:Get;post:Post&#34;</span><span class="p">)</span>
<span class="p">}</span>

</code></pre></div>]]></content>
		</item>
		
		<item>
			<title></title>
			<link>https://example.com/posts/dbgsystem/</link>
			<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
			
			<guid>https://example.com/posts/dbgsystem/</guid>
			<description>1. Trace 1.1 cloud agent/src/cmagtstatus.c 44: LOG_ERROR(&amp;#34;STATS : Create sending timer list failure! \n&amp;#34;); 81: LOG_FATAL(&amp;#34;STATUS : Single status obj is NULL! \n&amp;#34;); 121: LOG_ERROR(&amp;#34;STATUS :Start publishing timer failure! \n&amp;#34;); 140: LOG_ERROR(&amp;#34;STATUS :Stop publishing timer failure! \n&amp;#34;); agent/src/cmagtfwupgrade.c 81: LOG_INFO(&amp;#34;FW Upgrade is busy!\n&amp;#34;); 100: LOG_ERROR(&amp;#34;Create FW upgrade task fail ! \n&amp;#34;); 142: CM_CL_LOG_MSG(SYSLOG_INFO_LEVEL,CL_LOG_FW_UPGRADE_PROGRESS, 143: SYSLOG_KEY_STRING, CL_FW_UPGRADE_REASON_CODE_NONE); 164: CM_CL_LOG_MSG(SYSLOG_CRITICAL_LEVEL,CL_LOG_FW_UPGRADE_FAILED, 165: SYSLOG_KEY_STRING, gau1ErrorReason); 223: LOG_INFO(&amp;#34;CmAPIWebnmHttpCltFileDownload error[%d]!\n&amp;#34;,i4HttpCltError); 241: CM_CL_LOG_MSG(SYSLOG_CRITICAL_LEVEL,CL_LOG_FW_UPGRADE_FAILED, 242: SYSLOG_KEY_STRING, au1ErrorStr); 254: CM_CL_LOG_MSG(SYSLOG_INFO_LEVEL,CL_LOG_FW_UPGRADE_PROGRESS, 255: SYSLOG_KEY_STRING, CL_FW_UPGRADE_DOWNLOAD_SUCCESS); 265: LOG_INFO(&amp;#34;CmAPIFwUpgradeProcess error!</description>
			<content type="html"><![CDATA[<h4 id="1-trace">1. Trace</h4>
<h5 id="11-cloud">1.1 cloud</h5>
<div class="highlight"><pre class="chroma"><code class="language-c" data-lang="c">
<span class="n">agent</span><span class="o">/</span><span class="n">src</span><span class="o">/</span><span class="n">cmagtstatus</span><span class="p">.</span><span class="n">c</span>
<span class="mi">44</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;STATS : Create sending timer list failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">81</span><span class="o">:</span>        <span class="n">LOG_FATAL</span><span class="p">(</span><span class="s">&#34;STATUS : Single status obj is NULL! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">121</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;STATUS :Start publishing timer failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">140</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;STATUS :Stop publishing timer failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>

<span class="n">agent</span><span class="o">/</span><span class="n">src</span><span class="o">/</span><span class="n">cmagtfwupgrade</span><span class="p">.</span><span class="n">c</span>
<span class="mi">81</span><span class="o">:</span>                        <span class="n">LOG_INFO</span><span class="p">(</span><span class="s">&#34;FW Upgrade is busy!</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">100</span><span class="o">:</span>                        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Create FW upgrade task fail ! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">142</span><span class="o">:</span>        <span class="n">CM_CL_LOG_MSG</span><span class="p">(</span><span class="n">SYSLOG_INFO_LEVEL</span><span class="p">,</span><span class="n">CL_LOG_FW_UPGRADE_PROGRESS</span><span class="p">,</span>
<span class="mi">143</span><span class="o">:</span>                            <span class="n">SYSLOG_KEY_STRING</span><span class="p">,</span> <span class="n">CL_FW_UPGRADE_REASON_CODE_NONE</span><span class="p">);</span>
<span class="mi">164</span><span class="o">:</span>            <span class="n">CM_CL_LOG_MSG</span><span class="p">(</span><span class="n">SYSLOG_CRITICAL_LEVEL</span><span class="p">,</span><span class="n">CL_LOG_FW_UPGRADE_FAILED</span><span class="p">,</span>
<span class="mi">165</span><span class="o">:</span>                                            <span class="n">SYSLOG_KEY_STRING</span><span class="p">,</span> <span class="n">gau1ErrorReason</span><span class="p">);</span>
<span class="mi">223</span><span class="o">:</span>        <span class="n">LOG_INFO</span><span class="p">(</span><span class="s">&#34;CmAPIWebnmHttpCltFileDownload error[%d]!</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span><span class="n">i4HttpCltError</span><span class="p">);</span>
<span class="mi">241</span><span class="o">:</span>            <span class="n">CM_CL_LOG_MSG</span><span class="p">(</span><span class="n">SYSLOG_CRITICAL_LEVEL</span><span class="p">,</span><span class="n">CL_LOG_FW_UPGRADE_FAILED</span><span class="p">,</span>
<span class="mi">242</span><span class="o">:</span>                                <span class="n">SYSLOG_KEY_STRING</span><span class="p">,</span> <span class="n">au1ErrorStr</span><span class="p">);</span>
<span class="mi">254</span><span class="o">:</span>        <span class="n">CM_CL_LOG_MSG</span><span class="p">(</span><span class="n">SYSLOG_INFO_LEVEL</span><span class="p">,</span><span class="n">CL_LOG_FW_UPGRADE_PROGRESS</span><span class="p">,</span>
<span class="mi">255</span><span class="o">:</span>                                            <span class="n">SYSLOG_KEY_STRING</span><span class="p">,</span> <span class="n">CL_FW_UPGRADE_DOWNLOAD_SUCCESS</span><span class="p">);</span>
<span class="mi">265</span><span class="o">:</span>        <span class="n">LOG_INFO</span><span class="p">(</span><span class="s">&#34;CmAPIFwUpgradeProcess error!</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">273</span><span class="o">:</span>            <span class="n">CM_CL_LOG_MSG</span><span class="p">(</span><span class="n">SYSLOG_CRITICAL_LEVEL</span><span class="p">,</span><span class="n">CL_LOG_FW_UPGRADE_FAILED</span><span class="p">,</span>
<span class="mi">274</span><span class="o">:</span>                                            <span class="n">SYSLOG_KEY_STRING</span><span class="p">,</span> <span class="n">CL_FW_UPGRADE_VERIFICATION_FAIL</span><span class="p">);</span>

<span class="n">agent</span><span class="o">/</span><span class="n">src</span><span class="o">/</span><span class="n">cmagtnotify</span><span class="p">.</span><span class="n">c</span>
<span class="mi">42</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;EVENT_NOTIFY : Init fai </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">118</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;EVENT_NOTIFY : Current connectivity state:%d </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span><span class="n">i4State</span><span class="p">);</span>
<span class="mi">162</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;EVENT_NOTIFY : The event notify log can not send to server or add to temporary list </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">191</span><span class="o">:</span>        <span class="n">LOG_INFO</span><span class="p">(</span><span class="s">&#34;EVENT_NOTIFY :  Temporary list is full ,would overwrite old event</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">221</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;EVENT_NOTIFY :  Send all event log in temporary list.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">294</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;EVENT_NOTIFY : New event notify .</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">309</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;EVENT_NOTIFY : Alloc event notify memory fail.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">334</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;EVENT_NOTIFY : Send new event notify to queue fail.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">341</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;EVENT_NOTIFY : Send AGT_DATA_RCVD_EVENT EVENT fail.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">345</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;EVENT_NOTIFY : New event notify exit.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>

<span class="n">agent</span><span class="o">/</span><span class="n">src</span><span class="o">/</span><span class="n">cmagtmain</span><span class="p">.</span><span class="n">c</span>
<span class="mi">40</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Cloud Agent init fail! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">63</span><span class="o">:</span>                    <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Add AGT_SOCKET_ID select fail! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">84</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Cloud Agent get taskid fail! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">93</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Cloud Agent context sem create fail! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">100</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Cloud Agent socket init fail! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">107</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Cloud Agent socket init fail! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">162</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span> <span class="s">&#34;Cloud Agent socket init begin! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">167</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Cloud Agent socket open fail! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">179</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Cloud Agent socket bind fail! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">186</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Cloud Agent socket SelAddFd fail! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">190</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;Cloud Agent socket init complete! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">205</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span> <span class="p">(</span><span class="s">&#34;cmAgentSockCallBk ENTRY </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">211</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span> <span class="p">(</span><span class="s">&#34;cmAgentSockCallBk EXIT</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">237</span><span class="o">:</span>        <span class="n">LOG_ERROR</span> <span class="p">(</span> <span class="s">&#34;Cloud agent receive data fail! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">240</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;agent receive  msg from adapter&#34;</span><span class="p">);</span>
<span class="mi">245</span><span class="o">:</span>        <span class="n">LOG_ERROR</span> <span class="p">(</span> <span class="s">&#34;Cloud agent parse msg fail! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">288</span><span class="o">:</span>            <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Send msg to Adapter fail retry:%d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span><span class="n">i4Retries</span><span class="p">);</span>
<span class="mi">296</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;End agent send  msg to adapter&#34;</span><span class="p">);</span>

<span class="n">agent</span><span class="o">/</span><span class="n">src</span><span class="o">/</span><span class="n">cmagtmsg</span><span class="p">.</span><span class="n">c</span>
<span class="mi">154</span><span class="o">:</span>        <span class="n">LOG_FATAL</span><span class="p">(</span><span class="s">&#34;pu1Msg is NULL :%s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">__FUNCTION__</span><span class="p">);</span>
<span class="mi">160</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;parse string to cJson format fail! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">166</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Message format incorrect!</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">202</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Message format incorrect!</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">239</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Message object is NULL! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">246</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Message format incorrect!</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">273</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Get message command id fail!</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">291</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Message object is NULL! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">381</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;MSG : RPC Resopnse data is NULL ! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">392</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;MSG : Cannt get result data from rpc data ! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">1477</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;STATS:Create statistic request cjson fail &#34;</span><span class="p">);</span>
<span class="mi">1490</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;STATS:Convenvert cjson format data to json string format fail&#34;</span><span class="p">);</span>
<span class="mi">1501</span><span class="o">:</span>        <span class="n">LOG_FATAL</span><span class="p">(</span><span class="s">&#34;STATS:Get statistic data fail&#34;</span><span class="p">);</span>
<span class="mi">1528</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;STATS:Get statistic data fail&#34;</span><span class="p">);</span>
<span class="mi">1537</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;STATS:Create cjson obj fail&#34;</span><span class="p">);</span>
<span class="mi">1566</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;STATUS:Create status request cjson fail &#34;</span><span class="p">);</span>
<span class="mi">1579</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;STATUS:Convenvert cjson format data to json string format fail&#34;</span><span class="p">);</span>
<span class="mi">1589</span><span class="o">:</span>        <span class="n">LOG_FATAL</span><span class="p">(</span><span class="s">&#34;STATUS:Get status data fail&#34;</span><span class="p">);</span>
<span class="mi">1616</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;STATUS:Get status data fail&#34;</span><span class="p">);</span>
<span class="mi">1625</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;STATUS:Create cjson obj fail&#34;</span><span class="p">);</span>
<span class="mi">1653</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;STATS:Create Vct request cjson fail &#34;</span><span class="p">);</span>
<span class="mi">1663</span><span class="o">:</span>         <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;STATS:Create Vct request cjson fail &#34;</span><span class="p">);</span>

<span class="n">agent</span><span class="o">/</span><span class="n">src</span><span class="o">/</span><span class="n">cmagtcfgproc</span><span class="p">.</span><span class="n">c</span>
<span class="mi">59</span><span class="o">:</span>                        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Config request message is incorrect! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">74</span><span class="o">:</span>                        <span class="n">LOG_INFO</span><span class="p">(</span><span class="s">&#34;CFG process is busy!</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">89</span><span class="o">:</span>                        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Create process CFG task fail ! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">115</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;Start configuration progress</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">133</span><span class="o">:</span>            <span class="n">LOG_FATAL</span><span class="p">(</span><span class="s">&#34;Clear runing config fail,reboot system </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">152</span><span class="o">:</span>            <span class="n">LOG_FATAL</span><span class="p">(</span><span class="s">&#34;CFG call RPC function fail! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">166</span><span class="o">:</span>        <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;Save configuration successfully</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">183</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;End configuration progress</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>

<span class="n">agent</span><span class="o">/</span><span class="n">src</span><span class="o">/</span><span class="n">cmagtfdb</span><span class="p">.</span><span class="n">c</span>
<span class="mi">69</span><span class="o">:</span>                        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;message is incorrect!</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">79</span><span class="o">:</span>                        <span class="n">LOG_WARNING</span><span class="p">(</span><span class="s">&#34;MAC Forwarding Table get is busy!</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">93</span><span class="o">:</span>                        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Create process handler task fail ! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">179</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;Start construct mac forwarding table message</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">290</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;Total FDB:%d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>

<span class="n">Binary</span> <span class="n">file</span> <span class="n">obj</span><span class="o">/</span><span class="n">cloud</span><span class="p">.</span><span class="n">x86</span> <span class="n">matches</span><span class="p">.</span>

<span class="n">agent</span><span class="o">/</span><span class="n">src</span><span class="o">/</span><span class="n">cmagtstats</span><span class="p">.</span><span class="n">c</span>
<span class="mi">38</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;STATS :Start publishing timer failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">45</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;STATS :Start collection timer failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">63</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;STATS :Stop publishing timer failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">70</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;STATS :Stop collection timer failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">117</span><span class="o">:</span>                <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;STATS : Dynamic create global satitistic json store array fail! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">123</span><span class="o">:</span>                <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;STATS :Start publishing timer failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">140</span><span class="o">:</span>                    <span class="n">LOG_FATAL</span><span class="p">(</span><span class="s">&#34;STATS : Single statistics obj is NULL! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">145</span><span class="o">:</span>                <span class="n">LOG_FATAL</span><span class="p">(</span><span class="s">&#34;STATS : global satitistic json store array is NULL! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">151</span><span class="o">:</span>                <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;STATS : Start timer failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">186</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;STATS : Create global satitistic json store array fail! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">192</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;STATS : Create sending timer list failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>

<span class="n">agent</span><span class="o">/</span><span class="n">src</span><span class="o">/</span><span class="n">cmagtled</span><span class="p">.</span><span class="n">c</span>
<span class="mi">47</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Cloudy LED:Create timer list failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">95</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Cloudy LED:Get Imformation from buf failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">101</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Cloudy LED:Set Led Crtl failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">113</span><span class="o">:</span>                <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Cloudy LED:ReStart timer failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">121</span><span class="o">:</span>                <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Cloudy LED:Start timer failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">134</span><span class="o">:</span>                <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Cloudy LED:Stop timer failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>

<span class="n">agent</span><span class="o">/</span><span class="n">src</span><span class="o">/</span><span class="n">cmagtapi</span><span class="p">.</span><span class="n">c</span>
<span class="mi">33</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;EVENT_NOTIFY : New event notify input process fail.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>

<span class="n">agent</span><span class="o">/</span><span class="n">src</span><span class="o">/</span><span class="n">cmagtdbgtrack</span><span class="p">.</span><span class="n">c</span>
<span class="mi">63</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Cloudy LED:Create timer list failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">111</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Cloudy LED:Get Imformation from buf failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">117</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Cloudy LED:Set Led Crtl failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">129</span><span class="o">:</span>                <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Cloudy LED:ReStart timer failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">137</span><span class="o">:</span>                <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Cloudy LED:Start timer failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">150</span><span class="o">:</span>                <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Cloudy LED:Stop timer failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>

<span class="n">common</span><span class="o">/</span><span class="n">src</span><span class="o">/</span><span class="n">cmxxxwrap</span><span class="p">.</span><span class="n">c</span>
<span class="mi">612</span><span class="o">:</span>        <span class="n">LOG_DEBUG</span> <span class="p">(</span><span class="s">&#34;Failed to register with IPv4 module.</span><span class="se">\r\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">644</span><span class="o">:</span>            <span class="n">LOG_DEBUG</span> <span class="p">(</span><span class="s">&#34;IP Address changed and reconnecting to server.</span><span class="se">\r\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">645</span><span class="o">:</span>            <span class="n">CmAPIIPChangeCloudLogSend</span><span class="p">(</span><span class="n">CLLOG_IP</span><span class="p">,</span> <span class="n">pNetIpIfInfo</span><span class="o">-&gt;</span><span class="n">u4Addr</span><span class="p">);</span>
<span class="mi">651</span><span class="o">:</span>            <span class="n">LOG_DEBUG</span> <span class="p">(</span><span class="s">&#34;NetMask changed and reconnecting to server.</span><span class="se">\r\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">652</span><span class="o">:</span>            <span class="n">CmAPIIPChangeCloudLogSend</span><span class="p">(</span><span class="n">CLLOG_NETMASK</span><span class="p">,</span> <span class="n">pNetIpIfInfo</span><span class="o">-&gt;</span><span class="n">u4NetMask</span><span class="p">);</span>
<span class="mi">675</span><span class="o">:</span>            <span class="n">LOG_DEBUG</span> <span class="p">(</span><span class="s">&#34;Gateway changed and reconnecting to server.</span><span class="se">\r\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">676</span><span class="o">:</span>            <span class="n">CmAPIIPChangeCloudLogSend</span><span class="p">(</span><span class="n">CLLOG_GATEWAY</span><span class="p">,</span> <span class="n">pRtChg</span><span class="o">-&gt;</span><span class="n">u4NextHop</span><span class="p">);</span>
<span class="mi">797</span><span class="o">:</span>    <span class="n">CM_CL_LOG_MSG</span><span class="p">(</span><span class="n">SYSLOG_INFO_LEVEL</span><span class="p">,</span><span class="n">CL_LOG_FW_UPGRADE_SUCCEEDED</span><span class="p">,</span><span class="n">SYSLOG_KEY_STRING</span><span class="p">,</span> <span class="s">&#34;FW_REASON_CODE_NONE&#34;</span><span class="p">);</span>

<span class="n">agent</span><span class="o">/</span><span class="n">src</span><span class="o">/</span><span class="n">cmagtutil</span><span class="p">.</span><span class="n">c</span>
<span class="mi">283</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Free context get fail! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">299</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Create process msg task fail ! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">320</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Get registration date failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">339</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Get registration State failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">358</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Set registration date failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">389</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Get connectivity State failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">422</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Get period statistics state failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">441</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Get period statistics state failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">509</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Get period statistics publish frequency failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">540</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Get period status publish frequency failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">571</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Get period statistics collect frequency failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">603</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Get i4Suspend failure! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>

<span class="n">adapter</span><span class="o">/</span><span class="n">inc</span><span class="o">/</span><span class="n">cloudAssert</span><span class="p">.</span><span class="n">h</span>
<span class="mi">17</span><span class="o">:</span><span class="err">#</span><span class="n">define</span> <span class="n">CLOUD_ASSERT</span><span class="p">(</span><span class="n">condition</span><span class="p">)</span> <span class="p">{</span><span class="k">if</span> <span class="p">(</span><span class="o">!</span> <span class="p">(</span><span class="n">condition</span><span class="p">))</span> <span class="p">{</span><span class="n">LOG_FATAL</span><span class="p">(</span><span class="s">&#34;assert failed %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">__FUNCTION__</span><span class="p">);</span><span class="k">return</span><span class="p">;}</span>

<span class="n">adapter</span><span class="o">/</span><span class="n">src</span><span class="o">/</span><span class="n">cloudAdapter</span><span class="p">.</span><span class="n">c</span>
<span class="mi">742</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;MSG : Adapter reconnect ! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>

<span class="n">adapter</span><span class="o">/</span><span class="n">src</span><span class="o">/</span><span class="n">StateMachine</span><span class="p">.</span><span class="n">c</span>
<span class="mi">81</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span> <span class="s">&#34;State Machine (%s : %p) State Transition: %s =&gt; %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span><span class="n">pFsm</span><span class="o">-&gt;</span><span class="n">name</span><span class="p">,</span> <span class="n">pFsm</span><span class="p">,</span> <span class="n">FsmValue2String</span><span class="p">(</span><span class="n">pFsm</span><span class="o">-&gt;</span><span class="n">name</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">pFsm</span><span class="o">-&gt;</span><span class="n">currentState</span><span class="p">),</span> <span class="n">FsmValue2String</span><span class="p">(</span><span class="n">pFsm</span><span class="o">-&gt;</span><span class="n">name</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">toState</span><span class="p">));</span>
<span class="mi">120</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;Processed State Machine[%s : %p] Event Current state: %s; Event: %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">145</span><span class="o">:</span>            <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;%s DONE</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span><span class="n">FsmValue2String</span><span class="p">(</span><span class="n">pFsm</span><span class="o">-&gt;</span><span class="n">name</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="n">event</span><span class="p">));</span>
<span class="mi">150</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;%s DO NOTHING</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span><span class="n">FsmValue2String</span><span class="p">(</span><span class="n">pFsm</span><span class="o">-&gt;</span><span class="n">name</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="n">event</span><span class="p">));</span>

<span class="n">adapter</span><span class="o">/</span><span class="n">src</span><span class="o">/</span><span class="n">ConnectivityFsm</span><span class="p">.</span><span class="n">c</span>
<span class="mi">224</span><span class="o">:</span>        <span class="n">LOG_FATAL</span><span class="p">(</span><span class="s">&#34;Reconnect current channel fail </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">258</span><span class="o">:</span>    <span class="n">LOG_INFO</span><span class="p">(</span><span class="s">&#34;Switch provision channel to management channnel</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">281</span><span class="o">:</span>    <span class="n">LOG_INFO</span><span class="p">(</span><span class="s">&#34;Device registration complete</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">336</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;Idle timeout</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">349</span><span class="o">:</span>    <span class="n">LOG_INFO</span><span class="p">(</span><span class="s">&#34;Switching to Heartbeat</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">390</span><span class="o">:</span>    <span class="n">LOG_INFO</span><span class="p">(</span><span class="s">&#34;Switching to Management (RingBack message from manager)</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">457</span><span class="o">:</span>    <span class="n">LOG_INFO</span><span class="p">(</span><span class="s">&#34;Provisioning Connected</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">481</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;MSG : Adapter protocol timeout ! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">515</span><span class="o">:</span>            <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;Delete timer id %lld </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span><span class="n">pChannel</span><span class="o">-&gt;</span><span class="n">retryTimerId</span><span class="p">);</span>
<span class="mi">522</span><span class="o">:</span>        <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;Inject EVENT_CONN_FAILED </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">551</span><span class="o">:</span>          <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34; Ping timeout, reconnect to server.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">801</span><span class="o">:</span>        <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;Delete timer id %lld </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span><span class="n">pChannel</span><span class="o">-&gt;</span><span class="n">retryTimerId</span><span class="p">);</span>
<span class="mi">825</span><span class="o">:</span>        <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;%s: Delete timer id %lld </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">839</span><span class="o">:</span>        <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;New timer with timeout %d ,timer id %lld </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">899</span><span class="o">:</span>        <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;MSG : Hello msg process fail ! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">925</span><span class="o">:</span>            <span class="n">LOG_INFO</span><span class="p">(</span><span class="s">&#34;Start Re-connecting Timer,restart times:%d ..pChannel-&gt;disconnectCount:%d. </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span><span class="n">pChannel</span><span class="o">-&gt;</span><span class="n">reconnectCount</span><span class="p">,</span><span class="n">pChannel</span><span class="o">-&gt;</span><span class="n">disconnectCount</span><span class="p">);</span>
<span class="mi">938</span><span class="o">:</span>                    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;Delete timer id %lld </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span><span class="n">pChannel</span><span class="o">-&gt;</span><span class="n">retryTimerId</span><span class="p">);</span>
<span class="mi">956</span><span class="o">:</span>                <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;New timer with timeout %d , timer id %lld ,retryIntervalInMs:%d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">962</span><span class="o">:</span>                <span class="n">LOG_INFO</span><span class="p">(</span><span class="s">&#34;Re-connecting channel...</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">1169</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;MSG : unregister ! </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">1197</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;MSG : do EVENT_ADAPTER_STOP</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">1741</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;Connectivity State Machine (%p) &#34;</span>

<span class="n">adapter</span><span class="o">/</span><span class="n">src</span><span class="o">/</span><span class="n">messaging</span><span class="p">.</span><span class="n">c</span>
<span class="mi">766</span><span class="o">:</span>        <span class="n">LOG_FATAL</span><span class="p">(</span><span class="s">&#34;cloudMessageNextMessageId is NULL</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">1636</span><span class="o">:</span>           <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;%s %d:pMsg is null, return failure</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">__FUNCTION__</span><span class="p">,</span> <span class="n">__LINE__</span><span class="p">);</span>
<span class="mi">1644</span><span class="o">:</span>           <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;%s %d:message is null, return failure</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">__FUNCTION__</span><span class="p">,</span> <span class="n">__LINE__</span><span class="p">);</span>
<span class="mi">1650</span><span class="o">:</span>           <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;%s %d:out is null, return failure</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">__FUNCTION__</span><span class="p">,</span> <span class="n">__LINE__</span><span class="p">);</span>
<span class="mi">1656</span><span class="o">:</span>           <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;Can&#39;t open output file %s, errno = %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">outputFile</span><span class="p">,</span> <span class="n">strerror</span><span class="p">(</span><span class="n">errno</span><span class="p">));</span>

<span class="n">adapter</span><span class="o">/</span><span class="n">src</span><span class="o">/</span><span class="n">channels</span><span class="p">.</span><span class="n">c</span>
<span class="mi">76</span><span class="o">:</span>            <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;Inject EVENT_CONN_FAILED </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">97</span><span class="o">:</span>                    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;Delete timer id %lld </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span><span class="n">pChannel</span><span class="o">-&gt;</span><span class="n">retryTimerId</span><span class="p">);</span>
<span class="mi">108</span><span class="o">:</span>            <span class="n">LOG_INFO</span><span class="p">(</span><span class="s">&#34;Heartbeat channel connected</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">116</span><span class="o">:</span>            <span class="n">LOG_INFO</span><span class="p">(</span><span class="s">&#34;Provisioning channel connected</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">124</span><span class="o">:</span>            <span class="n">LOG_INFO</span><span class="p">(</span><span class="s">&#34;Management channel connected</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">177</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;do %s for socketId:%d&#34;</span><span class="p">,</span><span class="n">pollType</span><span class="p">[</span><span class="n">type</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="n">pollFd</span><span class="o">-&gt;</span><span class="n">fd</span><span class="p">);</span>
<span class="mi">234</span><span class="o">:</span>    <span class="n">LOG_INFO</span><span class="p">(</span><span class="s">&#34;Connecting %s Channel</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">nameGet</span><span class="p">(</span><span class="n">pChannel</span><span class="p">));</span>
<span class="mi">282</span><span class="o">:</span>            <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;Delete timer id %lld </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span><span class="n">pChannel</span><span class="o">-&gt;</span><span class="n">retryTimerId</span><span class="p">);</span>
<span class="mi">292</span><span class="o">:</span>             <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;New timer with timeout %d ,timer id %lld </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">354</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;disconnect count:%d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span><span class="n">pChannel</span><span class="o">-&gt;</span><span class="n">disconnectCount</span><span class="p">);</span>
<span class="mi">383</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span> <span class="p">(</span><span class="s">&#34;%s Received %s from manager</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">pAdapter</span><span class="o">-&gt;</span><span class="n">deviceId</span><span class="p">,</span> 
<span class="mi">570</span><span class="o">:</span>        <span class="n">LOG_WARNING</span><span class="p">(</span><span class="s">&#34;Null message requested to be sent to Manager. &#34;</span>
<span class="mi">575</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span> <span class="p">(</span><span class="s">&#34;</span><span class="se">\033</span><span class="s">[34m[%s][%s] </span><span class="se">\033</span><span class="s">[00m</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> 
<span class="mi">733</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;failed to create transport to %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">765</span><span class="o">:</span>    <span class="n">LOG_INFO</span><span class="p">(</span><span class="s">&#34;Stopping %s channel</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">nameGet</span><span class="p">(</span><span class="n">handle</span><span class="p">));</span>

<span class="n">adapter</span><span class="o">/</span><span class="n">src</span><span class="o">/</span><span class="n">cmadputil</span><span class="p">.</span><span class="n">c</span>
<span class="mi">44</span><span class="o">:</span>        <span class="n">LOG_FATAL</span><span class="p">(</span><span class="s">&#34;open socket failure in message process task</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">56</span><span class="o">:</span>        <span class="n">LOG_FATAL</span><span class="p">(</span><span class="s">&#34;bind socket failure in message process task</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">128</span><span class="o">:</span>            <span class="n">LOG_FATAL</span><span class="p">(</span><span class="s">&#34;Adapter receive fail</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">132</span><span class="o">:</span>        <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;adapter receive  msg from agent&#34;</span><span class="p">);</span>
<span class="mi">205</span><span class="o">:</span>            <span class="n">LOG_FATAL</span><span class="p">(</span><span class="s">&#34;Send msg to Agent fail %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span><span class="n">i4Retries</span><span class="p">);</span>
<span class="mi">230</span><span class="o">:</span>        <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;Please check IP ,Gateway, DNS configuration, adapter is NULL.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">261</span><span class="o">:</span>        <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;Please check IP ,Gateway, DNS configuration, adapter is NULL.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">270</span><span class="o">:</span>        <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;Please check IP ,Gateway, DNS configuration, adapter is NULL.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">274</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;Start to reconnect.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>

<span class="n">adapter</span><span class="o">/</span><span class="n">src</span><span class="o">/</span><span class="n">RegistrationFsm</span><span class="p">.</span><span class="n">c</span>
<span class="mi">570</span><span class="o">:</span>        <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;New timer with timeout %d ,timer id %lld </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">722</span><span class="o">:</span>    <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;Registration State Machine (%p) &#34;</span>

<span class="n">adapter</span><span class="o">/</span><span class="n">src</span><span class="o">/</span><span class="n">WebsocketTransportFactory</span><span class="p">.</span><span class="n">c</span>
<span class="mi">76</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Not support method %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span><span class="n">method</span><span class="o">-&gt;</span><span class="n">valuestring</span><span class="p">);</span>
<span class="mi">298</span><span class="o">:</span>        <span class="n">LOG_DEBUG</span><span class="p">(</span><span class="s">&#34;</span><span class="se">\033</span><span class="s">[32m[tx]  [%s][%s]/[%ld] -&gt;</span><span class="se">\033</span><span class="s">[00m</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">300</span><span class="o">:</span>        <span class="n">LOG_INFO</span><span class="p">(</span><span class="s">&#34;</span><span class="se">\n\033</span><span class="s">[32m%s</span><span class="se">\033</span><span class="s">[00m</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span><span class="n">pBuf</span><span class="p">);</span>
<span class="mi">579</span><span class="o">:</span>            <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Web socket(%p) connection failed: &#34;</span>
<span class="mi">601</span><span class="o">:</span>            <span class="n">LOG_INFO</span><span class="p">(</span><span class="s">&#34;Websocket connection closed: %p</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">wsi</span><span class="p">);</span>
<span class="mi">672</span><span class="o">:</span>                            <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Frame too big</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">699</span><span class="o">:</span>                    <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;uncompress error(%d). Dropping frame</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">ret</span><span class="p">);</span>
<span class="mi">712</span><span class="o">:</span>                    <span class="n">LOG_WARNING</span><span class="p">(</span><span class="s">&#34;Dropping message with invalid format</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">717</span><span class="o">:</span>                    <span class="n">LOG_DEBUG</span> <span class="p">(</span><span class="s">&#34;</span><span class="se">\033</span><span class="s">[34m[rx] [%s][%s]/[%d] &lt;-</span><span class="se">\033</span><span class="s">[00m</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> 
<span class="mi">720</span><span class="o">:</span>                    <span class="n">LOG_INFO</span><span class="p">(</span><span class="s">&#34;</span><span class="se">\n\033</span><span class="s">[34m%s</span><span class="se">\033</span><span class="s">[00m</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span><span class="n">pFrame</span><span class="p">);</span>
<span class="mi">901</span><span class="o">:</span>    <span class="n">LOG_INFO</span><span class="p">(</span><span class="s">&#34;connecting to URL: %s:%d%s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> 
<span class="mi">919</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;libwebsocket connect failed</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">927</span><span class="o">:</span>        <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;Error connecting WS</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">1009</span><span class="o">:</span>                   <span class="n">LOG_ERROR</span><span class="p">(</span><span class="s">&#34;This transport session is disconneected</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</code></pre></div><h5 id="12-libwebsocket">1.2 libwebsocket</h5>
<div class="highlight"><pre class="chroma"><code class="language-c" data-lang="c"><span class="n">libwebsockets</span><span class="p">.</span><span class="n">c</span>
<span class="mi">61</span><span class="o">:</span><span class="k">static</span> <span class="kt">void</span> <span class="n">lwsl_emit_stderr</span><span class="p">(</span><span class="kt">int</span> <span class="n">level</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">func</span><span class="p">,</span><span class="kt">int</span> <span class="n">i4line</span><span class="p">,</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">line</span><span class="p">);</span>
<span class="mi">62</span><span class="o">:</span><span class="k">static</span> <span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="n">lwsl_emit</span><span class="p">)(</span><span class="kt">int</span> <span class="n">level</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">func</span><span class="p">,</span><span class="kt">int</span> <span class="n">i4line</span><span class="p">,</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">line</span><span class="p">)</span> <span class="o">=</span> <span class="n">lwsl_emit_stderr</span><span class="p">;</span>
<span class="mi">109</span><span class="o">:</span>            <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Too many fds (%d)</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">context</span><span class="o">-&gt;</span><span class="n">max_fds</span><span class="p">);</span>
<span class="mi">114</span><span class="o">:</span>            <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Socket fd %d is too high (%d)</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">122</span><span class="o">:</span>    <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;insert_wsi_socket_into_fds: wsi=%p, sock=%d, fds pos=%d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">149</span><span class="o">:</span>            <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Socket fd %d too high (%d)</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">154</span><span class="o">:</span>    <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;remove_wsi_socket_from_fds: wsi=%p, sock=%d, fds pos=%d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">233</span><span class="o">:</span>                    <span class="n">lwsl_debug</span><span class="p">(</span><span class="s">&#34;closing http fd %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">wsi</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">http</span><span class="p">.</span><span class="n">fd</span><span class="p">);</span>
<span class="mi">263</span><span class="o">:</span>                    <span class="n">lwsl_ext</span><span class="p">(</span><span class="s">&#34;extension vetoed close</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">291</span><span class="o">:</span>                            <span class="n">lwsl_ext</span><span class="p">(</span><span class="s">&#34;Extension reports fatal error</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">307</span><span class="o">:</span>                            <span class="n">lwsl_debug</span><span class="p">(</span><span class="s">&#34;close: ext spill failed</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">328</span><span class="o">:</span>            <span class="n">lwsl_debug</span><span class="p">(</span><span class="s">&#34;sending close indication...</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">351</span><span class="o">:</span>                    <span class="n">lwsl_debug</span><span class="p">(</span><span class="s">&#34;sent close indication, awaiting ack</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">356</span><span class="o">:</span>            <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;close: sending close packet failed, hanging up</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">363</span><span class="o">:</span>    <span class="n">lwsl_debug</span><span class="p">(</span><span class="s">&#34;close: just_kill_connection</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">399</span><span class="o">:</span>            <span class="n">lwsl_debug</span><span class="p">(</span><span class="s">&#34;calling back CLOSED</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">403</span><span class="o">:</span>            <span class="n">lwsl_debug</span><span class="p">(</span><span class="s">&#34;calling back CLOSED_HTTP</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">407</span><span class="o">:</span>            <span class="n">lwsl_debug</span><span class="p">(</span><span class="s">&#34;not calling back closed</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">438</span><span class="o">:</span><span class="cm">/*  lwsl_info(&#34;closing fd=%d\n&#34;, wsi-&gt;sock); */</span>
<span class="mi">452</span><span class="o">:</span>                            <span class="n">lwsl_debug</span><span class="p">(</span><span class="s">&#34;closing: shutdown returned %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">457</span><span class="o">:</span>                            <span class="n">lwsl_debug</span><span class="p">(</span><span class="s">&#34;closing: close returned %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">756</span><span class="o">:</span>                            <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;ext reports fatal error</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">778</span><span class="o">:</span>                            <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Unable to spill ext %d vs %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">799</span><span class="o">:</span>            <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;choked in POLLOUT service</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">869</span><span class="o">:</span>            <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;TIMEDOUT WAITING</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">1032</span><span class="o">:</span>           <span class="n">lwsl_debug</span><span class="p">(</span><span class="s">&#34;Session Socket %p (fd=%d) dead</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">1059</span><span class="o">:</span>                           <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;libwebsocket_service_fd: closing</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">1065</span><span class="o">:</span>                   <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;draining rxflow</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">1088</span><span class="o">:</span>                           <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;SSL_read returned 0 with reason %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">1099</span><span class="o">:</span>                   <span class="n">lwsl_debug</span><span class="p">(</span><span class="s">&#34;service_fd read ret = %d, errno = %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">1107</span><span class="o">:</span>                   <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;service_fd: closing due to 0 length read</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">1138</span><span class="o">:</span>                                   <span class="n">lwsl_ext</span><span class="p">(</span>
<span class="mi">1165</span><span class="o">:</span>                   <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;flow buffer: drained</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">1225</span><span class="o">:</span>           <span class="n">lwsl_notice</span><span class="p">(</span><span class="s">&#34;Worst latency: %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">context</span><span class="o">-&gt;</span><span class="n">worst_latency_info</span><span class="p">);</span>
<span class="mi">1459</span><span class="o">:</span>           <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;libwebsocket_callback_on_writable: failed to find socket %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">1574</span><span class="o">:</span>           <span class="n">lwsl_latency</span><span class="p">(</span><span class="s">&#34;%s&#34;</span><span class="p">,</span> <span class="n">buf</span><span class="p">);</span>
<span class="mi">1611</span><span class="o">:</span>   <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;rxflow: wsi %p change_to %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">wsi</span><span class="p">,</span>
<span class="mi">1653</span><span class="o">:</span>   <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;libwebsocket_rx_flow_control(0x%p, %d)</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">wsi</span><span class="p">,</span> <span class="n">enable</span><span class="p">);</span>
<span class="mi">1814</span><span class="o">:</span>   <span class="n">lwsl_notice</span><span class="p">(</span><span class="s">&#34;Initial logging level %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">log_level</span><span class="p">);</span>
<span class="mi">1815</span><span class="o">:</span>   <span class="n">lwsl_notice</span><span class="p">(</span><span class="s">&#34;Library version: %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">library_version</span><span class="p">);</span>
<span class="mi">1816</span><span class="o">:</span>   <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34; LWS_MAX_HEADER_LEN: %u</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">LWS_MAX_HEADER_LEN</span><span class="p">);</span>
<span class="mi">1817</span><span class="o">:</span>   <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34; LWS_MAX_PROTOCOLS: %u</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">LWS_MAX_PROTOCOLS</span><span class="p">);</span>
<span class="mi">1819</span><span class="o">:</span>   <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34; LWS_MAX_EXTENSIONS_ACTIVE: %u</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">1822</span><span class="o">:</span>   <span class="n">lwsl_notice</span><span class="p">(</span><span class="s">&#34; Configured without extension support</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">1824</span><span class="o">:</span>   <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34; SPEC_LATEST_SUPPORTED: %u</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">SPEC_LATEST_SUPPORTED</span><span class="p">);</span>
<span class="mi">1825</span><span class="o">:</span>   <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34; AWAITING_TIMEOUT: %u</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">AWAITING_TIMEOUT</span><span class="p">);</span>
<span class="mi">1827</span><span class="o">:</span>           <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34; SSL ciphers: &#39;%s&#39;</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">info</span><span class="o">-&gt;</span><span class="n">ssl_cipher_list</span><span class="p">);</span>
<span class="mi">1828</span><span class="o">:</span>   <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34; SYSTEM_RANDOM_FILEPATH: &#39;%s&#39;</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">SYSTEM_RANDOM_FILEPATH</span><span class="p">);</span>
<span class="mi">1829</span><span class="o">:</span>   <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34; LWS_MAX_ZLIB_CONN_BUFFER: %u</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">LWS_MAX_ZLIB_CONN_BUFFER</span><span class="p">);</span>
<span class="mi">1845</span><span class="o">:</span>                   <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;WSAStartup failed with error: %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">err</span><span class="p">);</span>
<span class="mi">1864</span><span class="o">:</span>           <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;No memory for websocket context</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">1870</span><span class="o">:</span>   <span class="n">lwsl_notice</span><span class="p">(</span><span class="s">&#34; Started with daemon pid %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">pid_daemon</span><span class="p">);</span>
<span class="mi">1881</span><span class="o">:</span>   <span class="n">lwsl_notice</span><span class="p">(</span><span class="s">&#34; static allocation: %u + (%u x %u fds) = %u bytes</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">1892</span><span class="o">:</span>           <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Unable to allocate fds array for %d connections</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">1900</span><span class="o">:</span>           <span class="n">lwsl_err</span><span class="p">(</span>
<span class="mi">1922</span><span class="o">:</span>           <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Unable to open random device %s %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">1943</span><span class="o">:</span>           <span class="n">lwsl_notice</span><span class="p">(</span><span class="s">&#34; canonical_hostname = %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">1959</span><span class="o">:</span>                   <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;http_proxy needs to be ads:port</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">1965</span><span class="o">:</span>           <span class="n">lwsl_notice</span><span class="p">(</span><span class="s">&#34; Proxy %s:%u</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">1986</span><span class="o">:</span>           <span class="n">lwsl_notice</span><span class="p">(</span><span class="s">&#34; Compiled with CYASSL support</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">1988</span><span class="o">:</span>           <span class="n">lwsl_notice</span><span class="p">(</span><span class="s">&#34; Compiled with OpenSSL support</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">1991</span><span class="o">:</span>                   <span class="n">lwsl_notice</span><span class="p">(</span><span class="s">&#34; Using SSL mode</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">1993</span><span class="o">:</span>                   <span class="n">lwsl_notice</span><span class="p">(</span><span class="s">&#34; Using non-SSL mode</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">1998</span><span class="o">:</span>                   <span class="n">lwsl_notice</span><span class="p">(</span><span class="s">&#34; Not compiled for OpenSSl support!</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">2001</span><span class="o">:</span>           <span class="n">lwsl_notice</span><span class="p">(</span><span class="s">&#34; Compiled without SSL support</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">2004</span><span class="o">:</span>           <span class="n">lwsl_notice</span><span class="p">(</span>
<span class="mi">2038</span><span class="o">:</span>           <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;problem creating ssl method %lu: %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> 
<span class="mi">2047</span><span class="o">:</span>           <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;problem creating ssl context %lu: %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">2070</span><span class="o">:</span>                   <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;problem creating ssl method %lu: %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">2080</span><span class="o">:</span>                   <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;problem creating ssl context %lu: %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">2101</span><span class="o">:</span>                           <span class="n">lwsl_err</span><span class="p">(</span>
<span class="mi">2110</span><span class="o">:</span>                           <span class="n">lwsl_err</span><span class="p">(</span>
<span class="mi">2126</span><span class="o">:</span>                           <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;problem getting cert &#39;%s&#39; %lu: %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">2140</span><span class="o">:</span>                           <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;use_PrivateKey_file &#39;%s&#39; %lu: %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">2150</span><span class="o">:</span>                           <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Private SSL key doesn&#39;t match cert</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">2192</span><span class="o">:</span>                   <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;problem getting cert &#39;%s&#39; %lu: %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">2204</span><span class="o">:</span>                   <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;ssl problem getting key &#39;%s&#39; %lu: %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">2213</span><span class="o">:</span>                   <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Private SSL key doesn&#39;t match cert</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">2230</span><span class="o">:</span>                   <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;ERROR opening socket</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">2265</span><span class="o">:</span>                           <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Unable to find interface %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">2275</span><span class="o">:</span>                   <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;ERROR on binding to port %d (%d %d)</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">2284</span><span class="o">:</span>                   <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Out of mem</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">2302</span><span class="o">:</span>           <span class="n">lwsl_notice</span><span class="p">(</span><span class="s">&#34; Listening on port %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">info</span><span class="o">-&gt;</span><span class="n">port</span><span class="p">);</span>
<span class="mi">2315</span><span class="o">:</span>                   <span class="n">lwsl_warn</span><span class="p">(</span><span class="s">&#34;setgid: %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">strerror</span><span class="p">(</span><span class="n">errno</span><span class="p">));</span>
<span class="mi">2318</span><span class="o">:</span>                   <span class="n">lwsl_warn</span><span class="p">(</span><span class="s">&#34;setuid: %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">strerror</span><span class="p">(</span><span class="n">errno</span><span class="p">));</span>
<span class="mi">2327</span><span class="o">:</span>           <span class="n">lwsl_parser</span><span class="p">(</span><span class="s">&#34;  Protocol: %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">2356</span><span class="o">:</span>                   <span class="n">lwsl_ext</span><span class="p">(</span><span class="s">&#34;  Extension: %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">ext</span><span class="o">-&gt;</span><span class="n">name</span><span class="p">);</span>
<span class="mi">2404</span><span class="o">:</span>           <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;http_proxy needs to be ads:port</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">2411</span><span class="o">:</span>   <span class="n">lwsl_notice</span><span class="p">(</span><span class="s">&#34; Proxy %s:%u</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">context</span><span class="o">-&gt;</span><span class="n">http_proxy_address</span><span class="p">,</span>
<span class="mi">2457</span><span class="o">:</span>                   <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Out of memory for conn user space</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">2466</span><span class="o">:</span><span class="k">static</span> <span class="kt">void</span> <span class="n">lwsl_emit_stderr</span><span class="p">(</span><span class="kt">int</span> <span class="n">level</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">func</span><span class="p">,</span><span class="kt">int</span> <span class="n">i4line</span><span class="p">,</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">line</span><span class="p">)</span>
<span class="mi">2486</span><span class="o">:</span><span class="n">LWS_VISIBLE</span> <span class="kt">void</span> <span class="n">lwsl_emit_syslog</span><span class="p">(</span><span class="kt">int</span> <span class="n">level</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">line</span><span class="p">)</span>
<span class="mi">2488</span><span class="o">:</span>   <span class="n">lwsl_emit_stderr</span><span class="p">(</span><span class="n">level</span><span class="p">,</span> <span class="n">line</span><span class="p">);</span>
<span class="mi">2491</span><span class="o">:</span><span class="n">LWS_VISIBLE</span> <span class="kt">void</span> <span class="n">lwsl_emit_syslog</span><span class="p">(</span><span class="kt">int</span> <span class="n">level</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">line</span><span class="p">)</span>
<span class="mi">2527</span><span class="o">:</span>   <span class="n">lwsl_emit</span><span class="p">(</span><span class="n">filter</span><span class="p">,</span> <span class="n">func</span><span class="p">,</span><span class="n">line</span><span class="p">,</span><span class="n">buf</span><span class="p">);</span>
<span class="mi">2546</span><span class="o">:</span>           <span class="n">lwsl_emit</span> <span class="o">=</span> <span class="n">log_emit_function</span><span class="p">;</span>
                    
<span class="n">server</span><span class="o">-</span><span class="n">handshake</span><span class="p">.</span><span class="n">c</span>
<span class="mi">48</span><span class="o">:</span>             <span class="n">lwsl_parser</span><span class="p">(</span><span class="s">&#34;handshake_04 missing pieces</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">55</span><span class="o">:</span>             <span class="n">lwsl_warn</span><span class="p">(</span><span class="s">&#34;Client key too long %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">MAX_WEBSOCKET_04_KEY_LEN</span><span class="p">);</span>
<span class="mi">73</span><span class="o">:</span>             <span class="n">lwsl_warn</span><span class="p">(</span><span class="s">&#34;Base64 encoded hash too long</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">121</span><span class="o">:</span>            <span class="n">lwsl_parser</span><span class="p">(</span><span class="s">&#34;WSI_TOKEN_EXTENSIONS = &#39;%s&#39;</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">c</span><span class="p">);</span>
<span class="mi">195</span><span class="o">:</span>                                    <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Out of mem</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">215</span><span class="o">:</span>                            <span class="n">lwsl_parser</span><span class="p">(</span><span class="s">&#34;count_active_extensions &lt;- %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">238</span><span class="o">:</span>            <span class="n">lwsl_parser</span><span class="p">(</span><span class="s">&#34;issuing resp pkt %d len</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="p">(</span><span class="kt">int</span><span class="p">)(</span><span class="n">p</span> <span class="o">-</span> <span class="n">response</span><span class="p">));</span>
<span class="mi">245</span><span class="o">:</span>                    <span class="n">lwsl_debug</span><span class="p">(</span><span class="s">&#34;handshake_0405: ERROR writing to socket</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>

<span class="n">client</span><span class="o">-</span><span class="n">handshake</span><span class="p">.</span><span class="n">c</span>
<span class="mi">41</span><span class="o">:</span>    <span class="n">lwsl_client</span><span class="p">(</span><span class="s">&#34;libwebsocket_client_connect_2</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">78</span><span class="o">:</span>    <span class="n">lwsl_client</span><span class="p">(</span><span class="s">&#34;libwebsocket_client_connect_2: address %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">ads</span><span class="p">);</span>
<span class="mi">82</span><span class="o">:</span>    <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Unable to get host name from %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">ads</span><span class="p">);</span>
<span class="mi">91</span><span class="o">:</span>        <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Unable to get host name from %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">ads</span><span class="p">);</span>
<span class="mi">100</span><span class="o">:</span>            <span class="n">lwsl_warn</span><span class="p">(</span><span class="s">&#34;Unable to open socket</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">105</span><span class="o">:</span>            <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Failed to set wsi socket options</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">126</span><span class="o">:</span>    <span class="n">lwsl_debug</span><span class="p">(</span><span class="s">&#34;get host name from ads:%s ip: %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span><span class="n">ads</span><span class="p">,</span><span class="n">INET_NTOA</span><span class="p">(</span><span class="o">*</span><span class="p">(</span><span class="n">tUtlInAddr</span> <span class="o">*</span><span class="p">)</span> <span class="o">&amp;</span><span class="n">server_addr</span><span class="p">.</span><span class="n">sin_addr</span><span class="p">.</span><span class="n">s_addr</span><span class="p">));</span>
<span class="mi">131</span><span class="o">:</span>            <span class="n">lwsl_client</span><span class="p">(</span><span class="s">&#34;nonblocking connect retry</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">150</span><span class="o">:</span>            <span class="n">lwsl_debug</span><span class="p">(</span><span class="s">&#34;Connect failed errno=%d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">errno</span><span class="p">);</span>
<span class="mi">155</span><span class="o">:</span>    <span class="n">lwsl_client</span><span class="p">(</span><span class="s">&#34;connected</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">174</span><span class="o">:</span>            <span class="n">lwsl_debug</span><span class="p">(</span><span class="s">&#34;ERROR writing to proxy socket</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">280</span><span class="o">:</span>        <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;libwebsockets not configured for ssl</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">367</span><span class="o">:</span>        <span class="n">lwsl_client</span><span class="p">(</span><span class="s">&#34;libwebsocket_client_connect: ext handling conn</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">377</span><span class="o">:</span>    <span class="n">lwsl_client</span><span class="p">(</span><span class="s">&#34;libwebsocket_client_connect: direct conn</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>

<span class="n">client</span><span class="p">.</span><span class="n">c</span>
<span class="mi">64</span><span class="o">:</span>                     <span class="n">lwsl_client</span><span class="p">(</span><span class="s">&#34;closed</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">77</span><span class="o">:</span>                     <span class="n">lwsl_warn</span><span class="p">(</span><span class="s">&#34;Proxy connection %p (fd=%d) dead</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">90</span><span class="o">:</span>                             <span class="n">lwsl_debug</span><span class="p">(</span>
<span class="mi">97</span><span class="o">:</span>                     <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;ERROR reading from proxy socket</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">105</span><span class="o">:</span>                    <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;ERROR proxy: %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">context</span><span class="o">-&gt;</span><span class="n">service_buffer</span><span class="p">);</span>
<span class="mi">207</span><span class="o">:</span>                                    <span class="n">lwsl_info</span><span class="p">(</span>
<span class="mi">227</span><span class="o">:</span>                                    <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;SSL connect error %lu: %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">270</span><span class="o">:</span>                                            <span class="n">lwsl_info</span><span class="p">(</span>
<span class="mi">289</span><span class="o">:</span>                                            <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;SSL connect error %lu: %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">312</span><span class="o">:</span>                            <span class="n">lwsl_err</span><span class="p">(</span>
<span class="mi">325</span><span class="o">:</span>                    <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Failed to generate handshake for client</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">347</span><span class="o">:</span>                    <span class="n">lwsl_debug</span><span class="p">(</span><span class="s">&#34;ERROR writing to client socket</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">367</span><span class="o">:</span>                    <span class="n">lwsl_debug</span><span class="p">(</span><span class="s">&#34;Server connection %p (fd=%d) dead</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">413</span><span class="o">:</span>                            <span class="n">lwsl_warn</span><span class="p">(</span><span class="s">&#34;error on parsing recv</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">418</span><span class="o">:</span>                            <span class="n">lwsl_warn</span><span class="p">(</span><span class="s">&#34;problems parsing header</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">441</span><span class="o">:</span>            <span class="n">lwsl_info</span><span class="p">(</span>
<span class="mi">448</span><span class="o">:</span>            <span class="n">lwsl_ext</span><span class="p">(</span><span class="s">&#34;LWS_CONNMODE_WS_CLIENT_WAITING_EXTENSION_CONNECT</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">452</span><span class="o">:</span>            <span class="n">lwsl_ext</span><span class="p">(</span><span class="s">&#34;LWS_CONNMODE_WS_CLIENT_PENDING_CANDIDATE_CHILD</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">499</span><span class="o">:</span>        <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;no ACCEPT</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">505</span><span class="o">:</span>        <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;no URI</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">509</span><span class="o">:</span>        <span class="n">lwsl_warn</span><span class="p">(</span>
<span class="mi">516</span><span class="o">:</span>        <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;no UPGRADE</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">521</span><span class="o">:</span>        <span class="n">lwsl_warn</span><span class="p">(</span>
<span class="mi">528</span><span class="o">:</span>        <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;no Connection hdr</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">533</span><span class="o">:</span>        <span class="n">lwsl_warn</span><span class="p">(</span><span class="s">&#34;lws_client_int_s_hs: bad header %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">p</span><span class="p">);</span>
<span class="mi">539</span><span class="o">:</span>        <span class="n">lwsl_parser</span><span class="p">(</span><span class="s">&#34;lws_client_int_s_hs: no protocol list</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">541</span><span class="o">:</span>        <span class="n">lwsl_parser</span><span class="p">(</span><span class="s">&#34;lws_client_int_s_hs: protocol list &#39;%s&#39;</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">pc</span><span class="p">);</span>
<span class="mi">551</span><span class="o">:</span>        <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;lws_client_int_s_hs: WSI_TOKEN_PROTOCOL is null</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">576</span><span class="o">:</span>        <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;lws_client_int_s_hs: got bad protocol %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">p</span><span class="p">);</span>
<span class="mi">594</span><span class="o">:</span>        <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;lws_client_int_s_hs: fail protocol %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">p</span><span class="p">);</span>
<span class="mi">604</span><span class="o">:</span>        <span class="n">lwsl_ext</span><span class="p">(</span><span class="s">&#34;no client extenstions allowed by server</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">615</span><span class="o">:</span>        <span class="n">lwsl_warn</span><span class="p">(</span><span class="s">&#34;ext list from server failed to copy</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">640</span><span class="o">:</span>        <span class="n">lwsl_ext</span><span class="p">(</span><span class="s">&#34;checking client ext %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">ext_name</span><span class="p">);</span>
<span class="mi">653</span><span class="o">:</span>            <span class="n">lwsl_ext</span><span class="p">(</span><span class="s">&#34;instantiating client ext %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">ext_name</span><span class="p">);</span>
<span class="mi">662</span><span class="o">:</span>                <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Out of mem</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">686</span><span class="o">:</span>            <span class="n">lwsl_warn</span><span class="p">(</span><span class="s">&#34;Unknown ext &#39;%s&#39;!</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">ext_name</span><span class="p">);</span>
<span class="mi">702</span><span class="o">:</span>        <span class="n">lwsl_warn</span><span class="p">(</span><span class="s">&#34;lws_client_int_s_hs: accept %s wrong vs %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span>
<span class="mi">709</span><span class="o">:</span>        <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Problem allocating wsi user mem</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">759</span><span class="o">:</span>        <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Out of Mem allocating rx buffer %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">n</span><span class="p">);</span>
<span class="mi">762</span><span class="o">:</span>    <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;Allocating client RX buffer %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">n</span><span class="p">);</span>
<span class="mi">771</span><span class="o">:</span>    <span class="n">lwsl_warn</span><span class="p">(</span><span class="s">&#34;Failed to set SNDBUF to %d&#34;</span><span class="p">,</span> <span class="n">n</span><span class="p">);</span>
<span class="mi">776</span><span class="o">:</span>    <span class="n">lwsl_debug</span><span class="p">(</span><span class="s">&#34;handshake OK for protocol %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">wsi</span><span class="o">-&gt;</span><span class="n">protocol</span><span class="o">-&gt;</span><span class="n">name</span><span class="p">);</span>
<span class="mi">816</span><span class="o">:</span>    <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;closing connection due to bail2 connection error</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">856</span><span class="o">:</span>            <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Unable to read from random dev %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">931</span><span class="o">:</span>                    <span class="n">lwsl_ext</span><span class="p">(</span><span class="s">&#34;ext %s vetoed</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="p">)</span><span class="n">ext</span><span class="o">-&gt;</span><span class="n">name</span><span class="p">);</span>

<span class="n">handshake</span><span class="p">.</span><span class="n">c</span>
<span class="mi">140</span><span class="o">:</span>            <span class="n">lwsl_parser</span><span class="p">(</span><span class="s">&#34;issuing %d bytes to parser</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">len</span><span class="p">);</span>
<span class="mi">151</span><span class="o">:</span>                                    <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;client_rx_sm failed</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">164</span><span class="o">:</span>                            <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;libwebsocket_parse failed</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">171</span><span class="o">:</span>                    <span class="n">lwsl_parser</span><span class="p">(</span><span class="s">&#34;libwebsocket_parse sees parsing complete</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">184</span><span class="o">:</span>                                    <span class="n">lwsl_warn</span><span class="p">(</span><span class="s">&#34;Missing URI in HTTP request</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">190</span><span class="o">:</span>                                    <span class="n">lwsl_warn</span><span class="p">(</span><span class="s">&#34;GET and POST methods?</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">200</span><span class="o">:</span>                                    <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;HTTP GET request for &#39;%s&#39;</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">205</span><span class="o">:</span>                                    <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;HTTP POST request for &#39;%s&#39;</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">248</span><span class="o">:</span>                                            <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Unable to allocate post buffer</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">273</span><span class="o">:</span>                                    <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;LWS_CALLBACK_HTTP closing</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">297</span><span class="o">:</span>                            <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;NULL protocol at libwebsocket_read</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">325</span><span class="o">:</span>                                    <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;no protocol -&gt; prot 0 handler</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">328</span><span class="o">:</span>                                    <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Req protocol %s not supported</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">347</span><span class="o">:</span>                            <span class="n">lwsl_warn</span><span class="p">(</span><span class="s">&#34;User code denied connection</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">359</span><span class="o">:</span>                            <span class="n">lwsl_parser</span><span class="p">(</span><span class="s">&#34;lws_parse calling handshake_04</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">361</span><span class="o">:</span>                                    <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;hs0405 has failed the connection</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">367</span><span class="o">:</span>                            <span class="n">lwsl_warn</span><span class="p">(</span><span class="s">&#34;Unknown client spec version %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">400</span><span class="o">:</span>                            <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;Out of Mem allocating rx buffer %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">n</span><span class="p">);</span>
<span class="mi">403</span><span class="o">:</span>                    <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;Allocating RX buffer %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">n</span><span class="p">);</span>
<span class="mi">406</span><span class="o">:</span>                            <span class="n">lwsl_warn</span><span class="p">(</span><span class="s">&#34;Failed to set SNDBUF to %d&#34;</span><span class="p">,</span> <span class="n">n</span><span class="p">);</span>
<span class="mi">410</span><span class="o">:</span>                    <span class="n">lwsl_parser</span><span class="p">(</span><span class="s">&#34;accepted v%02d connection</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span>
<span class="mi">425</span><span class="o">:</span>                                    <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;client rx has bailed</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">438</span><span class="o">:</span>                    <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;interpret_incoming_packet has bailed</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">444</span><span class="o">:</span>            <span class="n">lwsl_err</span><span class="p">(</span><span class="s">&#34;libwebsocket_read: Unhandled state</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
<span class="mi">463</span><span class="o">:</span>    <span class="n">lwsl_info</span><span class="p">(</span><span class="s">&#34;closing connection at libwebsocket_read bail:</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</code></pre></div><h4 id="2-system-info">2. System info</h4>
<h5 id="21-system-information">2.1 system information</h5>
<pre><code>- System Info. -
Hardware Version               : A2
Firmware Version               : V1.20.B006
Hardware Part Number           : 1-0-0
Software Serial Number         : QBDES12105304
Software Version               : 6.12.6
Switch Name                    : DBS-2000-28MP
System Contact                 : info@aricent.com
System Location                : ARICENT
System up time                 : 0 days, 5 hrs, 46 min, 46 secs
System Time                    : 43/00/8 01:01:20
Logging Option                 : Console Logging
Login Authentication Mode      : Local
Config Save Status             : Not Initiated
Remote Save Status             : Not Initiated
Config Restore Status          : Successful
System boot version            : 1.00.005
System serial number           : QBDES12105304
MAC Address                    : 00-76-34-CE-D5-36
CPU Utilization                : 2

- Memory Info. -
             total       used       free     shared    buffers
Mem:        255572     137388     118184          0          0
Swap:            0          0          0
Total:      255572     137388     118184

- Stacktrace Log -

No stacktrace information.

</code></pre><h4 id="3-system-log">3. System log</h4>
<div class="highlight"><pre class="chroma"><code class="language-s" data-lang="s"><span class="m">1</span><span class="n">. online</span><span class="o">/</span><span class="n">offline</span> <span class="n">time</span>
<span class="m">2</span><span class="n">. register</span><span class="o">/</span><span class="n">unregister</span> <span class="n">time</span>
<span class="m">3</span><span class="n">. configuration</span> <span class="n">process</span> <span class="n">start</span><span class="o">/</span><span class="n">end</span> <span class="n">time</span> <span class="n">and</span> <span class="n">state</span>
<span class="m">4</span><span class="n">. Firmware</span> <span class="n">upgrade</span> <span class="n">process</span> <span class="n">start</span><span class="o">/</span><span class="n">end</span> <span class="n">time</span> <span class="n">and</span> <span class="n">state</span>
<span class="m">5</span><span class="n">. Device</span> <span class="n">connect</span> <span class="n">log</span> <span class="n">with</span> <span class="n">cloud</span> <span class="n">server</span>
<span class="m">6</span><span class="n">. port</span> <span class="n">linkdown</span> <span class="o">/</span><span class="n">linkup</span> <span class="n">log</span>
<span class="m">7</span><span class="n">. uplink</span> <span class="n">port</span> <span class="n">change</span> <span class="n">log</span>
<span class="m">8</span><span class="n">. last</span> <span class="n">three</span> <span class="n">times</span> <span class="n">configuration</span>  <span class="nf">data </span><span class="p">(</span><span class="n">only</span> <span class="n">record</span> <span class="n">CFG_UPDATE</span> <span class="n">push</span> <span class="n">data</span><span class="p">)</span>
<span class="m">9</span><span class="n">. reboot</span> <span class="n">reason</span>
</code></pre></div><h4 id="4-configuration">4. Configuration</h4>
<pre><code>Current configuration on the device side (all configuration )
</code></pre><h4 id="5-config-sw">5. Config SW</h4>
<pre><code>1.add debug flag command for  module  debug
2.add reset debug log command (clear count and log )
</code></pre><h4 id="6-statistics">6. Statistics</h4>
<pre><code>Add cpu packets statistics
</code></pre>]]></content>
		</item>
		
		<item>
			<title></title>
			<link>https://example.com/posts/debug-system-2/</link>
			<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
			
			<guid>https://example.com/posts/debug-system-2/</guid>
			<description>Debug System 1. </description>
			<content type="html"><![CDATA[<h4 id="debug-system">Debug System</h4>
<h5 id="1">1.</h5>
]]></content>
		</item>
		
		<item>
			<title></title>
			<link>https://example.com/posts/debug-system/</link>
			<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
			
			<guid>https://example.com/posts/debug-system/</guid>
			<description>Debug System 1. </description>
			<content type="html"><![CDATA[<h4 id="debug-system">Debug System</h4>
<h5 id="1">1.</h5>
]]></content>
		</item>
		
		<item>
			<title></title>
			<link>https://example.com/posts/docker/</link>
			<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
			
			<guid>https://example.com/posts/docker/</guid>
			<description>Docker 1.简介 Docker 最初是 dotCloud 公司创始人 Solomon Hykes 在法国期间发起的一个公司内部项目，它是基于 dotCloud 公司多年云服务技术的一次革新，并于 2013 年 3 月以 Apache 2.0 授权协议开源，主要项目代码在 GitHub 上进行维护。Docker 项目后来还加入了 Linux 基金会，并成立推动 开放容器联盟（OCI）。 Docker 自开源后受到广泛的关注和讨论，至今其 GitHub 项目 已经超过 5 万 7 千个星标和一万多个 fork。甚至由于 Docker 项目的火爆，在 2013 年底，dotCloud 公司决定改名为 Docker。Docker 最初是在 Ubuntu 12.04 上开发实现的；Red Hat 则从 RHEL 6.5 开始对 Docker 进行支持；Google 也在其 PaaS 产品中广泛应用 Docker。 Docker 使用 Google 公司推出的 Go 语言 进行开发实现，基于 Linux 内核的 cgroup，namespace，以及 OverlayFS 类的 Union FS 等技术，对进程进行封装隔离，属于 操作系统层面的虚拟化技术。由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为容器。最初实现是基于 LXC，从 0.</description>
			<content type="html"><![CDATA[<h3 id="docker">Docker</h3>
<h4 id="1简介">1.简介</h4>
<pre><code>Docker 最初是 dotCloud 公司创始人 Solomon Hykes 在法国期间发起的一个公司内部项目，它是基于 dotCloud 公司多年云服务技术的一次革新，并于 2013 年 3 月以 Apache 2.0 授权协议开源，主要项目代码在 GitHub 上进行维护。Docker 项目后来还加入了 Linux 基金会，并成立推动 开放容器联盟（OCI）。
Docker 自开源后受到广泛的关注和讨论，至今其 GitHub 项目 已经超过 5 万 7 千个星标和一万多个 fork。甚至由于 Docker 项目的火爆，在 2013 年底，dotCloud 公司决定改名为 Docker。Docker 最初是在 Ubuntu 12.04 上开发实现的；Red Hat 则从 RHEL 6.5 开始对 Docker 进行支持；Google 也在其 PaaS 产品中广泛应用 Docker。
Docker 使用 Google 公司推出的 Go 语言 进行开发实现，基于 Linux 内核的 cgroup，namespace，以及 OverlayFS 类的 Union FS 等技术，对进程进行封装隔离，属于 操作系统层面的虚拟化技术。由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为容器。最初实现是基于 LXC，从 0.7 版本以后开始去除 LXC，转而使用自行开发的 libcontainer，从 1.11 开始，则进一步演进为使用 runC 和 containerd。
</code></pre><p><img src="https://raw.githubusercontent.com/lixiang-code/images/master/uPic/K2tNCc.jpg" alt=""></p>
<p><strong>Docker</strong> 在容器的基础上，进行了进一步的封装，从文件系统、网络互联到进程隔离等等，极大的简化了容器的创建和维护。使得 <code>Docker</code> 技术比虚拟机技术更为轻便、快捷。</p>
<p><strong>Docker与传统虚拟机比较</strong></p>
<p><img src="https://raw.githubusercontent.com/lixiang-code/images/master/uPic/hbyhMk.jpg" alt=""></p>
<p><img src="https://raw.githubusercontent.com/lixiang-code/images/master/uPic/qSTYTF.jpg" alt=""></p>
<h4 id="2docker优势">2.Docker优势</h4>
<p><strong>更高效的利用系统资源</strong></p>
<pre><code>由于容器不需要进行硬件虚拟以及运行完整操作系统等额外开销，Docker 对系统资源的利用率更高。无论是应用执行速度、内存损耗或者文件存储速度，都要比传统虚拟机技术更高效。因此，相比虚拟机技术，一个相同配置的主机，往往可以运行更多数量的应用。
</code></pre><p><strong>更快速的启动时间</strong></p>
<pre><code>传统的虚拟机技术启动应用服务往往需要数分钟，而 Docker 容器应用，由于直接运行于宿主内核，无需启动完整的操作系统，因此可以做到秒级、甚至毫秒级的启动时间。大大的节约了开发、测试、部署的时间。
</code></pre><p><strong>一致的运行环境</strong></p>
<pre><code>开发过程中一个常见的问题是环境一致性问题。由于开发环境、测试环境、生产环境不一致，导致有些 bug 并未在开发过程中被发现。而 Docker 的镜像提供了除内核外完整的运行时环境，确保了应用运行环境一致性，从而不会再出现 「这段代码在我机器上没问题啊」 这类问题。
</code></pre><p><strong>持续交付和部署</strong></p>
<pre><code>对开发和运维（DevOps）人员来说，最希望的就是一次创建或配置，可以在任意地方正常运行。
使用 Docker 可以通过定制应用镜像来实现持续集成、持续交付、部署。开发人员可以通过 Dockerfile 来进行镜像构建，并结合 持续集成(Continuous Integration) 系统进行集成测试，而运维人员则可以直接在生产环境中快速部署该镜像，甚至结合 持续部署(Continuous Delivery/Deployment) 系统进行自动部署。
而且使用 Dockerfile 使镜像构建透明化，不仅仅开发团队可以理解应用运行环境，也方便运维团队理解应用运行所需条件，帮助更好的生产环境中部署该镜像。
</code></pre><p><strong>更轻松的迁移</strong></p>
<pre><code>由于 Docker 确保了执行环境的一致性，使得应用的迁移更加容易。Docker 可以在很多平台上运行，无论是物理机、虚拟机、公有云、私有云，甚至是笔记本，其运行结果是一致的。因此用户可以很轻易的将在一个平台上运行的应用，迁移到另一个平台上，而不用担心运行环境的变化导致应用无法正常运行的情况。
</code></pre><p><strong>更轻松的维护和扩展</strong></p>
<pre><code>Docker 使用的分层存储以及镜像的技术，使得应用重复部分的复用更为容易，也使得应用的维护更新更加简单，基于基础镜像进一步扩展镜像也变得非常简单。此外，Docker 团队同各个开源项目团队一起维护了一大批高质量的 官方镜像，既可以直接在生产环境使用，又可以作为基础进一步定制，大大的降低了应用服务的镜像制作成本。
</code></pre><h4 id="3docker拉取镜像">3.Docker拉取镜像</h4>
<p>从 Docker 镜像仓库获取镜像的命令是 <code>docker pull</code>。其命令格式为：</p>
<pre><code>docker pull [选项] [Docker Registry 地址[:端口号]/]仓库名[:标签]
</code></pre><p>具体的选项可以通过 <code>docker pull --help</code> 命令看到，这里我们说一下镜像名称的格式。</p>
<ul>
<li>Docker 镜像仓库地址：地址的格式一般是 <code>&lt;域名/IP&gt;[:端口号]</code>。默认地址是 Docker Hub(docker.io)。</li>
<li>仓库名：如之前所说，这里的仓库名是两段式名称，即 <code>&lt;用户名&gt;/&lt;软件名&gt;</code>。对于 Docker Hub，如果不给出用户名，则默认为 <code>library</code>，也就是官方镜像。</li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">$ docker pull ubuntu:18.04
18.04: Pulling from library/ubuntu
bf5d46315322: Pull <span class="nb">complete</span>
9f13e0ac480c: Pull <span class="nb">complete</span>
e8988b5b3097: Pull <span class="nb">complete</span>
40af181810e7: Pull <span class="nb">complete</span>
e6f7c7e5c03e: Pull <span class="nb">complete</span>
Digest: sha256:147913621d9cdea08853f6ba9116c2e27a3ceffecf3b492983ae97c3d643fbbe
Status: Downloaded newer image <span class="k">for</span> ubuntu:18.04
</code></pre></div><h4 id="4运行">4,运行</h4>
<p>有了镜像后，我们就能够以这个镜像为基础启动并运行一个容器。以上面的 <code>ubuntu:18.04</code> 为例，如果我们打算启动里面的 <code>bash</code> 并且进行交互式操作的话，可以执行下面的命令。</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">$ docker run -it --rm ubuntu:18.04 bash

root@e7009c6ce357:/# cat /etc/os-release
<span class="nv">NAME</span><span class="o">=</span><span class="s2">&#34;Ubuntu&#34;</span>
<span class="nv">VERSION</span><span class="o">=</span><span class="s2">&#34;18.04.1 LTS (Bionic Beaver)&#34;</span>
<span class="nv">ID</span><span class="o">=</span>ubuntu
<span class="nv">ID_LIKE</span><span class="o">=</span>debian
<span class="nv">PRETTY_NAME</span><span class="o">=</span><span class="s2">&#34;Ubuntu 18.04.1 LTS&#34;</span>
<span class="nv">VERSION_ID</span><span class="o">=</span><span class="s2">&#34;18.04&#34;</span>
<span class="nv">HOME_URL</span><span class="o">=</span><span class="s2">&#34;https://www.ubuntu.com/&#34;</span>
<span class="nv">SUPPORT_URL</span><span class="o">=</span><span class="s2">&#34;https://help.ubuntu.com/&#34;</span>
<span class="nv">BUG_REPORT_URL</span><span class="o">=</span><span class="s2">&#34;https://bugs.launchpad.net/ubuntu/&#34;</span>
<span class="nv">PRIVACY_POLICY_URL</span><span class="o">=</span><span class="s2">&#34;https://www.ubuntu.com/legal/terms-and-policies/privacy-policy&#34;</span>
<span class="nv">VERSION_CODENAME</span><span class="o">=</span>bionic
<span class="nv">UBUNTU_CODENAME</span><span class="o">=</span>bionic
</code></pre></div><p><code>docker run</code> 就是运行容器的命令，具体格式我们会在 <a href="">容器</a> 一节进行详细讲解，我们这里简要的说明一下上面用到的参数。</p>
<ul>
<li><code>-it</code>：这是两个参数，一个是 <code>-i</code>：交互式操作，一个是 <code>-t</code> 终端。我们这里打算进入 <code>bash</code> 执行一些命令并查看返回结果，因此我们需要交互式终端。</li>
<li><code>--rm</code>：这个参数是说容器退出后随之将其删除。默认情况下，为了排障需求，退出的容器并不会立即删除，除非手动 <code>docker rm</code>。我们这里只是随便执行个命令，看看结果，不需要排障和保留结果，因此使用 <code>--rm</code> 可以避免浪费空间。</li>
<li><code>ubuntu:18.04</code>：这是指用 <code>ubuntu:18.04</code> 镜像为基础来启动容器。</li>
<li><code>bash</code>：放在镜像名后的是 <strong>命令</strong>，这里我们希望有个交互式 Shell，因此用的是 <code>bash</code>。</li>
</ul>
<p>最后通过 <code>exit</code> 退出了这个容器。</p>
<h4 id="5查看镜像">5.查看镜像</h4>
<p>要想列出已经下载下来的镜像，可以使用 <code>docker image ls</code> 命令。</p>
<pre><code>$ docker image ls
REPOSITORY           TAG                 IMAGE ID            CREATED             SIZE
redis                latest              5f515359c7f8        5 days ago          183 MB
nginx                latest              05a60462f8ba        5 days ago          181 MB
mongo                3.2                 fe9198c04d62        5 days ago          342 MB
&lt;none&gt;               &lt;none&gt;              00285df0df87        5 days ago          342 MB
ubuntu               18.04               f753707788c5        4 weeks ago         127 MB
ubuntu               latest              f753707788c5        4 weeks ago         127 MB
</code></pre><p>列表包含了 <code>仓库名</code>、<code>标签</code>、<code>镜像 ID</code>、<code>创建时间</code> 以及 <code>所占用的空间</code>。</p>
<h4 id="6删除镜像">6.删除镜像</h4>
<p>如果要删除本地的镜像，可以使用 <code>docker image rm</code> 命令，其格式为：</p>
<pre><code>$ docker image rm [选项] &lt;镜像1&gt; [&lt;镜像2&gt; ...]
</code></pre><h4 id="7docker-commit">7.Docker commit</h4>
<pre><code>$ docker run --name webserver -d -p 80:80 nginx
</code></pre><p>这条命令会用 <code>nginx</code> 镜像启动一个容器，命名为 <code>webserver</code>，并且映射了 80 端口，这样我们可以用浏览器去访问这个 <code>nginx</code> 服务器。</p>
<p>如果是在本机运行的 Docker，那么可以直接访问：<code>http://localhost</code> ，如果是在虚拟机、云服务器上安装的 Docker，则需要将 <code>localhost</code> 换为虚拟机地址或者实际云服务器地址。</p>
<p>直接用浏览器访问的话，我们会看到默认的 Nginx 欢迎页面。</p>
<p><img src="https://raw.githubusercontent.com/lixiang-code/images/master/uPic/cn97N6.jpg" alt=""></p>
<p>现在，假设我们非常不喜欢这个欢迎页面，我们希望改成欢迎 Docker 的文字，我们可以使用 <code>docker exec</code> 命令进入容器，修改其内容。</p>
<pre><code>$ docker exec -it webserver bash
root@3729b97e8226:/# echo '&lt;h1&gt;Hello, Docker!&lt;/h1&gt;' &gt; /usr/share/nginx/html/index.html
root@3729b97e8226:/# exit
exit
</code></pre><p>我们以交互式终端方式进入 <code>webserver</code> 容器，并执行了 <code>bash</code> 命令，也就是获得一个可操作的 Shell。</p>
<p>然后，我们用 <code>&lt;h1&gt;Hello, Docker!&lt;/h1&gt;</code> 覆盖了 <code>/usr/share/nginx/html/index.html</code> 的内容。</p>
<p>现在我们再刷新浏览器的话，会发现内容被改变了。</p>
<p><img src="https://raw.githubusercontent.com/lixiang-code/images/master/uPic/UwWVcq.jpg" alt=""></p>
<p>我们修改了容器的文件，也就是改动了容器的存储层。我们可以通过 <code>docker diff</code> 命令看到具体的改动。</p>
<pre><code>$ docker diff webserver
C /root
A /root/.bash_history
C /run
C /usr
C /usr/share
C /usr/share/nginx
C /usr/share/nginx/html
C /usr/share/nginx/html/index.html
C /var
C /var/cache
C /var/cache/nginx
A /var/cache/nginx/client_temp
A /var/cache/nginx/fastcgi_temp
A /var/cache/nginx/proxy_temp
A /var/cache/nginx/scgi_temp
A /var/cache/nginx/uwsgi_temp
</code></pre><p>现在我们定制好了变化，我们希望能将其保存下来形成镜像。</p>
<p>要知道，当我们运行一个容器的时候（如果不使用卷的话），我们做的任何文件修改都会被记录于容器存储层里。而 Docker 提供了一个 <code>docker commit</code> 命令，可以将容器的存储层保存下来成为镜像。换句话说，就是在原有镜像的基础上，再叠加上容器的存储层，并构成新的镜像。以后我们运行这个新镜像的时候，就会拥有原有容器最后的文件变化。</p>
<p><code>docker commit</code> 的语法格式为：</p>
<pre><code>docker commit [选项] &lt;容器ID或容器名&gt; [&lt;仓库名&gt;[:&lt;标签&gt;]]
</code></pre><p>我们可以用下面的命令将容器保存为镜像：</p>
<pre><code>$ docker commit \
    --author &quot;Tao Wang &lt;twang2218@gmail.com&gt;&quot; \
    --message &quot;修改了默认网页&quot; \
    webserver \
    nginx:v2
sha256:07e33465974800ce65751acc279adc6ed2dc5ed4e0838f8b86f0c87aa1795214
</code></pre><p>其中 <code>--author</code> 是指定修改的作者，而 <code>--message</code> 则是记录本次修改的内容。这点和 <code>git</code> 版本控制相似，不过这里这些信息可以省略留空。</p>
<p>我们可以在 <code>docker image ls</code> 中看到这个新定制的镜像：</p>
<pre><code>$ docker image ls nginx
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
nginx               v2                  07e334659748        9 seconds ago       181.5 MB
nginx               1.11                05a60462f8ba        12 days ago         181.5 MB
nginx               latest              e43d811ce2f4        4 weeks ago         181.5 MB
</code></pre><p>我们还可以用 <code>docker history</code> 具体查看镜像内的历史记录，如果比较 <code>nginx:latest</code> 的历史记录，我们会发现新增了我们刚刚提交的这一层。</p>
<pre><code>$ docker history nginx:v2
IMAGE               CREATED             CREATED BY                                      SIZE                COMMENT
07e334659748        54 seconds ago      nginx -g daemon off;                            95 B                修改了默认网页
e43d811ce2f4        4 weeks ago         /bin/sh -c #(nop)  CMD [&quot;nginx&quot; &quot;-g&quot; &quot;daemon    0 B
&lt;missing&gt;           4 weeks ago         /bin/sh -c #(nop)  EXPOSE 443/tcp 80/tcp        0 B
&lt;missing&gt;           4 weeks ago         /bin/sh -c ln -sf /dev/stdout /var/log/nginx/   22 B
&lt;missing&gt;           4 weeks ago         /bin/sh -c apt-key adv --keyserver hkp://pgp.   58.46 MB
&lt;missing&gt;           4 weeks ago         /bin/sh -c #(nop)  ENV NGINX_VERSION=1.11.5-1   0 B
&lt;missing&gt;           4 weeks ago         /bin/sh -c #(nop)  MAINTAINER NGINX Docker Ma   0 B
&lt;missing&gt;           4 weeks ago         /bin/sh -c #(nop)  CMD [&quot;/bin/bash&quot;]            0 B
&lt;missing&gt;           4 weeks ago         /bin/sh -c #(nop) ADD file:23aa4f893e3288698c   123 MB
</code></pre><p>新的镜像定制好后，我们可以来运行这个镜像。</p>
<pre><code>docker run --name web2 -d -p 81:80 nginx:v2
</code></pre><p>这里我们命名为新的服务为 <code>web2</code>，并且映射到 <code>81</code> 端口。访问 <code>http://localhost:81</code> 看到结果，其内容应该和之前修改后的 <code>webserver</code> 一样。</p>
<h4 id="8dockerfile">8.Dockerfile</h4>
<p>所谓定制镜像，那一定是以一个镜像为基础，在其上进行定制。就像我们之前运行了一个 <code>nginx</code> 镜像的容器，再进行修改一样，基础镜像是必须指定的。而 <code>FROM</code> 就是指定 <strong>基础镜像</strong>，因此一个 <code>Dockerfile</code> 中 <code>FROM</code> 是必备的指令，并且必须是第一条指令。</p>
<p>在 <a href="https://hub.docker.com/search?q=&amp;type=image&amp;image_filter=official">Docker Hub</a> 上有非常多的高质量的官方镜像，有可以直接拿来使用的服务类的镜像，如 <a href="https://hub.docker.com/_/nginx/"><code>nginx</code></a>、<a href="https://hub.docker.com/_/redis/"><code>redis</code></a>、<a href="https://hub.docker.com/_/mongo/"><code>mongo</code></a>、<a href="https://hub.docker.com/_/mysql/"><code>mysql</code></a>、<a href="https://hub.docker.com/_/httpd/"><code>httpd</code></a>、<a href="https://hub.docker.com/_/php/"><code>php</code></a>、<a href="https://hub.docker.com/_/tomcat/"><code>tomcat</code></a> 等；也有一些方便开发、构建、运行各种语言应用的镜像，如 <a href="https://hub.docker.com/_/node"><code>node</code></a>、<a href="https://hub.docker.com/_/openjdk/"><code>openjdk</code></a>、<a href="https://hub.docker.com/_/python/"><code>python</code></a>、<a href="https://hub.docker.com/_/ruby/"><code>ruby</code></a>、<a href="https://hub.docker.com/_/golang/"><code>golang</code></a> 等。可以在其中寻找一个最符合我们最终目标的镜像为基础镜像进行定制。</p>
<p>如果没有找到对应服务的镜像，官方镜像中还提供了一些更为基础的操作系统镜像，如 <a href="https://hub.docker.com/_/ubuntu/"><code>ubuntu</code></a>、<a href="https://hub.docker.com/_/debian/"><code>debian</code></a>、<a href="https://hub.docker.com/_/centos/"><code>centos</code></a>、<a href="https://hub.docker.com/_/fedora/"><code>fedora</code></a>、<a href="https://hub.docker.com/_/alpine/"><code>alpine</code></a> 等，这些操作系统的软件库为我们提供了更广阔的扩展空间。</p>
<p>除了选择现有镜像为基础镜像外，Docker 还存在一个特殊的镜像，名为 <code>scratch</code>。这个镜像是虚拟的概念，并不实际存在，它表示一个空白的镜像。</p>
<pre><code>FROM scratch
...
</code></pre><p>如果你以 <code>scratch</code> 为基础镜像的话，意味着你不以任何镜像为基础，接下来所写的指令将作为镜像第一层开始存在。</p>
<p>不以任何系统为基础，直接将可执行文件复制进镜像的做法并不罕见，比如 <a href="https://hub.docker.com/_/swarm/"><code>swarm</code></a>、<a href="https://quay.io/repository/coreos/etcd"><code>etcd</code></a>。对于 Linux 下静态编译的程序来说，并不需要有操作系统提供运行时支持，所需的一切库都已经在可执行文件里了，因此直接 <code>FROM scratch</code> 会让镜像体积更加小巧。使用 <a href="https://golang.org/">Go 语言</a> 开发的应用很多会使用这种方式来制作镜像，这也是为什么有人认为 Go 是特别适合容器微服务架构的语言的原因之一。</p>
<h5 id="81run命令">8.1.run命令</h5>
<p><code>RUN</code> 指令是用来执行命令行命令的。由于命令行的强大能力，<code>RUN</code> 指令在定制镜像时是最常用的指令之一。其格式有两种：</p>
<ul>
<li><em>shell</em> 格式：<code>RUN &lt;命令&gt;</code>，就像直接在命令行中输入的命令一样。刚才写的 Dockerfile 中的 <code>RUN</code> 指令就是这种格式。</li>
</ul>
<pre><code>RUN echo '&lt;h1&gt;Hello, Docker!&lt;/h1&gt;' &gt; /usr/share/nginx/html/index.html
</code></pre><ul>
<li><em>exec</em> 格式：<code>RUN [&quot;可执行文件&quot;, &quot;参数1&quot;, &quot;参数2&quot;]</code>，这更像是函数调用中的格式。</li>
</ul>
<p>既然 <code>RUN</code> 就像 Shell 脚本一样可以执行命令，那么我们是否就可以像 Shell 脚本一样把每个命令对应一个 RUN 呢？比如这样：</p>
<pre><code>FROM debian:stretch


RUN apt-get update
RUN apt-get install -y gcc libc6-dev make wget
RUN wget -O redis.tar.gz &quot;http://download.redis.io/releases/redis-5.0.3.tar.gz&quot;
RUN mkdir -p /usr/src/redis
RUN tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1
RUN make -C /usr/src/redis
RUN make -C /usr/src/redis install
</code></pre><p>之前说过，Dockerfile 中每一个指令都会建立一层，<code>RUN</code> 也不例外。每一个 <code>RUN</code> 的行为，就和刚才我们手工建立镜像的过程一样：新建立一层，在其上执行这些命令，执行结束后，<code>commit</code> 这一层的修改，构成新的镜像。</p>
<p>而上面的这种写法，创建了 7 层镜像。这是完全没有意义的，而且很多运行时不需要的东西，都被装进了镜像里，比如编译环境、更新的软件包等等。结果就是产生非常臃肿、非常多层的镜像，不仅仅增加了构建部署的时间，也很容易出错。 这是很多初学 Docker 的人常犯的一个错误。</p>
<p><em>Union FS 是有最大层数限制的，比如 AUFS，曾经是最大不得超过 42 层，现在是不得超过 127 层。</em></p>
<p>上面的 <code>Dockerfile</code> 正确的写法应该是这样：</p>
<pre><code>FROM debian:stretch

RUN set -x; buildDeps='gcc libc6-dev make wget' \
    &amp;&amp; apt-get update \
    &amp;&amp; apt-get install -y $buildDeps \
    &amp;&amp; wget -O redis.tar.gz &quot;http://download.redis.io/releases/redis-5.0.3.tar.gz&quot; \
    &amp;&amp; mkdir -p /usr/src/redis \
    &amp;&amp; tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1 \
    &amp;&amp; make -C /usr/src/redis \
    &amp;&amp; make -C /usr/src/redis install \
    &amp;&amp; rm -rf /var/lib/apt/lists/* \
    &amp;&amp; rm redis.tar.gz \
    &amp;&amp; rm -r /usr/src/redis \
    &amp;&amp; apt-get purge -y --auto-remove $buildDeps
</code></pre><p>首先，之前所有的命令只有一个目的，就是编译、安装 redis 可执行文件。因此没有必要建立很多层，这只是一层的事情。因此，这里没有使用很多个 <code>RUN</code> 一一对应不同的命令，而是仅仅使用一个 <code>RUN</code> 指令，并使用 <code>&amp;&amp;</code> 将各个所需命令串联起来。将之前的 7 层，简化为了 1 层。在撰写 Dockerfile 的时候，要经常提醒自己，这并不是在写 Shell 脚本，而是在定义每一层该如何构建。</p>
<p>并且，这里为了格式化还进行了换行。Dockerfile 支持 Shell 类的行尾添加 <code>\</code> 的命令换行方式，以及行首 <code>#</code> 进行注释的格式。良好的格式，比如换行、缩进、注释等，会让维护、排障更为容易，这是一个比较好的习惯。</p>
<p>此外，还可以看到这一组命令的最后添加了清理工作的命令，删除了为了编译构建所需要的软件，清理了所有下载、展开的文件，并且还清理了 <code>apt</code> 缓存文件。这是很重要的一步，我们之前说过，镜像是多层存储，每一层的东西并不会在下一层被删除，会一直跟随着镜像。因此镜像构建时，一定要确保每一层只添加真正需要添加的东西，任何无关的东西都应该清理掉。</p>
<h5 id="82构建镜像">8.2.构建镜像</h5>
<p>再回到之前定制的 nginx 镜像的 Dockerfile 来。现在我们明白了这个 Dockerfile 的内容，那么让我们来构建这个镜像吧。</p>
<p>在 <code>Dockerfile</code> 文件所在目录执行：</p>
<pre><code>$ docker build -t nginx:v3 .
Sending build context to Docker daemon 2.048 kB
Step 1 : FROM nginx
 ---&gt; e43d811ce2f4
Step 2 : RUN echo '&lt;h1&gt;Hello, Docker!&lt;/h1&gt;' &gt; /usr/share/nginx/html/index.html
 ---&gt; Running in 9cdc27646c7b
 ---&gt; 44aa4490ce2c
Removing intermediate container 9cdc27646c7b
Successfully built 44aa4490ce2c
</code></pre><p>从命令的输出结果中，我们可以清晰的看到镜像的构建过程。在 <code>Step 2</code> 中，如同我们之前所说的那样，<code>RUN</code> 指令启动了一个容器 <code>9cdc27646c7b</code>，执行了所要求的命令，并最后提交了这一层 <code>44aa4490ce2c</code>，随后删除了所用到的这个容器 <code>9cdc27646c7b</code>。</p>
<p>这里我们使用了 <code>docker build</code> 命令进行镜像构建。其格式为：</p>
<pre><code>docker build [选项] &lt;上下文路径/URL/-&gt;
</code></pre><p>在这里我们指定了最终镜像的名称 <code>-t nginx:v3</code>，构建成功后，我们可以像之前运行 <code>nginx:v2</code> 那样来运行这个镜像，其结果会和 <code>nginx:v2</code> 一样。</p>
<h5 id="83context">8.3.Context</h5>
<p>如果注意，会看到 <code>docker build</code> 命令最后有一个 <code>.</code>。<code>.</code> 表示当前目录，而 <code>Dockerfile</code> 就在当前目录，因此不少初学者以为这个路径是在指定 <code>Dockerfile</code> 所在路径，这么理解其实是不准确的。如果对应上面的命令格式，你可能会发现，这是在指定 <strong>上下文路径</strong>。那么什么是上下文呢？</p>
<p>首先我们要理解 <code>docker build</code> 的工作原理。Docker 在运行时分为 Docker 引擎（也就是服务端守护进程）和客户端工具。Docker 的引擎提供了一组 REST API，被称为 <a href="https://docs.docker.com/develop/sdk/">Docker Remote API</a>，而如 <code>docker</code> 命令这样的客户端工具，则是通过这组 API 与 Docker 引擎交互，从而完成各种功能。因此，虽然表面上我们好像是在本机执行各种 <code>docker</code> 功能，但实际上，一切都是使用的远程调用形式在服务端（Docker 引擎）完成。也因为这种 C/S 设计，让我们操作远程服务器的 Docker 引擎变得轻而易举。</p>
<p>当我们进行镜像构建的时候，并非所有定制都会通过 <code>RUN</code> 指令完成，经常会需要将一些本地文件复制进镜像，比如通过 <code>COPY</code> 指令、<code>ADD</code> 指令等。而 <code>docker build</code> 命令构建镜像，其实并非在本地构建，而是在服务端，也就是 Docker 引擎中构建的。那么在这种客户端/服务端的架构中，如何才能让服务端获得本地文件呢？</p>
<p>这就引入了上下文的概念。当构建的时候，用户会指定构建镜像上下文的路径，<code>docker build</code> 命令得知这个路径后，会将路径下的所有内容打包，然后上传给 Docker 引擎。这样 Docker 引擎收到这个上下文包后，展开就会获得构建镜像所需的一切文件。</p>
<p>如果在 <code>Dockerfile</code> 中这么写：</p>
<pre><code>COPY ./package.json /app/
</code></pre><p>这并不是要复制执行 <code>docker build</code> 命令所在的目录下的 <code>package.json</code>，也不是复制 <code>Dockerfile</code> 所在目录下的 <code>package.json</code>，而是复制 <strong>上下文（context）</strong> 目录下的 <code>package.json</code>。</p>
<p>因此，<code>COPY</code> 这类指令中的源文件的路径都是<em>相对路径</em>。这也是初学者经常会问的为什么 <code>COPY ../package.json /app</code> 或者 <code>COPY /opt/xxxx /app</code> 无法工作的原因，因为这些路径已经超出了上下文的范围，Docker 引擎无法获得这些位置的文件。如果真的需要那些文件，应该将它们复制到上下文目录中去。</p>
<p>现在就可以理解刚才的命令 <code>docker build -t nginx:v3 .</code> 中的这个 <code>.</code>，实际上是在指定上下文的目录，<code>docker build</code> 命令会将该目录下的内容打包交给 Docker 引擎以帮助构建镜像。</p>
<p>如果观察 <code>docker build</code> 输出，我们其实已经看到了这个发送上下文的过程：</p>
<pre><code>$ docker build -t nginx:v3 .
Sending build context to Docker daemon 2.048 kB
...
</code></pre><p>理解构建上下文对于镜像构建是很重要的，避免犯一些不应该的错误。比如有些初学者在发现 <code>COPY /opt/xxxx /app</code> 不工作后，于是干脆将 <code>Dockerfile</code> 放到了硬盘根目录去构建，结果发现 <code>docker build</code> 执行后，在发送一个几十 GB 的东西，极为缓慢而且很容易构建失败。那是因为这种做法是在让 <code>docker build</code> 打包整个硬盘，这显然是使用错误。</p>
<p>一般来说，应该会将 <code>Dockerfile</code> 置于一个空目录下，或者项目根目录下。如果该目录下没有所需文件，那么应该把所需文件复制一份过来。如果目录下有些东西确实不希望构建时传给 Docker 引擎，那么可以用 <code>.gitignore</code> 一样的语法写一个 <code>.dockerignore</code>，该文件是用于剔除不需要作为上下文传递给 Docker 引擎的。</p>
<p>那么为什么会有人误以为 <code>.</code> 是指定 <code>Dockerfile</code> 所在目录呢？这是因为在默认情况下，如果不额外指定 <code>Dockerfile</code> 的话，会将上下文目录下的名为 <code>Dockerfile</code> 的文件作为 Dockerfile。</p>
<p>这只是默认行为，实际上 <code>Dockerfile</code> 的文件名并不要求必须为 <code>Dockerfile</code>，而且并不要求必须位于上下文目录中，比如可以用 <code>-f ../Dockerfile.php</code> 参数指定某个文件作为 <code>Dockerfile</code>。</p>
<p>当然，一般大家习惯性的会使用默认的文件名 <code>Dockerfile</code>，以及会将其置于镜像构建上下文目录中。</p>
<h4 id="9网络">9.网络</h4>
<h5 id="91外部网络访问容器">9.1.外部网络访问容器</h5>
<p>容器中可以运行一些网络应用，要让外部也可以访问这些应用，可以通过 <code>-P</code> 或 <code>-p</code> 参数来指定端口映射。</p>
<p>当使用 <code>-P</code> 标记时，Docker 会随机映射一个端口到内部容器开放的网络端口。</p>
<p>使用 <code>docker container ls</code> 可以看到，本地主机的 32768 被映射到了容器的 80 端口。此时访问本机的 32768 端口即可访问容器内 NGINX 默认页面。</p>
<pre><code>$ docker run -d -P nginx:alpine

$ docker container ls -l
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                   NAMES
fae320d08268        nginx:alpine        &quot;/docker-entrypoint.…&quot;   24 seconds ago      Up 20 seconds       0.0.0.0:32768-&gt;80/tcp   bold_mcnulty
</code></pre><p>同样的，可以通过 <code>docker logs</code> 命令来查看访问记录。</p>
<pre><code>$ docker logs fa
172.17.0.1 - - [25/Aug/2020:08:34:04 +0000] &quot;GET / HTTP/1.1&quot; 200 612 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:80.0) Gecko/20100101 Firefox/80.0&quot; &quot;-&quot;
</code></pre><p><code>-p</code> 则可以指定要映射的端口，并且，在一个指定端口上只可以绑定一个容器。支持的格式有 <code>ip:hostPort:containerPort | ip::containerPort | hostPort:containerPort</code>。</p>
<p><strong>映射所有接口地址</strong></p>
<p>使用 <code>hostPort:containerPort</code> 格式本地的 80 端口映射到容器的 80 端口，可以执行</p>
<pre><code>$ docker run -d -p 80:80 nginx:alpine
</code></pre><p>此时默认会绑定本地所有接口上的所有地址。</p>
<p><strong>映射到指定地址的指定端口</strong></p>
<p>可以使用 <code>ip:hostPort:containerPort</code> 格式指定映射使用一个特定地址，比如 localhost 地址 127.0.0.1</p>
<pre><code>$ docker run -d -p 127.0.0.1:80:80 nginx:alpine
</code></pre><p><strong>映射到指定地址的任意端口</strong></p>
<p>使用 <code>ip::containerPort</code> 绑定 localhost 的任意端口到容器的 80 端口，本地主机会自动分配一个端口。</p>
<pre><code>$ docker run -d -p 127.0.0.1::80 nginx:alpine
</code></pre><p>还可以使用 <code>udp</code> 标记来指定 <code>udp</code> 端口</p>
<pre><code>$ docker run -d -p 127.0.0.1:80:80/udp nginx:alpine
</code></pre><p><strong>查看映射端口配置</strong></p>
<p>使用 <code>docker port</code> 来查看当前映射的端口配置，也可以查看到绑定的地址</p>
<pre><code>$ docker port fa 80
0.0.0.0:32768
</code></pre><p>注意：</p>
<ul>
<li>容器有自己的内部网络和 ip 地址（使用 <code>docker inspect</code> 查看，Docker 还可以有一个可变的网络配置。）</li>
<li><code>-p</code> 标记可以多次使用来绑定多个端口</li>
</ul>
<p>例如</p>
<pre><code>$ docker run -d \
    -p 80:80 \
    -p 443:443 \
    nginx:alpine
</code></pre><h5 id="92容器互联">9.2.容器互联</h5>
<p>如果你之前有 <code>Docker</code> 使用经验，你可能已经习惯了使用 <code>--link</code> 参数来使容器互联。</p>
<p>随着 Docker 网络的完善，强烈建议大家将容器加入自定义的 Docker 网络来连接多个容器，而不是使用 <code>--link</code> 参数。</p>
<p><strong>新建网络</strong></p>
<p>下面先创建一个新的 Docker 网络。</p>
<pre><code>$ docker network create -d bridge my-net
</code></pre><p><code>-d</code> 参数指定 Docker 网络类型，有 <code>bridge</code> <code>overlay</code>。其中 <code>overlay</code> 网络类型用于 <a href="">Swarm mode</a>，在本小节中你可以忽略它。</p>
<p><strong>连接容器</strong></p>
<p>运行一个容器并连接到新建的 <code>my-net</code> 网络</p>
<pre><code>$ docker run -it --rm --name busybox1 --network my-net busybox sh
</code></pre><p>打开新的终端，再运行一个容器并加入到 <code>my-net</code> 网络</p>
<pre><code>$ docker run -it --rm --name busybox2 --network my-net busybox sh
</code></pre><p>再打开一个新的终端查看容器信息</p>
<pre><code>$ docker container ls


CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
b47060aca56b        busybox             &quot;sh&quot;                11 minutes ago      Up 11 minutes                           busybox2
8720575823ec        busybox             &quot;sh&quot;                16 minutes ago      Up 16 minutes                           busybox1
</code></pre><p>下面通过 <code>ping</code> 来证明 <code>busybox1</code> 容器和 <code>busybox2</code> 容器建立了互联关系。</p>
<p>在 <code>busybox1</code> 容器输入以下命令</p>
<pre><code>/ # ping busybox2
PING busybox2 (172.19.0.3): 56 data bytes
64 bytes from 172.19.0.3: seq=0 ttl=64 time=0.072 ms
64 bytes from 172.19.0.3: seq=1 ttl=64 time=0.118 ms
</code></pre><p>用 ping 来测试连接 <code>busybox2</code> 容器，它会解析成 <code>172.19.0.3</code>。</p>
<p>同理在 <code>busybox2</code> 容器执行 <code>ping busybox1</code>，也会成功连接到。</p>
<pre><code>/ # ping busybox1
PING busybox1 (172.19.0.2): 56 data bytes
64 bytes from 172.19.0.2: seq=0 ttl=64 time=0.064 ms
64 bytes from 172.19.0.2: seq=1 ttl=64 time=0.143 ms
</code></pre><p>这样，<code>busybox1</code> 容器和 <code>busybox2</code> 容器建立了互联关系。</p>
<h5 id="93配置dns">9.3.配置DNS</h5>
<p>如何自定义配置容器的主机名和 DNS 呢？秘诀就是 Docker 利用虚拟文件来挂载容器的 3 个相关配置文件。</p>
<p>在容器中使用 <code>mount</code> 命令可以看到挂载信息：</p>
<pre><code>$ mount
/dev/disk/by-uuid/1fec...ebdf on /etc/hostname type ext4 ...
/dev/disk/by-uuid/1fec...ebdf on /etc/hosts type ext4 ...
tmpfs on /etc/resolv.conf type tmpfs ...
</code></pre><p>这种机制可以让宿主主机 DNS 信息发生更新后，所有 Docker 容器的 DNS 配置通过 <code>/etc/resolv.conf</code> 文件立刻得到更新。</p>
<p>配置全部容器的 DNS ，也可以在 <code>/etc/docker/daemon.json</code> 文件中增加以下内容来设置。</p>
<pre><code>{
  &quot;dns&quot; : [
    &quot;114.114.114.114&quot;,
    &quot;8.8.8.8&quot;
  ]
}
</code></pre><p>这样每次启动的容器 DNS 自动配置为 <code>114.114.114.114</code> 和 <code>8.8.8.8</code>。使用以下命令来证明其已经生效。</p>
<pre><code>$ docker run -it --rm ubuntu:18.04  cat etc/resolv.conf


nameserver 114.114.114.114
nameserver 8.8.8.8
</code></pre><p>如果用户想要手动指定容器的配置，可以在使用 <code>docker run</code> 命令启动容器时加入如下参数：</p>
<p><code>-h HOSTNAME</code> 或者 <code>--hostname=HOSTNAME</code> 设定容器的主机名，它会被写到容器内的 <code>/etc/hostname</code> 和 <code>/etc/hosts</code>。但它在容器外部看不到，既不会在 <code>docker container ls</code> 中显示，也不会在其他的容器的 <code>/etc/hosts</code> 看到。</p>
<p><code>--dns=IP_ADDRESS</code> 添加 DNS 服务器到容器的 <code>/etc/resolv.conf</code> 中，让容器用这个服务器来解析所有不在 <code>/etc/hosts</code> 中的主机名。</p>
<p><code>--dns-search=DOMAIN</code> 设定容器的搜索域，当设定搜索域为 <code>.example.com</code> 时，在搜索一个名为 host 的主机时，DNS 不仅搜索 host，还会搜索 <code>host.example.com</code>。</p>
<pre><code>注意：如果在容器启动时没有指定最后两个参数，Docker 会默认用主机上的 /etc/resolv.conf 来配置容器。
</code></pre>]]></content>
		</item>
		
		<item>
			<title></title>
			<link>https://example.com/posts/docker%E8%AE%BE%E7%BD%AE%E7%8B%AC%E7%AB%8Bip/</link>
			<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
			
			<guid>https://example.com/posts/docker%E8%AE%BE%E7%BD%AE%E7%8B%AC%E7%AB%8Bip/</guid>
			<description>Docker设置独立IP </description>
			<content type="html"><![CDATA[<h4 id="docker设置独立ip">Docker设置独立IP</h4>
]]></content>
		</item>
		
		<item>
			<title></title>
			<link>https://example.com/posts/gorm/</link>
			<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
			
			<guid>https://example.com/posts/gorm/</guid>
			<description>GORM 安装 go get -u github.com/jinzhu/gorm 示例 package main import ( &amp;#34;github.com/jinzhu/gorm&amp;#34; _ &amp;#34;github.com/jinzhu/gorm/dialects/sqlite&amp;#34; ) type Product struct { gorm.Model Code string Price uint } func main() { db, err := gorm.Open(&amp;#34;sqlite3&amp;#34;, &amp;#34;test.db&amp;#34;) if err != nil { panic(&amp;#34;failed to connect database&amp;#34;) } defer db.Close() // Migrate the schema  db.AutoMigrate(&amp;amp;Product{}) // 创建  db.Create(&amp;amp;Product{Code: &amp;#34;L1212&amp;#34;, Price: 1000}) // 读取  var product Product db.First(&amp;amp;product, 1) // 查询id为1的product  db.First(&amp;amp;product, &amp;#34;code = ?</description>
			<content type="html"><![CDATA[<h3 id="gorm">GORM</h3>
<h4 id="安装">安装</h4>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="k">go</span> <span class="nx">get</span> <span class="o">-</span><span class="nx">u</span> <span class="nx">github</span><span class="p">.</span><span class="nx">com</span><span class="o">/</span><span class="nx">jinzhu</span><span class="o">/</span><span class="nx">gorm</span>
</code></pre></div><h4 id="示例">示例</h4>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kn">package</span> <span class="nx">main</span>

<span class="kn">import</span> <span class="p">(</span>
  <span class="s">&#34;github.com/jinzhu/gorm&#34;</span>
  <span class="nx">_</span> <span class="s">&#34;github.com/jinzhu/gorm/dialects/sqlite&#34;</span>
<span class="p">)</span>

<span class="kd">type</span> <span class="nx">Product</span> <span class="kd">struct</span> <span class="p">{</span>
  <span class="nx">gorm</span><span class="p">.</span><span class="nx">Model</span>
  <span class="nx">Code</span> <span class="kt">string</span>
  <span class="nx">Price</span> <span class="kt">uint</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="nx">db</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">gorm</span><span class="p">.</span><span class="nf">Open</span><span class="p">(</span><span class="s">&#34;sqlite3&#34;</span><span class="p">,</span> <span class="s">&#34;test.db&#34;</span><span class="p">)</span>
  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
    <span class="nb">panic</span><span class="p">(</span><span class="s">&#34;failed to connect database&#34;</span><span class="p">)</span>
  <span class="p">}</span>
  <span class="k">defer</span> <span class="nx">db</span><span class="p">.</span><span class="nf">Close</span><span class="p">()</span>

  <span class="c1">// Migrate the schema
</span><span class="c1"></span>  <span class="nx">db</span><span class="p">.</span><span class="nf">AutoMigrate</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">Product</span><span class="p">{})</span>

  <span class="c1">// 创建
</span><span class="c1"></span>  <span class="nx">db</span><span class="p">.</span><span class="nf">Create</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">Product</span><span class="p">{</span><span class="nx">Code</span><span class="p">:</span> <span class="s">&#34;L1212&#34;</span><span class="p">,</span> <span class="nx">Price</span><span class="p">:</span> <span class="mi">1000</span><span class="p">})</span>

  <span class="c1">// 读取
</span><span class="c1"></span>  <span class="kd">var</span> <span class="nx">product</span> <span class="nx">Product</span>
  <span class="nx">db</span><span class="p">.</span><span class="nf">First</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">product</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="c1">// 查询id为1的product
</span><span class="c1"></span>  <span class="nx">db</span><span class="p">.</span><span class="nf">First</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">product</span><span class="p">,</span> <span class="s">&#34;code = ?&#34;</span><span class="p">,</span> <span class="s">&#34;L1212&#34;</span><span class="p">)</span> <span class="c1">// 查询code为l1212的product
</span><span class="c1"></span>
  <span class="c1">// 更新 - 更新product的price为2000
</span><span class="c1"></span>  <span class="nx">db</span><span class="p">.</span><span class="nf">Model</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">product</span><span class="p">).</span><span class="nf">Update</span><span class="p">(</span><span class="s">&#34;Price&#34;</span><span class="p">,</span> <span class="mi">2000</span><span class="p">)</span>

  <span class="c1">// 删除 - 删除product
</span><span class="c1"></span>  <span class="nx">db</span><span class="p">.</span><span class="nf">Delete</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">product</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div><h4 id="模型">模型</h4>
<p>模型(Model)通常只是正常的golang struct, 基本的go类型或它们的指针. 同时也支持sql.Scanner及driver.Valuer接口(interfaces).</p>
<p><strong>模型示例</strong></p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kd">type</span> <span class="nx">User</span> <span class="kd">struct</span> <span class="p">{</span>
  <span class="nx">gorm</span><span class="p">.</span><span class="nx">Model</span>
  <span class="nx">Name</span>         <span class="kt">string</span>
  <span class="nx">Age</span>          <span class="nx">sql</span><span class="p">.</span><span class="nx">NullInt64</span>
  <span class="nx">Birthday</span>     <span class="o">*</span><span class="nx">time</span><span class="p">.</span><span class="nx">Time</span>
  <span class="nx">Email</span>        <span class="kt">string</span>  <span class="s">`gorm:&#34;type:varchar(100);unique_index&#34;`</span>
  <span class="nx">Role</span>         <span class="kt">string</span>  <span class="s">`gorm:&#34;size:255&#34;`</span> <span class="c1">// 设置字段大小为255
</span><span class="c1"></span>  <span class="nx">MemberNumber</span> <span class="o">*</span><span class="kt">string</span> <span class="s">`gorm:&#34;unique;not null&#34;`</span> <span class="c1">// 设置会员号（member number）唯一并且不为空
</span><span class="c1"></span>  <span class="nx">Num</span>          <span class="kt">int</span>     <span class="s">`gorm:&#34;AUTO_INCREMENT&#34;`</span> <span class="c1">// 设置 num 为自增类型
</span><span class="c1"></span>  <span class="nx">Address</span>      <span class="kt">string</span>  <span class="s">`gorm:&#34;index:addr&#34;`</span> <span class="c1">// 给address字段创建名为addr的索引
</span><span class="c1"></span>  <span class="nx">IgnoreMe</span>     <span class="kt">int</span>     <span class="s">`gorm:&#34;-&#34;`</span> <span class="c1">// 忽略本字段}
</span></code></pre></div><p><strong>结构体标记</strong>(tags)</p>
<p>标记(tags)在声明模型是是可选项. gorm支持以下标记:</p>
<p><strong>支持的结构体标记(Struct tags)</strong></p>
<table>
<thead>
<tr>
<th><strong>结构体标记(Tag)</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>Column</td>
<td>指定列名</td>
</tr>
<tr>
<td>Type</td>
<td>指定列数据类型</td>
</tr>
<tr>
<td>Size</td>
<td>指定列大小, 默认255</td>
</tr>
<tr>
<td>PRIMARY_KEY</td>
<td>将列指定为主键</td>
</tr>
<tr>
<td>UNIQUE</td>
<td>将列主动为唯一</td>
</tr>
<tr>
<td>DEFAULT</td>
<td>指定列默认值</td>
</tr>
<tr>
<td>PRECISION</td>
<td>指定列精度</td>
</tr>
<tr>
<td>NOT NULL</td>
<td>将列指定为非NULL</td>
</tr>
<tr>
<td>AUTO_INCREMENT</td>
<td>指定列是否为自增类型</td>
</tr>
<tr>
<td>INDEX</td>
<td>创建具有或不带名称的索引, 如果多个索引同名则创建复合索引</td>
</tr>
<tr>
<td>UNIQUE_INDEX</td>
<td>和 <code>INDEX</code> 类似，只不过创建的是唯一索引</td>
</tr>
<tr>
<td>EMBEDDED</td>
<td>将结构设置为嵌入</td>
</tr>
<tr>
<td>EMBEDDED_PREFIX</td>
<td>设置嵌入结构的前缀</td>
</tr>
<tr>
<td>-</td>
<td>忽略此字段</td>
</tr>
</tbody>
</table>
<p><strong>关联struct的标记(tags)</strong></p>
<table>
<thead>
<tr>
<th><strong>Tag</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>MANY2MANY</td>
<td>指定连接表</td>
</tr>
<tr>
<td>FOREIGNKEY</td>
<td>设置外键</td>
</tr>
<tr>
<td>ASSOCIATION_FOREIGNKEY</td>
<td>设置关联外键</td>
</tr>
<tr>
<td>POLYMORPHIC</td>
<td>指定多态类型</td>
</tr>
<tr>
<td>POLYMORPHIC_VALUE</td>
<td>指定多态值</td>
</tr>
<tr>
<td>JOINTABLE_FOREIGNKEY</td>
<td>指定连接表的外键</td>
</tr>
<tr>
<td>ASSOCIATION_JOINTABLE_FOREIGNKEY</td>
<td>指定连接表的关联外键</td>
</tr>
<tr>
<td>SAVE_ASSOCIATIONS</td>
<td>是否自动完成 save 的相关操作</td>
</tr>
<tr>
<td>ASSOCIATION_AUTOUPDATE</td>
<td>是否自动完成 update 的相关操作</td>
</tr>
<tr>
<td>ASSOCIATION_AUTOCREATE</td>
<td>是否自动完成 create 的相关操作</td>
</tr>
<tr>
<td>ASSOCIATION_SAVE_REFERENCE</td>
<td>是否自动完成引用的 save 的相关操作</td>
</tr>
<tr>
<td>PRELOAD</td>
<td>是否自动完成预加载的相关操作</td>
</tr>
</tbody>
</table>
]]></content>
		</item>
		
		<item>
			<title></title>
			<link>https://example.com/posts/message-queue/</link>
			<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
			
			<guid>https://example.com/posts/message-queue/</guid>
			<description></description>
			<content type="html"><![CDATA[]]></content>
		</item>
		
		<item>
			<title></title>
			<link>https://example.com/posts/mysql%E7%AC%94%E8%AE%B0/</link>
			<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
			
			<guid>https://example.com/posts/mysql%E7%AC%94%E8%AE%B0/</guid>
			<description>MySql笔记 基本使用 DDL语句 1. 创建database
mysql&amp;gt; create database test1; Query OK, 1 row affected (0.00 sec) 2. 查看datebase
mysql&amp;gt; show databases; +--------------------+ | Database | +--------------------+ | information_schema | | cluster | | mysql | | test | | test1 | +--------------------+ 5 rows in set (0.00 sec) 3. 使用database
mysql&amp;gt; use mysql Database changed 4. 查看数据库所有表
mysql&amp;gt; show tables; +---------------------------+ | Tables_in_mysql | +---------------------------+ | columns_priv | | db | | event | | func | | general_log | | help_category | | help_keyword | | help_relation | | help_topic | | host | | plugin | | proc | | procs_priv | | slow_log | | tables_priv | | time_zone | | time_zone_leap_second | | time_zone_name | | time_zone_transition | | time_zone_transition_type | | user | +---------------------------+ 21 rows in set (0.</description>
			<content type="html"><![CDATA[<h3 id="mysql笔记">MySql笔记</h3>
<h4 id="基本使用">基本使用</h4>
<h5 id="ddl语句">DDL语句</h5>
<p><strong>1. 创建database</strong></p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">create</span> <span class="k">database</span> <span class="n">test1</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">1</span> <span class="k">row</span> <span class="n">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p><strong>2. 查看datebase</strong></p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">show</span> <span class="n">databases</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------------------+
</span><span class="c1"></span><span class="o">|</span> <span class="k">Database</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------------------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">information_schema</span> <span class="o">|</span>
<span class="o">|</span> <span class="k">cluster</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">mysql</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">test</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">test1</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------------------+ 
</span><span class="c1"></span><span class="mi">5</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p><strong>3. 使用database</strong></p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="n">use</span> <span class="n">mysql</span>
<span class="k">Database</span> <span class="n">changed</span>
</code></pre></div><p><strong>4. 查看数据库所有表</strong></p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">show</span> <span class="n">tables</span><span class="p">;</span>
<span class="o">+</span><span class="c1">---------------------------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">Tables_in_mysql</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">---------------------------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">columns_priv</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">db</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">event</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">func</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">general_log</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">help_category</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">help_keyword</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">help_relation</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">help_topic</span> <span class="o">|</span>
<span class="o">|</span> <span class="k">host</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">plugin</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">proc</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">procs_priv</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">slow_log</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">tables_priv</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">time_zone</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">time_zone_leap_second</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">time_zone_name</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">time_zone_transition</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">time_zone_transition_type</span> <span class="o">|</span>
<span class="o">|</span> <span class="k">user</span> <span class="o">|</span> <span class="o">+</span><span class="c1">---------------------------+
</span><span class="c1"></span><span class="mi">21</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p><strong>5. 删除数据库</strong></p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">drop</span> <span class="k">database</span> <span class="n">test1</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="k">rows</span> <span class="n">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p><strong>6. 创建表</strong></p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">create</span> <span class="k">table</span> <span class="n">emp</span><span class="p">(</span><span class="n">ename</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">10</span><span class="p">),</span><span class="n">hiredate</span> <span class="nb">date</span><span class="p">,</span><span class="n">sal</span> <span class="nb">decimal</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="n">deptno</span> <span class="nb">int</span><span class="p">(</span><span class="mi">2</span><span class="p">));</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="k">rows</span> <span class="n">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">02</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p><strong>7. 查看表的定义</strong></p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">desc</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">Field</span> <span class="o">|</span> <span class="k">Type</span> <span class="o">|</span> <span class="k">Null</span> <span class="o">|</span> <span class="k">Key</span> <span class="o">|</span> <span class="k">Default</span> <span class="o">|</span> <span class="n">Extra</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="nb">date</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="nb">decimal</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="nb">int</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="mi">4</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p><strong>8. 删除表</strong></p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">drop</span> <span class="k">table</span> <span class="n">emp</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="k">rows</span> <span class="n">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p><strong>9. 修改表</strong></p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">desc</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">Field</span> <span class="o">|</span> <span class="k">Type</span> <span class="o">|</span> <span class="k">Null</span> <span class="o">|</span> <span class="k">Key</span> <span class="o">|</span> <span class="k">Default</span> <span class="o">|</span> <span class="n">Extra</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="nb">date</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="nb">decimal</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="nb">int</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="mi">4</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">alter</span> <span class="k">table</span> <span class="n">emp</span> <span class="k">modify</span> <span class="n">ename</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">20</span><span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="k">rows</span> <span class="n">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">03</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">Records</span><span class="p">:</span> <span class="mi">0</span> <span class="n">Duplicates</span><span class="p">:</span> <span class="mi">0</span> <span class="n">Warnings</span><span class="p">:</span> <span class="mi">0</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">desc</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">Field</span> <span class="o">|</span> <span class="k">Type</span> <span class="o">|</span> <span class="k">Null</span> <span class="o">|</span> <span class="k">Key</span> <span class="o">|</span> <span class="k">Default</span> <span class="o">|</span> <span class="n">Extra</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="nb">date</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="nb">decimal</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="nb">int</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="mi">4</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p><strong>10. 删除表字段</strong></p>
<p>将字段age删除</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">desc</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">Field</span> <span class="o">|</span> <span class="k">Type</span> <span class="o">|</span> <span class="k">Null</span> <span class="o">|</span> <span class="k">Key</span> <span class="o">|</span> <span class="k">Default</span> <span class="o">|</span> <span class="n">Extra</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="nb">date</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="nb">decimal</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="nb">int</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">age</span> <span class="o">|</span> <span class="nb">int</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+ 5 rows in set (0.00 sec)
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">alter</span> <span class="k">table</span> <span class="n">emp</span> <span class="k">drop</span> <span class="k">column</span> <span class="n">age</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="k">rows</span> <span class="n">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">04</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">Records</span><span class="p">:</span> <span class="mi">0</span> <span class="n">Duplicates</span><span class="p">:</span> <span class="mi">0</span> <span class="n">Warnings</span><span class="p">:</span> <span class="mi">0</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">desc</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">Field</span> <span class="o">|</span> <span class="k">Type</span> <span class="o">|</span> <span class="k">Null</span> <span class="o">|</span> <span class="k">Key</span> <span class="o">|</span> <span class="k">Default</span> <span class="o">|</span> <span class="n">Extra</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="nb">date</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="nb">decimal</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="nb">int</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="mi">4</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p><strong>11. 字段改名</strong></p>
<p>将age改名为age1, 同时修改字段类型为int(4)</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">desc</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">Field</span> <span class="o">|</span> <span class="k">Type</span> <span class="o">|</span> <span class="k">Null</span> <span class="o">|</span> <span class="k">Key</span> <span class="o">|</span> <span class="k">Default</span> <span class="o">|</span> <span class="n">Extra</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="nb">date</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="nb">decimal</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="nb">int</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">age</span> <span class="o">|</span> <span class="nb">int</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">alter</span> <span class="k">table</span> <span class="n">emp</span> <span class="n">change</span> <span class="n">age</span> <span class="n">age1</span> <span class="nb">int</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span> <span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="k">rows</span> <span class="n">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">02</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">Records</span><span class="p">:</span> <span class="mi">0</span> <span class="n">Duplicates</span><span class="p">:</span> <span class="mi">0</span> <span class="n">Warnings</span><span class="p">:</span> <span class="mi">0</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">desc</span> <span class="n">emp</span>
		<span class="o">-&gt;</span> <span class="p">;</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">Field</span> <span class="o">|</span> <span class="k">Type</span> <span class="o">|</span> <span class="k">Null</span> <span class="o">|</span> <span class="k">Key</span> <span class="o">|</span> <span class="k">Default</span> <span class="o">|</span> <span class="n">Extra</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="nb">date</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="nb">decimal</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="nb">int</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">age1</span> <span class="o">|</span> <span class="nb">int</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="mi">5</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p><strong>12. 修改字段排列顺序</strong></p>
<p>将新增的字段birth date加在ename之后</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">desc</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">Field</span> <span class="o">|</span> <span class="k">Type</span> <span class="o">|</span> <span class="k">Null</span> <span class="o">|</span> <span class="k">Key</span> <span class="o">|</span> <span class="k">Default</span> <span class="o">|</span> <span class="n">Extra</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="nb">date</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="nb">decimal</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="nb">int</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">age</span> <span class="o">|</span> <span class="nb">int</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="mi">5</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">alter</span> <span class="k">table</span> <span class="n">emp</span> <span class="k">add</span> <span class="n">birth</span> <span class="nb">date</span> <span class="k">after</span> <span class="n">ename</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="k">rows</span> <span class="n">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">03</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">Records</span><span class="p">:</span> <span class="mi">0</span> <span class="n">Duplicates</span><span class="p">:</span> <span class="mi">0</span> <span class="n">Warnings</span><span class="p">:</span> <span class="mi">0</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">desc</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">Field</span> <span class="o">|</span> <span class="k">Type</span> <span class="o">|</span> <span class="k">Null</span> <span class="o">|</span> <span class="k">Key</span> <span class="o">|</span> <span class="k">Default</span> <span class="o">|</span> <span class="n">Extra</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">birth</span> <span class="o">|</span> <span class="nb">date</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="nb">date</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="nb">decimal</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="nb">int</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">age</span> <span class="o">|</span> <span class="nb">int</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="mi">6</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>修改字段aeg, 将它放在最前面</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">alter</span> <span class="k">table</span> <span class="n">emp</span> <span class="k">modify</span> <span class="n">age</span> <span class="nb">int</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span> <span class="k">first</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="k">rows</span> <span class="n">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">03</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">Records</span><span class="p">:</span> <span class="mi">0</span> <span class="n">Duplicates</span><span class="p">:</span> <span class="mi">0</span> <span class="n">Warnings</span><span class="p">:</span> <span class="mi">0</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">desc</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">Field</span> <span class="o">|</span> <span class="k">Type</span> <span class="o">|</span> <span class="k">Null</span> <span class="o">|</span> <span class="k">Key</span> <span class="o">|</span> <span class="k">Default</span> <span class="o">|</span> <span class="n">Extra</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">age</span> <span class="o">|</span> <span class="nb">int</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">birth</span> <span class="o">|</span> <span class="nb">date</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="nb">date</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="nb">decimal</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="nb">int</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="mi">6</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p><strong>13. 表改名</strong></p>
<p>将表emp改名为emp1</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">alter</span> <span class="k">table</span> <span class="n">emp</span> <span class="k">rename</span> <span class="n">emp1</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="k">rows</span> <span class="n">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">desc</span> <span class="n">emp</span><span class="p">;</span>
<span class="n">ERROR</span> <span class="mi">1146</span> <span class="p">(</span><span class="mi">42</span><span class="n">S02</span><span class="p">):</span> <span class="k">Table</span> <span class="s1">&#39;sakila.emp&#39;</span> <span class="n">doesn</span><span class="s1">&#39;t exist&#39;</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">desc</span> <span class="n">emp1</span><span class="p">;</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">Field</span> <span class="o">|</span> <span class="k">Type</span> <span class="o">|</span> <span class="k">Null</span> <span class="o">|</span> <span class="k">Key</span> <span class="o">|</span> <span class="k">Default</span> <span class="o">|</span> <span class="n">Extra</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">age</span> <span class="o">|</span> <span class="nb">int</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">birth</span> <span class="o">|</span> <span class="nb">date</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="nb">date</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="nb">decimal</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="nb">int</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="o">|</span> <span class="n">YES</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+---------------+------+-----+---------+-------+
</span><span class="c1"></span><span class="mi">6</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><h5 id="dml语句">DML语句</h5>
<p>DML 操作是指对数据库中表记录的操作，主要包括表记录的插入（insert）、更新（update）、删除（delete）和查询（select），是开发人员日常使用最频繁的操作。</p>
<p><strong>1. 插入记录</strong></p>
<p>向表 emp 中插入以下记录：ename 为 zzx1，hiredate 为 2000-01-01，sal 为 2000，deptno</p>
<p>为 1，命令执行如下：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">insert</span> <span class="k">into</span> <span class="n">emp</span> <span class="p">(</span><span class="n">ename</span><span class="p">,</span><span class="n">hiredate</span><span class="p">,</span><span class="n">sal</span><span class="p">,</span><span class="n">deptno</span><span class="p">)</span> <span class="k">values</span><span class="p">(</span><span class="s1">&#39;zzx1&#39;</span><span class="p">,</span><span class="s1">&#39;2000-01-01&#39;</span><span class="p">,</span><span class="s1">&#39;2000&#39;</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">1</span> <span class="k">row</span> <span class="n">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>也可以不用指定字段名称，但是 values 后面的顺序应该和字段的排列顺序一致：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">insert</span> <span class="k">into</span> <span class="n">emp</span> <span class="k">values</span><span class="p">(</span><span class="s1">&#39;lisa&#39;</span><span class="p">,</span><span class="s1">&#39;2003-02-01&#39;</span><span class="p">,</span><span class="s1">&#39;3000&#39;</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">1</span> <span class="k">row</span> <span class="n">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>对于含可空字段、非空但是含有默认值的字段、自增字段，可以不用在 insert 后的字段列表</p>
<p>里面出现，values 后面只写对应字段名称的 value，这些没写的字段可以自动设置为 NULL、</p>
<p>默认值、自增的下一个数字，这样在某些情况下可以大大缩短 SQL 语句的复杂性。</p>
<p>例如，只对表中的 ename 和 sal 字段显式插入值：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">insert</span> <span class="k">into</span> <span class="n">emp</span> <span class="p">(</span><span class="n">ename</span><span class="p">,</span><span class="n">sal</span><span class="p">)</span> <span class="k">values</span><span class="p">(</span><span class="s1">&#39;dony&#39;</span><span class="p">,</span><span class="mi">1000</span><span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">1</span> <span class="k">row</span> <span class="n">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>来查看一下实际插入值：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">100</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">400</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">100</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">dony</span> <span class="o">|</span> <span class="k">NULL</span> <span class="o">|</span> <span class="mi">1000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="k">NULL</span> <span class="o">|</span> 
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span></code></pre></div><p>在 MySQL 中，insert 语句还有一个很好的特性，可以一次性插入多条记录，语法如下：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="k">INSERT</span> <span class="k">INTO</span> <span class="n">tablename</span> <span class="p">(</span><span class="n">field1</span><span class="p">,</span> <span class="n">field2</span><span class="p">,</span><span class="err">……</span><span class="n">fieldn</span><span class="p">)</span>
<span class="k">VALUES</span>
<span class="p">(</span><span class="n">record1_value1</span><span class="p">,</span> <span class="n">record1_value2</span><span class="p">,</span><span class="err">……</span><span class="n">record1_valuesn</span><span class="p">),</span>
<span class="p">(</span><span class="n">record2_value1</span><span class="p">,</span> <span class="n">record2_value2</span><span class="p">,</span><span class="err">……</span><span class="n">record2_valuesn</span><span class="p">),</span>
<span class="err">……</span>
<span class="p">(</span><span class="n">recordn_value1</span><span class="p">,</span> <span class="n">recordn_value2</span><span class="p">,</span><span class="err">……</span><span class="n">recordn_valuesn</span><span class="p">)</span>
<span class="p">;</span>
</code></pre></div><p>可以看出，每条记录之间都用逗号进行了分隔。</p>
<p>下面的例子中，对表 dept 一次插入两条记录：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">insert</span> <span class="k">into</span> <span class="n">dept</span> <span class="k">values</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="s1">&#39;dept5&#39;</span><span class="p">),(</span><span class="mi">6</span><span class="p">,</span><span class="s1">&#39;dept6&#39;</span><span class="p">);</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">2</span> <span class="k">rows</span> <span class="n">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">04</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">Records</span><span class="p">:</span> <span class="mi">2</span> <span class="n">Duplicates</span><span class="p">:</span> <span class="mi">0</span> <span class="n">Warnings</span><span class="p">:</span> <span class="mi">0</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">dept</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="n">deptname</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="mi">1</span> <span class="o">|</span> <span class="n">tech</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">2</span> <span class="o">|</span> <span class="n">sale</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">5</span> <span class="o">|</span> <span class="n">fin</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">5</span> <span class="o">|</span> <span class="n">dept5</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">6</span> <span class="o">|</span> <span class="n">dept6</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="mi">5</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>这个特性可以使得 MySQL 在插入大量记录时，节省很多的网络开销，大大提高插入效率。</p>
<p><strong>2. 更新记录</strong></p>
<p>对于表里的记录值，可以通过 update 命令进行更改，语法如下：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="k">UPDATE</span> <span class="n">tablename</span> <span class="k">SET</span> <span class="n">field1</span><span class="o">=</span><span class="n">value1</span><span class="err">，</span><span class="n">field2</span><span class="p">.</span><span class="o">=</span><span class="n">value2</span><span class="err">，……</span><span class="n">fieldn</span><span class="o">=</span><span class="n">valuen</span> <span class="p">[</span><span class="k">WHERE</span> <span class="n">CONDITION</span><span class="p">]</span>
</code></pre></div><p>例如，将表 emp 中 ename 为“lisa”的薪水（sal）从 3000 更改为 4000：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">update</span> <span class="n">emp</span> <span class="k">set</span> <span class="n">sal</span><span class="o">=</span><span class="mi">4000</span> <span class="k">where</span> <span class="n">ename</span><span class="o">=</span><span class="s1">&#39;lisa&#39;</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">1</span> <span class="k">row</span> <span class="n">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="k">Rows</span> <span class="n">matched</span><span class="p">:</span> <span class="mi">1</span> <span class="n">Changed</span><span class="p">:</span> <span class="mi">1</span> <span class="n">Warnings</span><span class="p">:</span> <span class="mi">0</span>
</code></pre></div><p>在 MySQL 中，update 命令可以同时更新多个表中数据，语法如下：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="k">UPDATE</span> <span class="n">t1</span><span class="p">,</span><span class="n">t2</span><span class="err">…</span><span class="n">tn</span> <span class="k">set</span> <span class="n">t1</span><span class="p">.</span><span class="n">field1</span><span class="o">=</span><span class="n">expr1</span><span class="p">,</span><span class="n">tn</span><span class="p">.</span><span class="n">fieldn</span><span class="o">=</span><span class="n">exprn</span> <span class="p">[</span><span class="k">WHERE</span> <span class="n">CONDITION</span><span class="p">]</span>
</code></pre></div><p>在下例中，同时更新表 emp 中的字段 sal 和表 dept 中的字段 deptname：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">100</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">200</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">100</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">dony</span> <span class="o">|</span> <span class="mi">2005</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">05</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">4</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">4</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">dept</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="n">deptname</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="mi">1</span> <span class="o">|</span> <span class="n">tech</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">2</span> <span class="o">|</span> <span class="n">sale</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">5</span> <span class="o">|</span> <span class="n">fin</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="mi">3</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">update</span> <span class="n">emp</span> <span class="n">a</span><span class="p">,</span><span class="n">dept</span> <span class="n">b</span> <span class="k">set</span> <span class="n">a</span><span class="p">.</span><span class="n">sal</span><span class="o">=</span><span class="n">a</span><span class="p">.</span><span class="n">sal</span><span class="o">*</span><span class="n">b</span><span class="p">.</span><span class="n">deptno</span><span class="p">,</span><span class="n">b</span><span class="p">.</span><span class="n">deptname</span><span class="o">=</span><span class="n">a</span><span class="p">.</span><span class="n">ename</span> <span class="k">where</span> 
<span class="n">a</span><span class="p">.</span><span class="n">deptno</span><span class="o">=</span><span class="n">b</span><span class="p">.</span><span class="n">deptno</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">3</span> <span class="k">rows</span> <span class="n">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">04</span> <span class="n">sec</span><span class="p">)</span>
<span class="k">Rows</span> <span class="n">matched</span><span class="p">:</span> <span class="mi">5</span> <span class="n">Changed</span><span class="p">:</span> <span class="mi">3</span> <span class="n">Warnings</span><span class="p">:</span> <span class="mi">0</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">100</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">400</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">100</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">dony</span> <span class="o">|</span> <span class="mi">2005</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">05</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">4</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">4</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">01</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">dept</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="n">deptname</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="mi">1</span> <span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">2</span> <span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">5</span> <span class="o">|</span> <span class="n">fin</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="mi">3</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p><strong>3. 删除记录</strong></p>
<p>如果记录不再需要，可以用 delete 命令进行删除，语法如下：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="k">DELETE</span> <span class="k">FROM</span> <span class="n">tablename</span> <span class="p">[</span><span class="k">WHERE</span> <span class="n">CONDITION</span><span class="p">]</span>
</code></pre></div><p>例如，在 emp 中将 ename 为‘dony’的记录全部删除，命令如下：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">delete</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">where</span> <span class="n">ename</span><span class="o">=</span><span class="s1">&#39;dony&#39;</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">1</span> <span class="k">row</span> <span class="n">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>在 MySQL 中可以一次删除多个表的数据，语法如下：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="k">DELETE</span> <span class="n">t1</span><span class="p">,</span><span class="n">t2</span><span class="err">…</span><span class="n">tn</span> <span class="k">FROM</span> <span class="n">t1</span><span class="p">,</span><span class="n">t2</span><span class="err">…</span><span class="n">tn</span> <span class="p">[</span><span class="k">WHERE</span> <span class="n">CONDITION</span><span class="p">]</span>
</code></pre></div><p>如果 from 后面的表名用别名，则 delete 后面的也要用相应的别名，否则会提示语法错误。</p>
<p>在下例中，将表 emp 和 dept 中 deptno 为 3 的记录同时都删除：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">100</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">200</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">100</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bzshen</span> <span class="o">|</span> <span class="mi">2005</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">300</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">3</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">dony</span> <span class="o">|</span> <span class="mi">2005</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">05</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">4</span> <span class="o">|</span> 
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">5</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">dept</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="n">deptname</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="mi">1</span> <span class="o">|</span> <span class="n">tech</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">2</span> <span class="o">|</span> <span class="n">sale</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">3</span> <span class="o">|</span> <span class="n">hr</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">5</span> <span class="o">|</span> <span class="n">fin</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="mi">4</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">delete</span> <span class="n">a</span><span class="p">,</span><span class="n">b</span> <span class="k">from</span> <span class="n">emp</span> <span class="n">a</span><span class="p">,</span><span class="n">dept</span> <span class="n">b</span> <span class="k">where</span> <span class="n">a</span><span class="p">.</span><span class="n">deptno</span><span class="o">=</span><span class="n">b</span><span class="p">.</span><span class="n">deptno</span> <span class="k">and</span> <span class="n">a</span><span class="p">.</span><span class="n">deptno</span><span class="o">=</span><span class="mi">3</span><span class="p">;</span>
<span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">2</span> <span class="k">rows</span> <span class="n">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">04</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> 
<span class="n">mysql</span><span class="o">&gt;</span> 
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">100</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">200</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">100</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">dony</span> <span class="o">|</span> <span class="mi">2005</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">05</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">4</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">4</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>

<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">dept</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="n">deptname</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="mi">1</span> <span class="o">|</span> <span class="n">tech</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">2</span> <span class="o">|</span> <span class="n">sale</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">5</span> <span class="o">|</span> <span class="n">fin</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="mi">3</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><pre><code>注意：不管是单表还是多表，不加 where 条件将会把表的所有记录删除，所以操作时一定要小心。
</code></pre><p><strong>4. 查询记录</strong></p>
<p>数据插入到数据库中后，就可以用 SELECT 命令进行各种各样的查询，使得输出的结果符合</p>
<p>我们的要求。由于 SELECT 的语法很复杂，所有这里只介绍最基本的语法：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">tablename</span> <span class="p">[</span><span class="k">WHERE</span> <span class="n">CONDITION</span><span class="p">]</span>
</code></pre></div><p>查询最简单的方式是将记录全部选出，在下面的例子中，将表 emp 中的记录全部查询出来：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">5000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">3</span> <span class="o">|</span> 
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">3</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>其中“*”表示要将所有的记录都选出来，也可以用逗号分割的所有字段来代替，例如，以</p>
<p>下两个查询是等价的：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">5000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">3</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">3</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="n">ename</span><span class="p">,</span><span class="n">hiredate</span><span class="p">,</span><span class="n">sal</span><span class="p">,</span><span class="n">deptno</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">5000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">3</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">3</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>“*”的好处是当需要查询所有字段信息时候，查询语句很简单，但是要只查询部分字段的</p>
<p>时候，必须要将字段一个一个列出来。</p>
<p>上例中已经介绍了查询全部记录的语法，但是在实际应用中，用户还会遇到各种各样的查询</p>
<p>要求，下面将分别介绍。</p>
<p>（1）查询不重复的记录。</p>
<p>有时需要将表中的记录去掉重复后显示出来，可以用 distinct 关键字来实现：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="n">ename</span><span class="p">,</span><span class="n">hiredate</span><span class="p">,</span><span class="n">sal</span><span class="p">,</span><span class="n">deptno</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">5000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">3</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="k">distinct</span> <span class="n">deptno</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+
</span><span class="c1"></span><span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+
</span><span class="c1"></span><span class="mi">2</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>（2）条件查询。</p>
<p>在很多情况下，用户并不需要查询所有的记录，而只是需要根据限定条件来查询一部分数据，</p>
<p>用 where 关键字可以来实现这样的操作。</p>
<p>例如，需要查询所有 deptno 为 1 的记录：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">5000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">3</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">where</span> <span class="n">deptno</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">5000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">2</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>结果集中将符合条件的记录列出来。上面的例子中，where 后面的条件是一个字段的‘=’</p>
<p>比较，除了‘=’外，还可以使用&gt;、&lt;、&gt;=、&lt;=、!=等比较运算符；多个条件之间还可以使</p>
<p>用 or、and 等逻辑运算符进行多条件联合查询，运算符会在以后章节中详细讲解。</p>
<p>以下是一个使用多字段条件查询的例子：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">where</span> <span class="n">deptno</span><span class="o">=</span><span class="mi">1</span> <span class="k">and</span> <span class="n">sal</span><span class="o">&lt;</span><span class="mi">3000</span><span class="p">;</span>
<span class="o">+</span><span class="c1">-------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">-------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">-------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">1</span> <span class="k">row</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>（3）排序和限制。</p>
<p>我们经常会有这样的需求，取出按照某个字段进行排序后的记录结果集，这就用到了数据库</p>
<p>的排序操作，用关键字 ORDER BY 来实现，语法如下：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">tablename</span> <span class="p">[</span><span class="k">WHERE</span> <span class="n">CONDITION</span><span class="p">]</span> <span class="p">[</span><span class="k">ORDER</span> <span class="k">BY</span> <span class="n">field1</span> <span class="p">[</span><span class="k">DESC</span><span class="o">|</span><span class="k">ASC</span><span class="p">]</span> <span class="err">，</span> <span class="n">field2</span> 
<span class="p">[</span><span class="k">DESC</span><span class="o">|</span><span class="k">ASC</span><span class="p">]</span><span class="err">，……</span><span class="n">fieldn</span> <span class="p">[</span><span class="k">DESC</span><span class="o">|</span><span class="k">ASC</span><span class="p">]]</span>
</code></pre></div><p>其中，DESC 和 ASC 是排序顺序关键字，DESC 表示按照字段进行降序排列，ASC 则表示升序</p>
<p>排列，如果不写此关键字默认是升序排列。ORDER BY 后面可以跟多个不同的排序字段，并</p>
<p>且每个排序字段可以有不同的排序顺序。</p>
<p>例如，把 emp 表中的记录按照工资高低进行显示：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">order</span> <span class="k">by</span> <span class="n">sal</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bzshen</span> <span class="o">|</span> <span class="mi">2005</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">3000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">3</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">5000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">4</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>如果排序字段的值一样，则值相同的字段按照第二个排序字段进行排序，以此类推。如果只</p>
<p>有一个排序字段，则这些字段相同的记录将会无序排列。</p>
<p>例如，把 emp 表中的记录按照部门编号 deptno 字段排序：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">order</span> <span class="k">by</span> <span class="n">deptno</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">5000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bzshen</span> <span class="o">|</span> <span class="mi">2005</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">3</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">4</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>对于 deptno 相同的前两条记录，如果要按照工资由高到低排序，可以使用以下命令：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">order</span> <span class="k">by</span> <span class="n">deptno</span><span class="p">,</span><span class="n">sal</span> <span class="k">desc</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">5000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bzshen</span> <span class="o">|</span> <span class="mi">2005</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">3</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">4</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><pre><code>mySQL里desc和asc的意思
desc是descend 降序意思
asc 是ascend 升序意思
</code></pre><p>对于排序后的记录，如果希望只显示一部分，而不是全部，这时，就可以使用 LIMIT 关键字</p>
<p>来实现，LIMIT 的语法如下：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="k">SELECT</span> <span class="err">……</span><span class="p">[</span><span class="k">LIMIT</span> <span class="n">offset_start</span><span class="p">,</span><span class="k">row_count</span><span class="p">]</span>
</code></pre></div><p>其中 offset_start 表示记录的起始偏移量，row_count 表示显示的行数。</p>
<p>在默认情况下，起始偏移量为 0，只需要写记录行数就可以，这时候，显示的实际就是前 n</p>
<p>条记录，看下面例子：</p>
<p>例如，显示 emp 表中按照 sal 排序后的前 3 条记录：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">order</span> <span class="k">by</span> <span class="n">sal</span> <span class="k">limit</span> <span class="mi">3</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bzshen</span> <span class="o">|</span> <span class="mi">2005</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">3</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">3</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>如果要显示 emp 表中按照 sal 排序后从第二条记录开始，显示 3 条记录：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">order</span> <span class="k">by</span> <span class="n">sal</span> <span class="k">limit</span> <span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bzshen</span> <span class="o">|</span> <span class="mi">2005</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">3</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">5000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">3</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>limit 经常和 order by 一起配合使用来进行记录的分页显示。</p>
<pre><code>注意：limit 属于 MySQL 扩展 SQL92 后的语法，在其他数据库上并不能通用。
</code></pre><p>（4）聚合。</p>
<p>很多情况下，我们需要进行一些汇总操作，比如统计整个公司的人数或者统计每个部门的人数，这个时就要用到 SQL 的聚合操作。</p>
<p>聚合操作的语法如下：</p>
<div class="highlight"><pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="k">SELECT</span> <span class="p">[</span><span class="n">field1</span><span class="p">,</span><span class="n">field2</span><span class="p">,</span><span class="err">……</span><span class="n">fieldn</span><span class="p">]</span> <span class="n">fun_name</span> 
<span class="k">FROM</span> <span class="n">tablename</span>
<span class="p">[</span><span class="k">WHERE</span> <span class="n">where_contition</span><span class="p">]</span>
<span class="p">[</span><span class="k">GROUP</span> <span class="k">BY</span> <span class="n">field1</span><span class="p">,</span><span class="n">field2</span><span class="p">,</span><span class="err">……</span><span class="n">fieldn</span>
<span class="p">[</span><span class="k">WITH</span> <span class="n">ROLLUP</span><span class="p">]]</span>
<span class="p">[</span><span class="k">HAVING</span> <span class="n">where_contition</span><span class="p">]</span>
</code></pre></div><p>对其参数进行以下说明。</p>
<p> fun_name 表示要做的聚合操作，也就是聚合函数，常用的有 sum（求和）、count(*)（记</p>
<p>录数）、max（最大值）、min（最小值）。</p>
<p> GROUP BY 关键字表示要进行分类聚合的字段，比如要按照部门分类统计员工数量，部门</p>
<p>就应该写在 group by 后面。</p>
<p> WITH ROLLUP 是可选语法，表明是否对分类聚合后的结果进行再汇总。</p>
<p> HAVING 关键字表示对分类后的结果再进行条件的过滤。</p>
<pre><code>注意：having 和 where 的区别在于 having 是对聚合后的结果进行条件的过滤，而 where 是在聚
合前就对记录进行过滤，如果逻辑允许，我们尽可能用 where 先过滤记录，这样因为结果
集减小，将对聚合的效率大大提高，最后再根据逻辑看是否用 having 进行再过滤。
</code></pre><p>例如，要 emp 表中统计公司的总人数：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="k">count</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span> 
<span class="o">+</span><span class="c1">----------+
</span><span class="c1"></span><span class="o">|</span> <span class="k">count</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+
</span><span class="c1"></span><span class="o">|</span> <span class="mi">4</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+
</span><span class="c1"></span><span class="mi">1</span> <span class="k">row</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>在此基础上，要统计各个部门的人数：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="n">deptno</span><span class="p">,</span><span class="k">count</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">group</span> <span class="k">by</span> <span class="n">deptno</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="k">count</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="mi">1</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">2</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">4</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="mi">3</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>更细一些，既要统计各部门人数，又要统计总人数：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="n">deptno</span><span class="p">,</span><span class="k">count</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">group</span> <span class="k">by</span> <span class="n">deptno</span> <span class="k">with</span> <span class="k">rollup</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="k">count</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="mi">1</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">2</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">4</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="k">NULL</span> <span class="o">|</span> <span class="mi">4</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="mi">4</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>统计人数大于 1 人的部门：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="n">deptno</span><span class="p">,</span><span class="k">count</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">group</span> <span class="k">by</span> <span class="n">deptno</span> <span class="k">having</span> <span class="k">count</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="k">count</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="mi">1</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="mi">1</span> <span class="k">row</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>最后统计公司所有员工的薪水总额、最高和最低薪水：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">100</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">400</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">100</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">dony</span> <span class="o">|</span> <span class="mi">2005</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">05</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">4</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">4</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="k">sum</span><span class="p">(</span><span class="n">sal</span><span class="p">),</span><span class="k">max</span><span class="p">(</span><span class="n">sal</span><span class="p">),</span><span class="k">min</span><span class="p">(</span><span class="n">sal</span><span class="p">)</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">----------+----------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="k">sum</span><span class="p">(</span><span class="n">sal</span><span class="p">)</span> <span class="o">|</span> <span class="k">max</span><span class="p">(</span><span class="n">sal</span><span class="p">)</span> <span class="o">|</span> <span class="k">min</span><span class="p">(</span><span class="n">sal</span><span class="p">)</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+----------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="mi">2600</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">100</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">----------+----------+----------+
</span><span class="c1"></span><span class="mi">1</span> <span class="k">row</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>（5）表连接。</p>
<p>当需要同时显示多个表中的字段时，就可以用表连接来实现这样的功能。</p>
<p>从大类上分，表连接分为内连接和外连接，它们之间的最主要区别是內连接仅选出两张表中</p>
<p>互相匹配的记录，而外连接会选出其他不匹配的记录。我们最常用的是内连接。</p>
<p>例如，查询出所有雇员的名字和所在部门名称，因为雇员名称和部门分别存放在表 emp 和</p>
<p>dept 中，因此，需要使用表连接来进行查询：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">5000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bzshen</span> <span class="o">|</span> <span class="mi">2005</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">3</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">4</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">dept</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="n">deptname</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="mi">1</span> <span class="o">|</span> <span class="n">tech</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">2</span> <span class="o">|</span> <span class="n">sale</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">3</span> <span class="o">|</span> <span class="n">hr</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="mi">3</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="n">ename</span><span class="p">,</span><span class="n">deptname</span> <span class="k">from</span> <span class="n">emp</span><span class="p">,</span><span class="n">dept</span> <span class="k">where</span> <span class="n">emp</span><span class="p">.</span><span class="n">deptno</span><span class="o">=</span><span class="n">dept</span><span class="p">.</span><span class="n">deptno</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">deptname</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="n">tech</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="n">sale</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="n">tech</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bzshen</span> <span class="o">|</span> <span class="n">hr</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="mi">4</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>外连接有分为左连接和右连接，具体定义如下。</p>
<p>​	左连接：包含所有的左边表中的记录甚至是右边表中没有和它匹配的记录</p>
<p>​	右连接：包含所有的右边表中的记录甚至是左边表中没有和它匹配的记录</p>
<p>例如，查询 emp 中所有用户名和所在部门名称：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">5000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bzshen</span> <span class="o">|</span> <span class="mi">2005</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">3</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">dony</span> <span class="o">|</span> <span class="mi">2005</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">05</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">4</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">5</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">dept</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="n">deptname</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="mi">1</span> <span class="o">|</span> <span class="n">tech</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">2</span> <span class="o">|</span> <span class="n">sale</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">3</span> <span class="o">|</span> <span class="n">hr</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="mi">3</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="n">ename</span><span class="p">,</span><span class="n">deptname</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">left</span> <span class="k">join</span> <span class="n">dept</span> <span class="k">on</span> <span class="n">emp</span><span class="p">.</span><span class="n">deptno</span><span class="o">=</span><span class="n">dept</span><span class="p">.</span><span class="n">deptno</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">deptname</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="n">tech</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="n">sale</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="n">tech</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bzshen</span> <span class="o">|</span> <span class="n">hr</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">dony</span> <span class="o">|</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="mi">5</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>（6）子查询。</p>
<p>某些情况下，当我们查询的时候，需要的条件是另外一个 select 语句的结果，这个时候，就</p>
<p>要用到子查询。用于子查询的关键字主要包括 in、not in、=、!=、exists、not exists 等。</p>
<p>例如，从 emp 表中查询出所有部门在 dept 表中的所有记录：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">5000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bzshen</span> <span class="o">|</span> <span class="mi">2005</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">3</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">dony</span> <span class="o">|</span> <span class="mi">2005</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">05</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">4</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">5</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">dept</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="n">deptname</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="mi">1</span> <span class="o">|</span> <span class="n">tech</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">2</span> <span class="o">|</span> <span class="n">sale</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">3</span> <span class="o">|</span> <span class="n">hr</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">5</span> <span class="o">|</span> <span class="n">fin</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="mi">4</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">where</span> <span class="n">deptno</span> <span class="k">in</span><span class="p">(</span><span class="k">select</span> <span class="n">deptno</span> <span class="k">from</span> <span class="n">dept</span><span class="p">);</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">5000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bzshen</span> <span class="o">|</span> <span class="mi">2005</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">3</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">4</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>如果子查询记录数唯一，还可以用=代替 in：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">where</span> <span class="n">deptno</span> <span class="o">=</span> <span class="p">(</span><span class="k">select</span> <span class="n">deptno</span> <span class="k">from</span> <span class="n">dept</span><span class="p">);</span>
<span class="n">ERROR</span> <span class="mi">1242</span> <span class="p">(</span><span class="mi">21000</span><span class="p">):</span> <span class="n">Subquery</span> <span class="k">returns</span> <span class="k">more</span> <span class="k">than</span> <span class="mi">1</span> <span class="k">row</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">where</span> <span class="n">deptno</span> <span class="o">=</span> <span class="p">(</span><span class="k">select</span> <span class="n">deptno</span> <span class="k">from</span> <span class="n">dept</span> <span class="k">limit</span> <span class="mi">1</span><span class="p">);</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">5000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">2</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>某些情况下，子查询可以转化为表连接，例如：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="k">where</span> <span class="n">deptno</span> <span class="k">in</span><span class="p">(</span><span class="k">select</span> <span class="n">deptno</span> <span class="k">from</span> <span class="n">dept</span><span class="p">);</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">5000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bzshen</span> <span class="o">|</span> <span class="mi">2005</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">3</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">4</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="err">转换为表连接后：</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="n">emp</span><span class="p">.</span><span class="o">*</span> <span class="k">from</span> <span class="n">emp</span> <span class="p">,</span><span class="n">dept</span> <span class="k">where</span> <span class="n">emp</span><span class="p">.</span><span class="n">deptno</span><span class="o">=</span><span class="n">dept</span><span class="p">.</span><span class="n">deptno</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">5000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bzshen</span> <span class="o">|</span> <span class="mi">2005</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">4000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">3</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">4</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><pre><code>注意：子查询和表连接之间的转换主要应用在两个方面： 
 MySQL 4.1 以前的版本不支持子查询，需要用表连接来实现子查询的功能
 表连接在很多情况下用于优化子查询
</code></pre><p>（7）记录联合。</p>
<p>我们经常会碰到这样的应用，将两个表的数据按照一定的查询条件查询出来后，将结果合并</p>
<p>到一起显示出来，这个时候，就需要用 union 和 union all 关键字来实现这样的功能，具体语</p>
<p>法如下：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">t1</span>
<span class="k">UNION</span><span class="o">|</span><span class="k">UNION</span> <span class="k">ALL</span>
<span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">t2</span>
<span class="err">……</span>
<span class="k">UNION</span><span class="o">|</span><span class="k">UNION</span> <span class="k">ALL</span>
<span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">tn</span><span class="p">;</span>
</code></pre></div><p>UNION 和 UNION ALL 的主要区别是 UNION ALL 是把结果集直接合并在一起，而 UNION 是将</p>
<p>UNION ALL 后的结果进行一次 DISTINCT，去除重复记录后的结果。</p>
<p>来看下面例子，将 emp 和 dept 表中的部门编号的集合显示出来：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">emp</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">ename</span> <span class="o">|</span> <span class="n">hiredate</span> <span class="o">|</span> <span class="n">sal</span> <span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">zzx</span> <span class="o">|</span> <span class="mi">2000</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">100</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">lisa</span> <span class="o">|</span> <span class="mi">2003</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">01</span> <span class="o">|</span> <span class="mi">400</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">bjguan</span> <span class="o">|</span> <span class="mi">2004</span><span class="o">-</span><span class="mi">04</span><span class="o">-</span><span class="mi">02</span> <span class="o">|</span> <span class="mi">100</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="n">dony</span> <span class="o">|</span> <span class="mi">2005</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">05</span> <span class="o">|</span> <span class="mi">2000</span><span class="p">.</span><span class="mi">00</span> <span class="o">|</span> <span class="mi">4</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+------------+---------+--------+
</span><span class="c1"></span><span class="mi">4</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">dept</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span> <span class="n">deptname</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="o">|</span> <span class="mi">1</span> <span class="o">|</span> <span class="n">tech</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">2</span> <span class="o">|</span> <span class="n">sale</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">5</span> <span class="o">|</span> <span class="n">fin</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+
</span><span class="c1"></span><span class="mi">3</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="n">deptno</span> <span class="k">from</span> <span class="n">emp</span> 
<span class="o">-&gt;</span> <span class="k">union</span> <span class="k">all</span>
<span class="o">-&gt;</span> <span class="k">select</span> <span class="n">deptno</span> <span class="k">from</span> <span class="n">dept</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+
</span><span class="c1"></span><span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">4</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">5</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+
</span><span class="c1"></span><span class="mi">7</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div><p>如果希望将结果去掉重复记录后显示：</p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="n">deptno</span> <span class="k">from</span> <span class="n">emp</span> 
		<span class="o">-&gt;</span> <span class="k">union</span>
		<span class="o">-&gt;</span> <span class="k">select</span> <span class="n">deptno</span> <span class="k">from</span> <span class="n">dept</span><span class="p">;</span>
<span class="o">+</span><span class="c1">--------+
</span><span class="c1"></span><span class="o">|</span> <span class="n">deptno</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+
</span><span class="c1"></span><span class="o">|</span> <span class="mi">1</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">2</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">4</span> <span class="o">|</span>
<span class="o">|</span> <span class="mi">5</span> <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+
</span><span class="c1"></span><span class="mi">4</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div>]]></content>
		</item>
		
		<item>
			<title></title>
			<link>https://example.com/posts/note/</link>
			<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
			
			<guid>https://example.com/posts/note/</guid>
			<description>1.进程同步之信号量机制(PV操作) 1.1.信号量机制 信号量机制即利用pv操作对信号量进行处理.
什么是信号量?信号量(semaphore)的数据结构为一个值和一个指针,指针指向等待该信号量的下一个进程.信号量的值与相应资源的使用情况有关.
当它的值大于0时,表示当前可用资源的数量;
当它的值小于0时,其绝对值表示等待使用该资源的进程个数.
注意,信号量的值仅能由pv操作来改变.
一般来说，信号量S&amp;gt;0时，S表示可用资源的数量。执行一次P操作意味着请求分配一个单位资源，因此S的值减1；当S&amp;lt;0时，表示已经没有可用资源，请求者必须等待别的进程释放该类资源，它才能运行下去。而执行一个V操作意味着释放一个单位资源，因此S的值加1；若S=0，表示有某些进程正在等待该资源，因此要唤醒一个等待状态的进程，使之运行下去。
1.2.PV操作 什么是PV操作?
P操作(wait):申请一个单位资源,进程进入
经典伪代码:
wait(S){ while(s&amp;lt;=0)	//如果没有资源则会循环等待； 	; S-- ; } V操作(signal):释放一个单位资源,进程出来
经典伪代码:
signal(S){ S++ ; } p操作（wait）：申请一个单位资源，进程进入
v操作（signal）：释放一个单位资源，进程出来
PV操作的含义：PV操作由P操作原语和V操作原语组成（原语是不可中断的过程），对信号量进行操作，具体定义如下： P（S）：①将信号量S的值减1，即S=S-1； ②如果S&amp;lt;=0，则该进程继续执行；否则该进程置为等待状态，排入等待队列。 V（S）：①将信号量S的值加1，即S=S+1； ②如果S&amp;gt;0，则该进程继续执行；否则释放队列中第一个等待信号量的进程。
PV操作的意义：我们用信号量及PV操作来实现进程的同步和互斥。PV操作属于进程的低级通信。
利用信号量和PV操作实现进程互斥的一般模型是： 进程P1 进程P2 …… 进程Pn …… …… …… P（S）； P（S）； P（S）； 临界区； 临界区； 临界区； V（S）； V（S）； V（S）； …… …… …… ……
其中信号量S用于互斥，初值为1。 使用PV操作实现进程互斥时应该注意的是： （1）每个程序中用户实现互斥的P、V操作必须成对出现，先做P操作，进临界区，后做V操作，出临界区。若有多个分支，要认真检查其成对性。 （2）P、V操作应分别紧靠临界区的头尾部，临界区的代码应尽可能短，不能有死循环。 （3）互斥信号量的初值一般为1。
利用信号量和PV操作实现进程同步 PV操作是典型的同步机制之一。用一个信号量与一个消息联系起来，当信号量的值为0时，表示期望的消息尚未产生；当信号量的值非0时，表示期望的消息已经存在。用PV操作实现进程同步时，调用P操作测试消息是否到达，调用V操作发送消息。 使用PV操作实现进程同步时应该注意的是：
（1）分析进程间的制约关系，确定信号量种类。在保持进程间有正确的同步关系情况下，哪个进程先执行，哪些进程后执行，彼此间通过什么资源（信号量）进行协调，从而明确要设置哪些信号量。 （2）信号量的初值与相应资源的数量有关，也与P、V操作在程序代码中出现的位置有关。 （3）同一信号量的P、V操作要成对出现，但它们分别在不同的进程代码中。  1.3例题 1.生产者*-*消费者问题 在多道程序环境下，进程同步是一个十分重要又令人感兴趣的问题，而生产者*-*消费者问题是其中一个有代表性的进程同步问题。下面我们给出了各种情况下的生产者*-*消费者问题，深入地分析和透彻地理解这个例子，对于全面解决操作系统内的同步、互斥问题将有很大帮助。</description>
			<content type="html"><![CDATA[<h4 id="1进程同步之信号量机制pv操作">1.进程同步之信号量机制(PV操作)</h4>
<h5 id="11信号量机制">1.1.信号量机制</h5>
<p>信号量机制即利用pv操作对信号量进行处理.</p>
<p>什么是信号量?信号量(semaphore)的数据结构为一个值和一个指针,指针指向等待该信号量的下一个进程.信号量的值与相应资源的使用情况有关.</p>
<p>当它的值大于0时,表示当前可用资源的数量;</p>
<p>当它的值小于0时,其绝对值表示等待使用该资源的进程个数.</p>
<p>注意,信号量的值仅能由pv操作来改变.</p>
<p>一般来说，信号量S&gt;0时，S表示可用资源的数量。执行一次P操作意味着请求分配一个单位资源，因此S的值减1；当S&lt;0时，表示已经没有可用资源，请求者必须等待别的进程释放该类资源，它才能运行下去。而执行一个V操作意味着释放一个单位资源，因此S的值加1；若S=0，表示有某些进程正在等待该资源，因此要唤醒一个等待状态的进程，使之运行下去。</p>
<h5 id="12pv操作">1.2.PV操作</h5>
<p>什么是PV操作?</p>
<p>P操作(wait):申请一个单位资源,进程进入</p>
<p>经典伪代码:</p>
<div class="highlight"><pre class="chroma"><code class="language-c" data-lang="c"><span class="n">wait</span><span class="p">(</span><span class="n">S</span><span class="p">){</span>
	<span class="k">while</span><span class="p">(</span><span class="n">s</span><span class="o">&lt;=</span><span class="mi">0</span><span class="p">)</span>	<span class="c1">//如果没有资源则会循环等待；
</span><span class="c1"></span>		<span class="p">;</span>
	<span class="n">S</span><span class="o">--</span> <span class="p">;</span>
<span class="p">}</span>
</code></pre></div><p>V操作(signal):释放一个单位资源,进程出来</p>
<p>经典伪代码:</p>
<div class="highlight"><pre class="chroma"><code class="language-c" data-lang="c"><span class="n">signal</span><span class="p">(</span><span class="n">S</span><span class="p">){</span>
	<span class="n">S</span><span class="o">++</span> <span class="p">;</span>
<span class="p">}</span>
</code></pre></div><p>p操作（wait）：申请一个单位资源，进程进入</p>
<p>v操作（signal）：释放一个单位资源，进程出来</p>
<p>PV操作的含义：PV操作由P操作原语和V操作原语组成（原语是不可中断的过程），对信号量进行操作，具体定义如下：
P（S）：①将信号量S的值减1，即S=S-1；
②如果S&lt;=0，则该进程继续执行；否则该进程置为等待状态，排入等待队列。
V（S）：①将信号量S的值加1，即S=S+1；
②如果S&gt;0，则该进程继续执行；否则释放队列中第一个等待信号量的进程。</p>
<p>PV操作的意义：我们用信号量及PV操作来实现进程的同步和互斥。PV操作属于进程的低级通信。</p>
<p>利用信号量和PV操作实现进程互斥的一般模型是：
进程P1              进程P2           ……          进程Pn
……                  ……                           ……
P（S）；              P（S）；                         P（S）；
临界区；             临界区；                        临界区；
V（S）；              V（S）；                        V（S）；
……                  ……            ……           ……</p>
<p>其中信号量S用于互斥，初值为1。
使用PV操作实现进程互斥时应该注意的是：
（1）每个程序中用户实现互斥的P、V操作必须成对出现，先做P操作，进临界区，后做V操作，出临界区。若有多个分支，要认真检查其成对性。
（2）P、V操作应分别紧靠临界区的头尾部，临界区的代码应尽可能短，不能有死循环。
（3）互斥信号量的初值一般为1。</p>
<p>利用信号量和PV操作实现进程同步
PV操作是典型的同步机制之一。用一个信号量与一个消息联系起来，当信号量的值为0时，表示期望的消息尚未产生；当信号量的值非0时，表示期望的消息已经存在。用PV操作实现进程同步时，调用P操作测试消息是否到达，调用V操作发送消息。
使用PV操作实现进程同步时应该注意的是：</p>
<pre><code>（1）分析进程间的制约关系，确定信号量种类。在保持进程间有正确的同步关系情况下，哪个进程先执行，哪些进程后执行，彼此间通过什么资源（信号量）进行协调，从而明确要设置哪些信号量。
（2）信号量的初值与相应资源的数量有关，也与P、V操作在程序代码中出现的位置有关。
（3）同一信号量的P、V操作要成对出现，但它们分别在不同的进程代码中。
</code></pre>
<h5 id="13例题">1.3例题</h5>
<p>1.生产者*-*消费者问题
在多道程序环境下，进程同步是一个十分重要又令人感兴趣的问题，而生产者*-*消费者问题是其中一个有代表性的进程同步问题。下面我们给出了各种情况下的生产者*-*消费者问题，深入地分析和透彻地理解这个例子，对于全面解决操作系统内的同步、互斥问题将有很大帮助。</p>
<p>（1）一个生产者，一个消费者，公用一个缓冲区。
定义两个同步信号量：</p>
<pre><code>empty——表示缓冲区是否为空，初值为1。
   full——表示缓冲区中是否为满，初值为0。
生产者进程
while(TRUE){
生产一个产品;
     P(empty);
     产品送往Buffer;
     V(full);
}
消费者进程
while(True){
P(full);
   从Buffer取出一个产品;
   V(empty);
   消费该产品;
   }
</code></pre><p>（2）一个生产者，一个消费者，公用n个环形缓冲区。
定义两个同步信号量：
empty——表示缓冲区是否为空，初值为n。
full——表示缓冲区中是否为满，初值为0。</p>
<p>（2）一个生产者，一个消费者，公用n个环形缓冲区。
定义两个同步信号量：
empty——表示缓冲区是否为空，初值为n。
full——表示缓冲区中是否为满，初值为0。</p>
<p>设缓冲区的编号为1～n-1，定义两个指针in和out，分别是生产者进程和消费者进程使用的指</p>
<p>，指向下一个可用的缓冲区。</p>
<pre><code>生产者进程
while(TRUE){
     生产一个产品;
     P(empty);
     产品送往buffer（in）；
     in=(in+1)mod n；
     V(full);
}

消费者进程
while(TRUE){
 P(full);
   从buffer（out）中取出产品；
   out=(out+1)mod n；
   V(empty);
   消费该产品;
   }
</code></pre><p>（3）一组生产者，一组消费者，公用n个环形缓冲区
在这个问题中，不仅生产者与消费者之间要同步，而且各个生产者之间、各个消费者之间还必须互斥地访问缓冲区。
定义四个信号量：
empty——表示缓冲区是否为空，初值为n。
full——表示缓冲区中是否为满，初值为0。
mutex1——生产者之间的互斥信号量，初值为1。
mutex2——消费者之间的互斥信号量，初值为1。</p>
<p>（3）一组生产者，一组消费者，公用n个环形缓冲区
在这个问题中，不仅生产者与消费者之间要同步，而且各个生产者之间、各个消费者之间还必须互斥地访问缓冲区。
定义四个信号量：
empty——表示缓冲区是否为空，初值为n。
full——表示缓冲区中是否为满，初值为0。
mutex1——生产者之间的互斥信号量，初值为1。
mutex2——消费者之间的互斥信号量，初值为1。</p>
<p>设缓冲区的编号为1～n-1，定义两个指针in和out，分别是生产者进程和消费者进程使用的指针，指向下一个可用的缓冲区。</p>
<pre><code>生产者进程
while(TRUE){
     生产一个产品;
     P(empty);
     P(mutex1)；
     产品送往buffer（in）；
     in=(in+1)mod n；
     V(mutex1);
     V(full);
}
消费者进程
while(TRUE){
 P(full)
   P(mutex2)；
   从buffer（out）中取出产品；
   out=(out+1)mod n；
   V（mutex2）；
   V(empty);
   消费该产品;
   }
</code></pre><p>需要注意的是无论在生产者进程中还是在消费者进程中，两个P操作的次序不能颠倒。应先执行同步信号量的P操作，然后再执行互斥信号量的P操作，否则可能造成进程死锁。</p>
<p>2.分水果问题</p>
<p>桌上有一空盘，允许存放一只水果。爸爸可向盘中放苹果，也可向盘中放桔子，儿子专等吃盘中的桔子，女儿专等吃盘中的苹果。规定当盘空时一次只能放一只水果供吃者取用，请用<em>P</em>、<em>V</em>原语实现爸爸、儿子、女儿三个并发进程的同步。</p>
<p>分析 在本题中，爸爸、儿子、女儿共用一个盘子，盘中一次只能放一个水果。当盘子为空时，爸爸可将一个水果放入果盘中。若放入果盘中的是桔子，则允许儿子吃，女儿必须等待；若放入果盘中的是苹果，则允许女儿吃，儿子必须等待。本题实际上是生产者-消费者问题的一种变形。这里，生产者放入缓冲区的产品有两类，消费者也有两类，每类消费者只消费其中固定的一类产品。</p>
<p>解：在本题中，应设置三个信号量S、So、Sa，信号量S表示盘子是否为空，其初值为l；信号量So表示盘中是否有桔子，其初值为0；信号量Sa表示盘中是否有苹果，其初值为0。同步描述如下：</p>
<div class="highlight"><pre class="chroma"><code class="language-c" data-lang="c"><span class="kt">int</span> <span class="n">S</span><span class="err">＝</span><span class="mi">1</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">Sa</span><span class="err">＝</span><span class="mi">0</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">So</span><span class="err">＝</span><span class="mi">0</span><span class="p">;</span>
      <span class="n">main</span><span class="p">()</span>
      <span class="p">{</span>
        <span class="n">cobegin</span>
            <span class="n">father</span><span class="p">();</span>      <span class="cm">/*父亲进程*/</span>
            <span class="n">son</span><span class="p">();</span>        <span class="cm">/*儿子进程*/</span>
            <span class="n">daughter</span><span class="p">();</span>    <span class="cm">/*女儿进程*/</span>
        <span class="n">coend</span>
    <span class="err">｝</span>
    <span class="n">father</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
          <span class="p">{</span>
            <span class="n">P</span><span class="p">(</span><span class="n">S</span><span class="p">);</span>
            <span class="err">将水果放入盘中</span><span class="p">;</span>
            <span class="k">if</span><span class="err">（放入的是桔子）</span><span class="n">V</span><span class="p">(</span><span class="n">So</span><span class="p">);</span>
            <span class="k">else</span>  <span class="nf">V</span><span class="p">(</span><span class="n">Sa</span><span class="p">);</span>
           <span class="p">}</span>
     <span class="p">}</span>
    <span class="n">son</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
          <span class="p">{</span>
             <span class="n">P</span><span class="p">(</span><span class="n">So</span><span class="p">);</span>
             <span class="err">从盘中取出桔子</span><span class="p">;</span>
             <span class="n">V</span><span class="p">(</span><span class="n">S</span><span class="p">);</span>
             <span class="err">吃桔子</span><span class="p">;</span>
            <span class="err">｝</span>
    <span class="p">}</span>
    <span class="n">daughter</span><span class="p">()</span>
    <span class="p">{</span>
         <span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
            <span class="p">{</span>
              <span class="n">P</span><span class="p">(</span><span class="n">Sa</span><span class="p">);</span>
              <span class="err">从盘中取出苹果</span><span class="p">;</span>
              <span class="n">V</span><span class="p">(</span><span class="n">S</span><span class="p">);</span>
              <span class="err">吃苹果</span><span class="p">;</span>
            <span class="err">｝</span>
<span class="err">｝</span>
</code></pre></div>]]></content>
		</item>
		
		<item>
			<title></title>
			<link>https://example.com/posts/smartbit/</link>
			<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
			
			<guid>https://example.com/posts/smartbit/</guid>
			<description>SmartBit 1.Qos 1. 1-2Port全速发包, 3Port收包, 查看包从哪个port发出,使用trigger step 1port des mac 为00:00:00:00:00:00:03 src mac 00:00:00:00:00:01 2port des mac 为00:00:00:00:00:00:03 src mac 00:00:00:00:00:02 </description>
			<content type="html"><![CDATA[<h4 id="smartbit">SmartBit</h4>
<h5 id="1qos">1.Qos</h5>
<pre><code>1. 1-2Port全速发包, 3Port收包, 查看包从哪个port发出,使用trigger step
	1port des mac 为00:00:00:00:00:00:03 src mac 00:00:00:00:00:01
	2port des mac 为00:00:00:00:00:00:03 src mac 00:00:00:00:00:02
</code></pre>]]></content>
		</item>
		
		<item>
			<title></title>
			<link>https://example.com/posts/tcpreplay/</link>
			<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
			
			<guid>https://example.com/posts/tcpreplay/</guid>
			<description>Tcpreplay tcpreplay用于重放保存在pcap文件中的网络流量，它支持按照捕获pcap文件时数据包的速度、或者指定速度去重放网络流量，只要在硬件承受的范围内即可。
它可以根据需要，使流量可以在两个网卡直接拆分、写入文件、进行筛选、以各种方式进行编辑，从而为测试防火墙、NIDS和其他网络设备提供了方法。
格式：tcpreplay [-flags] [-flag [value]] [&amp;ndash;option-name[[=| ]value]] &amp;lt;pcap_file(s)&amp;gt;
1、 命令参数： 　-d number, &amp;ndash;dbug=number
启用调试输出。此选项最多可出现1次。此选项将整数作为参数。 number的值被限制为：在0到5的范围内 此选项的默认输入number为：0 如果使用&amp;ndash;enable-debug进行配置，则可以为调试输出指定详细级别。数字越大，越详细。
　-q, &amp;ndash;quiet
静默模式。除了运行结束时的统计数据外，不打印任何内容
　-T string, &amp;ndash;timer=string
选择数据包计时模式：select，ioport，gtod，nano。此选项最多可出现1次。此选项的默认string是：gtod 允许您选择要使用的数据包计时方法：
nano - Use nanosleep() API
select - Use select() API
ioport - Write to the i386 IO Port 0x80
gtod [default] - Use a gettimeofday() loop
　&amp;ndash;maxsleep=number
设置数据包之间休眠不超过X毫秒。此选项将整数作为参数。此选项的默认输入number为：0 设置tcpreplay在数据包之间休眠的最大毫秒数限制。有效防止数据包之间的长时间延迟，而不会影响大多数数据包。默认为禁用。
　-v, &amp;ndash;verbose
通过tcpdump将解码后的数据包打印到标准输出。此选项最多可出现1次
　-A string, &amp;ndash;decode=string
传递给tcpdump解码器的参数。此选项最多可出现1次。此选项必须与-v参数以前使用。 当启用详细模式（-v）时，您还可以指定一个或多个附加参数以传递给tcpdump来修改数据包的解码方式。默认情况下，使用-n和-l。确保string用双引号引起来，如：-A“-axxx”，否则会被tcpreplay作为参数误用。有关选项的完整列表，请参见tcpdump(1)手册页</description>
			<content type="html"><![CDATA[<h3 id="tcpreplay">Tcpreplay</h3>
<p>tcpreplay用于重放保存在pcap文件中的网络流量，它支持按照捕获pcap文件时数据包的速度、或者指定速度去重放网络流量，只要在硬件承受的范围内即可。</p>
<p>它可以根据需要，使流量可以在两个网卡直接拆分、写入文件、进行筛选、以各种方式进行编辑，从而为测试防火墙、NIDS和其他网络设备提供了方法。</p>
<p>格式：<strong>tcpreplay</strong> [<strong>-flags</strong>] [<strong>-flag</strong> [<em>value</em>]] [<strong>&ndash;option-name</strong>[[=| ]<em>value</em>]] &lt;pcap_file(s)&gt;</p>
<h3 id="1-命令参数">1、 命令参数：</h3>
<p>　　<strong>-d</strong> <em>number</em>, <strong>&ndash;dbug</strong>=<em>number</em></p>
<p>启用调试输出。此选项最多可出现1次。此选项将整数作为参数。 number的值被限制为：在0到5的范围内
此选项的默认输入number为：0
如果使用&ndash;enable-debug进行配置，则可以为调试输出指定详细级别。数字越大，越详细。</p>
<p>　　<strong>-q</strong>, <strong>&ndash;quiet</strong></p>
<p>静默模式。除了运行结束时的统计数据外，不打印任何内容</p>
<p>　　<strong>-T</strong> <em>string</em>, <strong>&ndash;timer</strong>=<em>string</em></p>
<p>选择数据包计时模式：select，ioport，gtod，nano。此选项最多可出现1次。此选项的默认string是：gtod
允许您选择要使用的数据包计时方法：</p>
<p><em>nano</em> - Use nanosleep() API</p>
<p><em>select</em> - Use select() API</p>
<p><em>ioport</em> - Write to the i386 IO Port 0x80</p>
<p><em>gtod [default]</em> - Use a gettimeofday() loop</p>
<p>　　<strong>&ndash;maxsleep</strong>=<em>number</em></p>
<p>设置数据包之间休眠不超过X毫秒。此选项将整数作为参数。此选项的默认输入number为：0
设置tcpreplay在数据包之间休眠的最大毫秒数限制。有效防止数据包之间的长时间延迟，而不会影响大多数数据包。默认为禁用。</p>
<p>　　<strong>-v</strong>, <strong>&ndash;verbose</strong></p>
<p>通过tcpdump将解码后的数据包打印到标准输出。此选项最多可出现1次</p>
<p>　　<strong>-A</strong> <em>string</em>, <strong>&ndash;decode</strong>=<em>string</em></p>
<p>传递给tcpdump解码器的参数。此选项最多可出现1次。此选项必须与-v参数以前使用。
当启用详细模式（-v）时，您还可以指定一个或多个附加参数以传递给<strong>tcpdump来</strong>修改数据包的解码方式。默认情况下，使用-n和-l。确保string用双引号引起来，如：-A“-axxx”，否则会被tcpreplay作为参数误用。有关选项的完整列表，请参见tcpdump(1)手册页</p>
<p>　　<strong>-K</strong>, <strong>&ndash;preload-pcap</strong></p>
<p>在发送之前将数据包预加载到RAM中。
此选项在开始发送之前将指定的pcap加载到RAM中，以便提高启动性能，进而提高重放性能。预加载可以使用或不使用&ndash;loop。此选项还会控制每次迭代的流统计信息收集，这可以显着减少内存使用量。基于所提供的选项和从第一循环迭代收集的统计来预测流(flow)统计。</p>
<p>　　<strong>-c</strong> <em>string</em>, <strong>&ndash;cachefile</strong>=<em>string</em></p>
<p>通过tcpprep缓存(cache)文件拆分流量。此选项最多可出现1次。此选项必须与以下选项一起使用：intf2。此选项不得与以下选项一起使用：dualfile。
如果你有一个pcap文件，你想用它来通过一个设备（防火墙，路由器，IDS等）发送双向流量，然后使用tcpprep你可以创建一个缓存文件，tcpreplay将用它来分割两个网络接口的流量。</p>
<p>　　<strong>-2</strong>, <strong>&ndash;dualfile</strong></p>
<p>从network tap一次重放两个文件。此选项最多可出现1次。此选项必须与以下选项一起使用：intf2。此选项不得与以下任项一起使用：cachefile。
如果您使用网络分流器捕获网络流量，那么您最终可以获得两个pcap文件 - 每个方向一个。此选项将同时重放这两个文件，每个接口一个，并使用每个文件中的时间戳混合它们</p>
<p>　　<strong>-i</strong> <em>string</em>, <strong>&ndash;intf1</strong>=<em>string</em></p>
<p>Client to server/RX/primary traffic output interface. This option may appear up to 1 times.
Required network interface used to send either all traffic or traffic which is marked as ’primary’ via tcpprep. Primary traffic is usually client-to-server or inbound (RX) on khial virtual interfaces.</p>
<p>　　<strong>-I</strong> <em>string</em>, <strong>&ndash;intf2</strong>=<em>string</em></p>
<p>Server to client/TX/secondary traffic output interface. This option may appear up to 1 times.</p>
<p>Optional network interface used to send traffic which is marked as ’secondary’ via tcpprep. Secondary traffic is usually server-to-client or outbound (TX) on khial virtual interfaces. Generally, it only makes sense to use this option with &ndash;cachefile.</p>
<p>　　<strong>&ndash;listnics</strong></p>
<p>列出所有可用的网卡并退出。</p>
<p>　　<strong>-l</strong> <em>number</em>, <strong>&ndash;loop</strong>=<em>number</em></p>
<p>循环捕获文件X次。此选项最多可出现1次。此选项将整数作为输入参数。 number的值被限制为：
大于或等于0，此选项的默认输入number为：1</p>
<p>　　<strong>&ndash;loopdelay-ms</strong>=<em>number</em></p>
<p>循环之间的延迟（以毫秒为单位）。此选项必须与以下选项一起出现：&ndash;loop。此选项将整数作为输入参数。 number的值被限制为：大于或等于0，此选项的默认输入number为：0</p>
<p>　　<strong>&ndash;pktlen</strong></p>
<p>覆盖snaplen并使用实际的数据包len。此选项最多可出现1次。
默认情况下，tcpreplay将根据pcap文件中存储的“snaplen”的大小发送数据包，这通常是正确的做法。但是，偶尔，工具会存储更多的字节。通过指定此选项，tcpreplay将忽略snaplen字段，而是尝试根据原始数据包长度发送数据包。如果指定此选项，可能会发生错误。</p>
<p>　　<strong>-L</strong> <em>number</em>, <strong>&ndash;limit</strong>=<em>number</em></p>
<p>限制要发送的数据包数量。此选项最多可出现1次。此选项将整数作为输如参数。 number的值被限制为：大于或等于1，此选项的默认输如number为：-1
默认情况下，tcpreplay将发送所有数据包。或者手工指定要发送的最大数据包数。</p>
<p>　　<strong>&ndash;duration</strong>=<em>number</em></p>
<p>限制发送的秒数。此选项最多可出现1次。此选项将整数作为输入参数。 number的值被限制为：大于或等于1，此选项的默认number为：-1
默认情况下，tcpreplay将发送所有数据包。或者手工指定要传输的最大秒数。</p>
<p>　　<strong>-x</strong> <em>string</em>, <strong>&ndash;multiplier</strong>=<em>string</em></p>
<p>将重放速度修改为指定倍数。此选项最多可出现1次。此选项不得与以下任何选项一起出现：pps，mbps，oneatatime，topspeed。
指定一个值以修改数据包重放速度。例子：
2.0：将以捕获速度的两倍重放流量
0.7：将以捕获的速度的70％重放流量</p>
<p>　　<strong>-p</strong> <em>string</em>, <strong>&ndash;pps</strong>=<em>string</em></p>
<p>以给定的packets/sec重放数据包。此选项最多可出现1次。此选项不得与以下任何选项一起出现：multiplier, mbps, oneatatime, topspeed.。
指定一个值以将数据包重放调整为特定的packets/sec速率。例子：
200：将以每秒200个数据包重放流量
0.25：将以每分钟15个数据包重放流量</p>
<p>　　<strong>-M</strong> <em>string</em>, <strong>&ndash;mbps</strong>=<em>string</em></p>
<p>以给定的Mbps重放数据包。此选项最多可出现1次。此选项不得与以下任何选项一起出现：multiplier，pps，oneatatime，topspeed。
可为tcpreplay设定其发送数据包的Mbps速率，该值可以指定为浮点值</p>
<p>　　<strong>-t</strong>, <strong>&ndash;topspeed</strong></p>
<p>尽可能快地重放数据包。此选项不得与以下任何选项一起出现: mbps, multiplier, pps, oneatatime.</p>
<p>　　<strong>-o</strong>, <strong>&ndash;oneatatime</strong></p>
<p>根据用户输入重放每个数据包。此选项不得与以下任何选项一起出现：mbps，pps，multiplier，topspeed。
允许您一次单步执行一个或多个数据包。</p>
<p>　　<strong>&ndash;pps-multi</strong>=<em>number</em></p>
<p>指定每个时间间隔要发送的数据包数。此选项必须与以下选项一起使用：pps。此选项将整数作为输入参数。 number的值被限制为：大于或等于1，此选项的默认值为：1
当尝试以非常高的速率发送数据包时，每个数据包之间的时间可能很短，以至于不可能在所需的时间段内准确地休眠。此选项允许您一次发送多个数据包，从而允许更长的睡眠时间，这可以更准确地实现。</p>
<p>　　<strong>&ndash;unique-ip</strong></p>
<p>修改每个循环迭代的IP地址以生成唯一流。此选项必须与以下选项一起使用：loop。
确保每个**&ndash;loop**迭代的IPv4和IPv6数据包都是唯一的。这是以不会改变数据包CRC的方式完成的，因此通常不会影响性能。此选项将显着增加多次循环迭代生成的flow/sec。</p>
<p>　　<strong>&ndash;unique-ip-loops</strong>=<em>string</em></p>
<p>分配新的唯一IP之前循环的次数。此选项最多可出现1次。此选项必须与以下选项一起使用: unique-ip.</p>
<p>Number of <strong>&ndash;loop</strong> iterations before a new unique IP is assigned. Default is 1. Assumes both <strong>&ndash;loop</strong> and <strong>&ndash;unique-ip</strong>.</p>
<p>　　<strong>&ndash;netmap</strong></p>
<p>将数据包直接写入启用netmap的网络适配器。
此功能将检测Linux和BSD系统上支持netmap的网络驱动程序。如果检测到，则会在执行期间绕过网络驱动程序，并直接写入网络缓冲区。这将允许您在商用网络适配器上实现全线速率，类似于商用网络流量生成器实现的速率。请注意，绕过网络驱动程序将中断通过测试接口连接的其他应用程序。有关更多信息，请参阅INSTALL。
This feature can also be enabled by specifying an interface as ’netmap:<!-- raw HTML omitted -->’ or ’vale:<!-- raw HTML omitted -->. For example ’netmap:eth0’ specifies netmap over interface eth0.</p>
<p>　　<strong>&ndash;nm-delay</strong>=<em>number</em></p>
<p>Netmap启动延迟。此选项将整数作为参数。此选项的默认输入为：10
加载netmap后延迟的秒数。在netmap传输之前确保接口完全开启工作。需要netmap选项。默认值为10秒。</p>
<p>　　<strong>&ndash;no-flow-stats</strong></p>
<p>阻止打印和跟踪流量，速率和到期</p>
<p>禁止收集和打印流量统计信息。 不使用**&ndash;preload-pcap**选项时，此选项可以提高性能，否则它的唯一功能是禁止打印。</p>
<p>流功能将跟踪和打印正在发送的流的统计信息。 简单来讲，一个流是由5元组进行唯一区分的，即源IP、目的IP、源端口、目的端口和协议。
如果指定了&ndash;loop，则从一次迭代到下一次迭代的流将不是唯一的，除非数据包被更改。 使用**&ndash;unique-ip**或**tcpreplay-edit**在迭代之间更改数据包。</p>
<p>　　<strong>&ndash;flow-expiry</strong>=<em>number</em></p>
<p>流被视为过期前的非活动秒数。此选项不得与以下选项一起使用：no-flow-stats。此选项将整数作为输入参数。 number的值被限制为：大于或等于0
此选项的默认值为：0
此选项将根据流的idle time来跟踪和报告流的过期。 pcap文件中的时间戳用于确定到期时间，而不是重放数据包的实际时间戳。例如，值30表示如果流上没有流量持续30秒，则任何后续流量都将被视为新流量，从而将增加流量和每秒流量（fps）统计量。</p>
<p>（ For example, a value of 30 suggests that if no traffic is seen on a flow for 30 seconds, any subsequent traffic would be considered a new flow, and thereby will increment the flows and flows per second (fps) statistics.）
此选项可用于优化流产品的流超时设置。当实际流量响应速度很慢时，将超时设置较低可能会导致流量被丢弃。将流量超时配置得过高可能会增加流量产品所需的资源。
请注意，在高于原始速度的重放时使用此选项可能会导致流量和fps计数膨胀。
默认值为0（无到期），典型值为30-120秒</p>
<p>　　<strong>-P</strong>, <strong>&ndash;pid</strong></p>
<p>在启动时打印tcpreplay的PID</p>
<p>　　<strong>&ndash;stats</strong>=<em>number</em></p>
<p>每X秒打印统计信息，如果为&rsquo;0'则打印每个循环。此选项将整数作为输入参数。 number的值被限制为：大于或等于0
Note that timed delays are a &ldquo;best effort&rdquo; and long delays between sending packets may cause equally long delays between printing statistics.</p>
<p>　　<strong>-V</strong>, <strong>&ndash;version</strong></p>
<p>打印版本信息</p>
<p>　　<strong>-h</strong>, <strong>&ndash;less-help</strong></p>
<p>打印简单的帮助信息</p>
<p>　　<strong>-H</strong>, <strong>&ndash;help</strong></p>
<p>打印帮助信息</p>
<p>　　<strong>-!</strong>, <strong>&ndash;more-help</strong></p>
<p>打印详细帮助信息</p>
<p>　　<strong>&ndash;save-opts</strong> [=<em>cfgfile</em>]</p>
<p>将选项状态保存到cfgfile。默认值是下面的<strong>OPTION PRESETS</strong>章节中列出的最后一个配置文件。该命令在更新配置文件后退出。</p>
<p>　　<strong>&ndash;load-opts</strong>=<em>cfgfile</em>, <strong>&ndash;no-load-opts</strong></p>
<p>Load options from <em>cfgfile</em>. The <em>no-load-opts</em> form will disable the loading of earlier config/rc/ini files. <em>&ndash;no-load-opts</em> is handled early, out of order.</p>
<h3 id="2返回值">2、返回值</h3>
<p>One of the following exit values will be returned:
0 (EXIT_SUCCESS)</p>
<p>Successful program execution.</p>
<p>1 (EXIT_FAILURE)</p>
<p>The operation failed or the command syntax was not valid.</p>
<p>66 (EX_NOINPUT)</p>
<p>A specified configuration file could not be loaded.</p>
<p>70 (EX_SOFTWARE)</p>
<p>libopts had an internal operational error. Please report it to <a href="mailto:autogen-users@lists.sourceforge.net">autogen-users@lists.sourceforge.net</a>. Thank you.</p>
<h3 id="3使用示例">3、使用示例</h3>
<p><strong>1、重放在客户端 <a href="http://man.linuxde.net/ftp">ftp</a> 连接的报文</strong></p>
<p>a、在客户端使用 ethereal 抓包，存为 ftp.pcap 文件。</p>
<p>b、 将 ftp.pcap 文件进行 tcpprep 操作，制作 cache 文件。</p>
<pre><code>[root@A ~]# tcpprep -an client -i ftp.pcap -o ftp.cache –v 
</code></pre><p>c、 将 DUT 设备的两个接口和 PC 的两个接口使用网线连接，使用 tcpreplay 重 放报文。注意防火墙的配置为网桥（透明）模式。</p>
<pre><code>[root@A ~]# tcpreplay -c ftp.cache -i eth0 -j eth1 ftp.pcap -R –v 
</code></pre><p>-R 参数表示全速发送，-v 显示打印信息。</p>
<p><strong>2、重放在客户端 BT 连接的报文</strong></p>
<p>a、在实验室 BT 下载一些台湾的娱乐节目和热门的大片，使用 ethereal 抓包， 存为 bt.pcap 文件。注意 pcap 文件大小的控制，对 pc 的内存要求比较高，我保 存了一个 600 多 M 的 pcap 文件用了 40 多分钟，大家有需要可以直接从实验室 copy。</p>
<p>b、将 bt.pcap 文件进行 tcpprep 操作，制作 cache 文件。</p>
<pre><code> [root@A ~]# tcpprep -an client -i bt.pcap -o bt.cache -C &quot;100M BT Packet&quot; –v
</code></pre><p>制作 cache 文件，在 cache 文件中写入“100M BT Packet”的注释。</p>
<p>c、使用 tcpreplay 重放报文。</p>
<pre><code>[root@A ~]# tcpreplay -c bt.cache -i eth0 -j eth1 bt.pcap -v –R 
</code></pre><p><strong>3、重放 <a href="http://man.linuxde.net/tftp">tftp</a> 服务器上抓到的报文</strong></p>
<p>a、在 tftp 服务器上使用 ethereal 抓包，存为 tftp.pcap 文件。</p>
<p>b、将 pcap 文件进行 tcpprep 的操作，制作 cache 文件。</p>
<pre><code>[root@A ~]# tcpprep -an server -i tftp.pcap -o tftp.cache –v 
</code></pre><p>注意：我在测试的时候犯了一个错误，使用 DUT 的 tftp 升级来做实验，同时穿 过 DUT 重放报文，结果在网卡发送报文的后，DUT 的 mac 地址做了的回应，导致 交互过程没有穿过 DUT，这个问题比较搞笑，上午弄了半天才发现原因，开始还 以为 udp 的连接不能重放。</p>
<p>c、使用 tcpreplay 重放报文。</p>
<pre><code>[root@A ~]# tcpreplay -c tftp.cache -i eth0 -j eth1 tftp.pcap –v
</code></pre><p><strong>4、重放pcap包，并指定速率和loop次数</strong></p>
<pre><code>[root@A ~]# sudo tcpreplay -i en9 -M 100 -l 0 ~/Documents/pkt/udp.pcap
</code></pre><p>以速率10Mbps，0为无限次循环进行重放</p>
]]></content>
		</item>
		
		<item>
			<title></title>
			<link>https://example.com/posts/vim/</link>
			<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
			
			<guid>https://example.com/posts/vim/</guid>
			<description>VIM    Version Change Description Author Date     1.0 vim基本使用方法 lixiang 2020/8/20                      1.安装 到http://172.22.102.206/documents/392下载cscope.shell, .vim和 .vimrc 拷贝.vim问价夹和.vimrc文件到用户根目录(~/) 在项目code目录及sdk目录执行脚本cscope.shell(也可以在项目根目录) 2.vim常用快捷键 2.1. 移动光标
​	基础移动:
h(左), j(下), k(上), l(右) ​	高级移动:
w (移动到下个单词开头) e (移动到单词尾) f+(char) (移动到当先行光标后的第一个char处) ​	借助插件移动光标(vim-easymotion)
​	是自己绑定的快捷键,目前是 ,
&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;s+char(可视页面所有char位置) &amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;f+char(光标后可视char位置) &amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;w(光标后所有单词词首) &amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;e(光标后所有单词词尾) &amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;j(光标后所有行首) &amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;k(光标前所有行首) ​	重复操作</description>
			<content type="html"><![CDATA[<h3 id="vim">VIM</h3>
<table>
<thead>
<tr>
<th>Version</th>
<th>Change Description</th>
<th>Author</th>
<th>Date</th>
</tr>
</thead>
<tbody>
<tr>
<td>1.0</td>
<td>vim基本使用方法</td>
<td>lixiang</td>
<td>2020/8/20</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h4 id="1安装">1.安装</h4>
<pre><code>到http://172.22.102.206/documents/392下载cscope.shell, .vim和 .vimrc

拷贝.vim问价夹和.vimrc文件到用户根目录(~/)

在项目code目录及sdk目录执行脚本cscope.shell(也可以在项目根目录)
</code></pre><h4 id="2vim常用快捷键">2.vim常用快捷键</h4>
<p><strong>2.1. 移动光标</strong></p>
<p>​	基础移动:</p>
<pre><code>h(左), j(下), k(上), l(右)
</code></pre><p>​	高级移动:</p>
<pre><code>w (移动到下个单词开头)
e (移动到单词尾)
f+(char) (移动到当先行光标后的第一个char处)
</code></pre><p>​	借助插件移动光标(vim-easymotion)</p>
<p>​	<!-- raw HTML omitted -->是自己绑定的快捷键,目前是 ,</p>
<pre><code>&lt;leader&gt;&lt;leader&gt;s+char(可视页面所有char位置)
&lt;leader&gt;&lt;leader&gt;f+char(光标后可视char位置)
&lt;leader&gt;&lt;leader&gt;w(光标后所有单词词首)
&lt;leader&gt;&lt;leader&gt;e(光标后所有单词词尾)
&lt;leader&gt;&lt;leader&gt;j(光标后所有行首)
&lt;leader&gt;&lt;leader&gt;k(光标前所有行首)
</code></pre><p>​	重复操作</p>
<pre><code>数字+操作符 (9j)
</code></pre><p><strong>2.2.插入</strong></p>
<pre><code>i(光标前插入), a(光标后插入), s(替换光标处字符)
I(行首插入), A(行尾插入), S(替换整行)
o(切换到下一行插入), O(切换到上一行插入)
</code></pre><p><strong>2.3.删除</strong></p>
<pre><code>x(剪切当前字符)
dd(剪切整行)
可以加数字进行重复操作
</code></pre><p><strong>2.4.选中,复制,粘贴</strong></p>
<pre><code>v(选中当前字符,可以移动光标拖拽)
V(选中当前行,会复制回车)
y(复制)
p(粘贴到光标后)
P(粘贴到光标前)
</code></pre><p><strong>2.5.撤销与反撤销</strong></p>
<pre><code>u(撤销)
Ctrl-r(反撤销)
</code></pre><h4 id="3对比source-insight的功能简介">3.对比source insight的功能简介</h4>
<table>
<thead>
<tr>
<th>常用的source insight功能:</th>
<th>vim快捷键</th>
</tr>
</thead>
<tbody>
<tr>
<td>查看光标所在函数,变量定义</td>
<td>Ctrl-] , <!-- raw HTML omitted -->sg</td>
</tr>
<tr>
<td>查看光标所在该函数被调用的地方</td>
<td><!-- raw HTML omitted -->sc</td>
</tr>
<tr>
<td>查看光标所在单词在代码出现(忽略注释)</td>
<td><!-- raw HTML omitted -->ss</td>
</tr>
<tr>
<td>查看光标所在单词在项目出现的地方(可以搜注释)</td>
<td><!-- raw HTML omitted -->st</td>
</tr>
<tr>
<td>查看所输入单词在项目出现的地方</td>
<td>Ctrl-f</td>
</tr>
<tr>
<td>返 回</td>
<td>Ctrl-t</td>
</tr>
</tbody>
</table>
<h4 id="4好用插件">4.好用插件</h4>
<p><strong>4.1模糊搜索文件名</strong></p>
<pre><code>fzf: Ctrl-p
</code></pre><p><strong>4.2搜索单词出现的文件</strong></p>
<pre><code>Ag: &lt;leader&gt;a(搜索当前单词)
		&lt;leader&gt;g(搜索输入单词)
</code></pre><p><strong>4.3高亮单词</strong></p>
<pre><code>interestingword:&lt;leader&gt;k(高亮/取消高亮 当前单词)
</code></pre><p><strong>4.4快速插入注释</strong></p>
<pre><code>&lt;leader&gt;1
</code></pre><p><strong>4.5文件树</strong></p>
<pre><code>nerdtree:&lt;leader&gt;e
defx:
x 关闭文件夹
h 关闭文件夹
j 上移
k 下移
l 文件夹则展开，文件则打开
o 文件夹则展开，文件则打开
I split 分屏打开
m 移动
c 拷贝
p 粘贴 移动或拷贝的
r 重命名
shift-k 在当前光标下新建文件夹
shift-n 在当前光标下新建文件
shift_c 切换样式
d 删除光标所在的文件或文件夹
yy 输出当前光标所在的路径
</code></pre><p><strong>4.6函数列表</strong></p>
<pre><code>tagbar:F7
</code></pre><p><strong>4.7新建tab</strong></p>
<pre><code>打开多文件无需打开多个vim终端
&lt;leader&gt;o(打开一个新的tab,可以指定文件)
&lt;leader&gt;n(切换到下一个tab)
&lt;leader&gt;p(切换到上一个tab)
&lt;leader&gt;c(关闭tab)
</code></pre><h4 id="5插件管理工具vim-plughttpsgithubcomjunegunnvim-plug">5.插件管理工具(<a href="https://github.com/junegunn/vim-plug">vim-plug</a>)</h4>
<pre><code>~/.vimrc
call plug#begin()
Plug 'majutsushi/tagbar'
...
call plug#end()
</code></pre><h4 id="6快捷键映射">6.快捷键映射</h4>
<pre><code>map
命令格式：
:map {lhs} {rhs}
其含义是，在:map作用的模式中把键系列 {lhs} 映射为 {rhs}，{rhs}可进行映射扫描，也就是可递归映射。

举例：
:map td :tabnew .&lt;cr&gt;
含义：在其作用模式（普通、可视、操作符）下，输入td等价于输入 :tabnew . &lt;cr&gt;。而普通模式下输入:tabnew . &lt;cr&gt;就是打开当前目录
如果再定义绑定 :map ts td，就是指在其作用模式下输入ts等价于td，也就是打开当前目录。不过如果没有特殊需要，一般不建议递归映射。

noremap
:noremap和:map命令相对，作用模式和命令格式都相同，只不过不允许再对{rhs}进行映射扫描，也就是{lhs}定义后的映射就是{rhs}的键序列，不会再对{rhs}键序列重新解释扫描。它一般用于重定义一个命令，当然如果:map不需要递归映射的话，建议使用:noremap
比如：
:noremap ts td
它的意思是在其作用模式下，输入ts就是输入td，但是和:map不同的是，此时td再不会做进一步扫描解释。虽然之前已经定义了td，但是不会对td再做扫描。

unmap
:unmap是对应取消:map绑定的｛lhs｝，作用模式相同，命令格式 :unmap {lhs}。
例如：
:unmap td
就是取消在其作用模式中td的绑定，比如之前td被绑定为:tabnew .&lt;cr&gt;，此时此绑定消失。

mapclear
:mapclear时对应取消所有:map绑定的，慎用！

只用于普通模式的
:nmap
:nmap是:map的普通模式板，也就是说其绑定的键只作用于普通模式。
例如：
:nmap &lt;leader&gt;d :tabnew .&lt;cr&gt; 和 :map td :tabnew .&lt;cr&gt; 在普通模式下等效
:nnoremap
:nnorempa和:nmap的关系和:noremap和:map的关系一样，只是:nmap的非递归版
:nunmap
:nunmap和:nmap的关系和:unmap和:map的关系一样，取消:nmap的绑定。
:nmapclear
:nmapclear是对应取消所有:map绑定的，慎用！

nore
表示非递归。
递归的映射。其实很好理解，也就是如果键a被映射成了b，c又被映射成了a，如果映射是递归的，那么c就被映射成了b。
n
表示在普通模式下生效
v
表示在可视模式下生效
i
表示在插入模式下生效
c
表示在命令行模式下生效
</code></pre><p><strong>键表</strong></p>
<pre><code>&lt;k0&gt; - &lt;k9&gt; 小键盘 0 到 9
&lt;S-...&gt; Shift＋键
&lt;C-...&gt; Control＋键
&lt;M-...&gt; Alt＋键 或 meta＋键
&lt;A-...&gt; 同 &lt;M-...&gt;
&lt;Esc&gt; Escape 键
&lt;Up&gt; 光标上移键
&lt;Space&gt; 插入空格
&lt;Tab&gt; 插入Tab
&lt;CR&gt; 等于&lt;Enter&gt;
</code></pre><h4 id="7待解决问题">7.待解决问题</h4>
<p>7.1.语法高亮</p>
<p>7.2.单词高亮仅6个</p>
<p>7.3.Ag在根目录无法搜索,比终端直接搜索慢</p>
<p>7.4.搜索列表无法保存</p>
<p>7.5.使用y无法拷贝到Windows(Mac)</p>
<p>j</p>
]]></content>
		</item>
		
		<item>
			<title></title>
			<link>https://example.com/posts/%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</link>
			<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
			
			<guid>https://example.com/posts/%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</guid>
			<description>工厂模式 1. 简单工厂模式 简单工厂模式（Simple Factory Pattern）：定义一个工厂类，它可以根据参数的不同返回不同类的实例，被创建的实例通常都具有共同的父类。因为在简单工厂模式中用于创建实例的方法是静态（static）方法，因此简单工厂模式又被称为静态工厂方法（Static Factory Method）模式，它属于类创建型模式。 简单工厂模式的要点在于：当你需要什么，只需要传入一个正确的参数，就可以获取你所需要的对象，而无须知道其创建细节。简单工厂模式结构比较简单，其核心是工厂类的设计 例: 我们创建一个工厂结构体，并且创建一个产品接口，工厂可以创建产品，只要在工厂的某个方法中传入不同的参数，就可以返回实现产品接口的不同的对象
  创建工厂结构体
type Factory struct { }   创建产品接口
type Product interface { create() }   创建两个产品
// 产品1，实现产品接口 type Car struct { } func (c Car) create() { fmt.Println(&amp;#34;this is car&amp;#34;) } // 产品2，实现产品接口 type Bicycle struct { } func (b Bicycle) create() { fmt.Println(&amp;#34;this is bicycle&amp;#34;) }   为工厂结构添加一个方法用于生产产品(实例化对象)
func (f Factory) Generate(name string) Product { switch name { case &amp;#34;car&amp;#34;: return Car{} case &amp;#34;bicycle&amp;#34;: return Bicycle{} default: return nil } }   通过传入不同方法得到不同的产品示例</description>
			<content type="html"><![CDATA[<h4 id="工厂模式">工厂模式</h4>
<h4 id="1-简单工厂模式">1. 简单工厂模式</h4>
<pre><code>简单工厂模式（Simple Factory Pattern）：定义一个工厂类，它可以根据参数的不同返回不同类的实例，被创建的实例通常都具有共同的父类。因为在简单工厂模式中用于创建实例的方法是静态（static）方法，因此简单工厂模式又被称为静态工厂方法（Static Factory Method）模式，它属于类创建型模式。
</code></pre><pre><code>简单工厂模式的要点在于：当你需要什么，只需要传入一个正确的参数，就可以获取你所需要的对象，而无须知道其创建细节。简单工厂模式结构比较简单，其核心是工厂类的设计
</code></pre><h5 id="例">例:</h5>
<p>我们创建一个<code>工厂结构体</code>，并且创建一个产品接口，工厂可以创建产品，只要在工厂的某个方法中传入不同的参数，就可以返回实现产品接口的不同的对象</p>
<ol>
<li>
<p>创建工厂结构体</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kd">type</span> <span class="nx">Factory</span> <span class="kd">struct</span> <span class="p">{</span>
<span class="p">}</span>
</code></pre></div></li>
<li>
<p>创建产品接口</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kd">type</span> <span class="nx">Product</span> <span class="kd">interface</span> <span class="p">{</span>
  <span class="nf">create</span><span class="p">()</span>
<span class="p">}</span>
</code></pre></div></li>
<li>
<p>创建两个产品</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="c1">// 产品1，实现产品接口
</span><span class="c1"></span><span class="kd">type</span> <span class="nx">Car</span> <span class="kd">struct</span> <span class="p">{</span>
<span class="p">}</span>
   
<span class="kd">func</span> <span class="p">(</span><span class="nx">c</span> <span class="nx">Car</span><span class="p">)</span> <span class="nf">create</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;this is car&#34;</span><span class="p">)</span>
<span class="p">}</span>
   
<span class="c1">// 产品2，实现产品接口
</span><span class="c1"></span><span class="kd">type</span> <span class="nx">Bicycle</span> <span class="kd">struct</span> <span class="p">{</span>
<span class="p">}</span>
   
<span class="kd">func</span> <span class="p">(</span><span class="nx">b</span> <span class="nx">Bicycle</span><span class="p">)</span> <span class="nf">create</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;this is bicycle&#34;</span><span class="p">)</span>
<span class="p">}</span>
   
</code></pre></div></li>
<li>
<p>为工厂结构添加一个方法用于生产产品(实例化对象)</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"> <span class="kd">func</span> <span class="p">(</span><span class="nx">f</span> <span class="nx">Factory</span><span class="p">)</span> <span class="nf">Generate</span><span class="p">(</span><span class="nx">name</span> <span class="kt">string</span><span class="p">)</span> <span class="nx">Product</span> <span class="p">{</span>
     <span class="k">switch</span> <span class="nx">name</span> <span class="p">{</span>
     <span class="k">case</span> <span class="s">&#34;car&#34;</span><span class="p">:</span>
        <span class="k">return</span> <span class="nx">Car</span><span class="p">{}</span>
     <span class="k">case</span> <span class="s">&#34;bicycle&#34;</span><span class="p">:</span>
        <span class="k">return</span> <span class="nx">Bicycle</span><span class="p">{}</span>
     <span class="k">default</span><span class="p">:</span>
        <span class="k">return</span> <span class="kc">nil</span>
     <span class="p">}</span>
 <span class="p">}</span>   
</code></pre></div></li>
<li>
<p>通过传入不同方法得到不同的产品示例</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="c1">// 创建一个工厂类，在应用中可以将这个工厂类实例作为一个全局变量
</span><span class="c1"></span><span class="nx">factory</span> <span class="o">:=</span> <span class="nb">new</span><span class="p">(</span><span class="nx">Factory</span><span class="p">)</span>
   
<span class="c1">// 在工厂类中传入不同的参数，获取不同的实例
</span><span class="c1"></span><span class="nx">p1</span> <span class="o">:=</span> <span class="nx">factory</span><span class="p">.</span><span class="nf">Generate</span><span class="p">(</span><span class="s">&#34;car&#34;</span><span class="p">)</span>
<span class="nx">p1</span><span class="p">.</span><span class="nf">create</span><span class="p">()</span> <span class="c1">// output:   this is car
</span><span class="c1"></span>   
<span class="nx">p2</span> <span class="o">:=</span> <span class="nx">factory</span><span class="p">.</span><span class="nf">Generate</span><span class="p">(</span><span class="s">&#34;bycicle&#34;</span><span class="p">)</span>
<span class="nx">p2</span><span class="p">.</span><span class="nf">create</span><span class="p">()</span> <span class="c1">// output:   this is bicycle
</span></code></pre></div></li>
</ol>
<h5 id="简单工厂模式的优缺点">简单工厂模式的优缺点</h5>
<pre><code>优点: 工厂类是整个工厂模式的核心，我们只需要传入给定的信息，就可以创建所需实例，在多人协作的时候，无需知道对象之间的内部依赖，可以直接创建，有利于整个软件体系结构的优化
</code></pre><pre><code>缺点: 工厂类中包含了所有实例的创建逻辑，一旦这个工厂类出现问题，所有实例都会受到影响，并且，工厂类中生产的产品都基于一个共同的接口，一旦要添加不同种类的产品，这就会增加工厂类的复杂度，将不同种类的产品混合在一起，违背了单一职责，系统的灵活性和可维护性都会降低，并且当新增产品的时候，必须要修改工厂类，违背了『系统对扩展开放，对修改关闭』的原则
</code></pre><h4 id="2-工厂方法模式">2. 工厂方法模式</h4>
<p>在 <code>简单工厂</code> 中，依赖于唯一的工厂对象，如果我们需要实例化一个产品，那么就要向工厂中传入一个参数获取对应对象，如果要增加一种产品，就要在工厂中修改创建产品的函数，耦合性过高 ，而在 <code>工厂方法</code> 中，依赖工厂接口，我们可以通过实现工厂接口，创建多种工厂，将对象创建由一个对象负责所有具体类的实例化，变成由一群子类来负责对具体类的实例化，将过程解耦。</p>
<h5 id="例-1">例:</h5>
<ol>
<li>添加工厂接口和产品接口</li>
</ol>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kd">type</span> <span class="nx">Shop</span> <span class="kd">interface</span> <span class="p">{</span>
  <span class="nf">Generate</span><span class="p">(</span><span class="nx">t</span> <span class="kt">string</span><span class="p">)</span> <span class="nx">Transport</span>
<span class="p">}</span>

<span class="kd">type</span> <span class="nx">Transport</span> <span class="kd">interface</span> <span class="p">{</span>
  <span class="nf">create</span><span class="p">()</span>
<span class="p">}</span>
</code></pre></div><ol start="2">
<li>
<p>创建工厂结构体和产品结构体</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kd">type</span> <span class="nx">BenzCar</span> <span class="kd">struct</span><span class="p">{}</span>
<span class="kd">type</span> <span class="nx">AudiCar</span> <span class="kd">struct</span><span class="p">{}</span>
   
<span class="kd">type</span> <span class="nx">BenzBicycle</span> <span class="kd">struct</span><span class="p">{}</span>
<span class="kd">type</span> <span class="nx">AudiBicycle</span> <span class="kd">struct</span><span class="p">{}</span>
</code></pre></div></li>
<li>
<p>实现产品接口</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kd">func</span> <span class="p">(</span><span class="nx">bc</span> <span class="nx">BenzCar</span><span class="p">)</span> <span class="nf">create</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;this is benz car&#34;</span><span class="p">)</span>
<span class="p">}</span>
   
<span class="kd">func</span> <span class="p">(</span><span class="nx">ac</span> <span class="nx">AudiCar</span><span class="p">)</span> <span class="nf">create</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;this is Audi car&#34;</span><span class="p">)</span>
<span class="p">}</span>
   
<span class="kd">func</span> <span class="p">(</span><span class="nx">bb</span> <span class="nx">BenzBicycle</span><span class="p">)</span> <span class="nf">create</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;this is benz bicycle&#34;</span><span class="p">)</span>
<span class="p">}</span>
   
<span class="kd">func</span> <span class="p">(</span><span class="nx">ab</span> <span class="nx">AudiBicycle</span><span class="p">)</span> <span class="nf">create</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;this is Audi bicycle&#34;</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></li>
<li>
<p>创建对应工厂</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kd">type</span> <span class="nx">BenzShop</span> <span class="kd">struct</span> <span class="p">{}</span>
   
<span class="kd">func</span> <span class="p">(</span><span class="nx">bs</span> <span class="nx">BenzShop</span><span class="p">)</span> <span class="nf">Generate</span><span class="p">(</span><span class="nx">t</span> <span class="kt">string</span><span class="p">)</span> <span class="nx">Transport</span> <span class="p">{</span>
    <span class="k">switch</span> <span class="nx">t</span> <span class="p">{</span>
            <span class="k">case</span> <span class="s">&#34;car&#34;</span><span class="p">:</span>
                    <span class="k">return</span> <span class="nx">BenzCar</span><span class="p">{}</span>
            <span class="k">case</span> <span class="s">&#34;bicycle&#34;</span><span class="p">:</span>
                    <span class="k">return</span> <span class="nx">BenzBicycle</span><span class="p">{}</span>
            <span class="k">default</span><span class="p">:</span>
                    <span class="k">return</span> <span class="kc">nil</span>
    <span class="p">}</span>
<span class="p">}</span>
   
<span class="kd">type</span> <span class="nx">AudiShop</span> <span class="kd">struct</span> <span class="p">{}</span>
   
<span class="kd">func</span> <span class="p">(</span><span class="nx">bs</span> <span class="nx">AudiShop</span><span class="p">)</span> <span class="nf">Generate</span><span class="p">(</span><span class="nx">t</span> <span class="kt">string</span><span class="p">)</span> <span class="nx">Transport</span> <span class="p">{</span>
    <span class="k">switch</span> <span class="nx">t</span> <span class="p">{</span>
            <span class="k">case</span> <span class="s">&#34;car&#34;</span><span class="p">:</span>
                    <span class="k">return</span> <span class="nx">AudiCar</span><span class="p">{}</span>
            <span class="k">case</span> <span class="s">&#34;bicycle&#34;</span><span class="p">:</span>
                    <span class="k">return</span> <span class="nx">AudiBicycle</span><span class="p">{}</span>
            <span class="k">default</span><span class="p">:</span>
                    <span class="k">return</span> <span class="kc">nil</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></li>
<li>
<p>生产</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kd">var</span> <span class="nx">t</span> <span class="nx">Transport</span>
<span class="nx">BenzFactory</span> <span class="o">:=</span> <span class="nb">new</span><span class="p">(</span><span class="nx">BenzShop</span><span class="p">)</span>
<span class="nx">b</span> <span class="p">=</span> <span class="nx">BenzFactory</span><span class="p">.</span><span class="nf">Generate</span><span class="p">(</span><span class="s">&#34;car&#34;</span><span class="p">)</span>
<span class="nx">b</span><span class="p">.</span><span class="nf">create</span><span class="p">()</span> <span class="c1">//this is benz car
</span><span class="c1"></span>   
<span class="nx">AudiFactory</span> <span class="o">:=</span> <span class="nb">new</span><span class="p">(</span><span class="nx">AudiShop</span><span class="p">)</span>
<span class="nx">b</span> <span class="p">=</span> <span class="nx">AudiFactory</span><span class="p">.</span><span class="nf">Generate</span><span class="p">(</span><span class="s">&#34;car&#34;</span><span class="p">)</span>
<span class="nx">b</span><span class="p">.</span><span class="nf">create</span><span class="p">()</span> <span class="c1">//this is Audi car
</span></code></pre></div></li>
</ol>
<h5 id="工厂方法模式的优缺点">工厂方法模式的优缺点</h5>
<pre><code>优点:

符合“开闭”原则，具有很强的的扩展性、弹性和可维护性。修改时只需要添加对应的工厂类即可

使用了依赖倒置原则，依赖抽象而不是具体，使用（客户）和实现（具体类）松耦合

客户只需要知道所需产品的具体工厂，而无须知道具体工厂的创建产品的过程，甚至不需要知道具体产品的类名。
</code></pre><pre><code>缺点:

每增加一个产品时，都需要一个具体类和一个具体创建者，使得类的个数成倍增加，导致系统类数目过多，复杂性增加

对简单工厂，增加功能修改的是工厂类；对工厂方法，增加功能修改的是产品类。
</code></pre><h4 id="3-抽象工厂模式">3. 抽象工厂模式</h4>
<p>工厂模式用来创建一组相关或者相互依赖的对象，与工厂方法模式的区别就在于，工厂方法模式针对的是一个产品等级结构；而抽象工厂模式则是针对的多个产品等级结构， 我们可以将一种产品等级想象为一个产品族，所谓的产品族，是指位于不同产品等级结构中功能相关联的产品组成的家族。</p>
<h5 id="例-2">例:</h5>
<ol>
<li>工厂接口和产品接口</li>
</ol>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kd">type</span> <span class="nx">FactoryInterface</span> <span class="kd">interface</span> <span class="p">{</span>
  	<span class="nf">CreateCar</span><span class="p">()</span> <span class="nx">ProductInterface</span> <span class="c1">// 创建汽车产品
</span><span class="c1"></span>  	<span class="nf">CreateBicycle</span><span class="p">()</span> <span class="nx">ProductInterface</span> <span class="c1">// 创建自行车产品
</span><span class="c1"></span><span class="p">}</span>

<span class="kd">type</span> <span class="nx">ProductInterface</span> <span class="kd">interface</span> <span class="p">{</span>
  	<span class="nf">Intro</span><span class="p">()</span>
<span class="p">}</span>

</code></pre></div><ol start="2">
<li>
<p>实现4种产品</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kd">type</span> <span class="nx">BenzCar</span> <span class="kd">struct</span> <span class="p">{</span>
<span class="p">}</span>
   
<span class="kd">func</span> <span class="p">(</span><span class="nx">bc</span> <span class="nx">BenzCar</span><span class="p">)</span> <span class="nf">Intro</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;奔驰汽车&#34;</span><span class="p">)</span>
<span class="p">}</span>
   
<span class="kd">type</span> <span class="nx">BenzBicycle</span> <span class="kd">struct</span> <span class="p">{</span>
<span class="p">}</span>
   
<span class="kd">func</span> <span class="p">(</span><span class="nx">bb</span> <span class="nx">BenzBicycle</span><span class="p">)</span> <span class="nf">Intro</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;奔驰自行车&#34;</span><span class="p">)</span>
<span class="p">}</span>
   
<span class="kd">type</span> <span class="nx">AudiCar</span> <span class="kd">struct</span> <span class="p">{</span>
<span class="p">}</span>
   
<span class="kd">func</span> <span class="p">(</span><span class="nx">ac</span> <span class="nx">AudiCar</span><span class="p">)</span> <span class="nf">Intro</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;奥迪汽车&#34;</span><span class="p">)</span>
<span class="p">}</span>
   
<span class="kd">type</span> <span class="nx">AudiBicycle</span> <span class="kd">struct</span> <span class="p">{</span>
<span class="p">}</span>
   
<span class="kd">func</span> <span class="p">(</span><span class="nx">ab</span> <span class="nx">AudiBicycle</span><span class="p">)</span> <span class="nf">Intro</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;奥迪自行车&#34;</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></li>
<li>
<p>实现工厂</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kd">type</span> <span class="nx">BenzFactory</span> <span class="kd">struct</span> <span class="p">{</span>
<span class="p">}</span>
   
<span class="kd">func</span> <span class="p">(</span><span class="nx">bf</span> <span class="nx">BenzFactory</span><span class="p">)</span> <span class="nf">CreateCar</span><span class="p">()</span> <span class="nx">ProductInterface</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nx">BenzCar</span><span class="p">{}</span>
<span class="p">}</span>
   
<span class="kd">func</span> <span class="p">(</span><span class="nx">bf</span> <span class="nx">BenzFactory</span><span class="p">)</span> <span class="nf">CreateBicycle</span><span class="p">()</span> <span class="nx">ProductInterface</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nx">BenzBicycle</span><span class="p">{}</span>
<span class="p">}</span>
   
<span class="kd">type</span> <span class="nx">AudiFactory</span> <span class="kd">struct</span> <span class="p">{</span>
<span class="p">}</span>
   
<span class="kd">func</span> <span class="p">(</span><span class="nx">af</span> <span class="nx">AudiFactory</span><span class="p">)</span> <span class="nf">CreateCar</span><span class="p">()</span> <span class="nx">ProductInterface</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nx">AudiCar</span><span class="p">{}</span>
<span class="p">}</span>
   
<span class="kd">func</span> <span class="p">(</span><span class="nx">bf</span> <span class="nx">AudiFactory</span><span class="p">)</span> <span class="nf">CreateBicycle</span><span class="p">()</span> <span class="nx">ProductInterface</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nx">AudiBicycle</span><span class="p">{}</span>
<span class="p">}</span>
</code></pre></div></li>
<li>
<p>生产</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kd">var</span> <span class="nx">f</span> <span class="nx">FactoryInterface</span>
<span class="nx">f</span> <span class="p">=</span> <span class="nb">new</span><span class="p">(</span><span class="nx">BenzFactory</span><span class="p">)</span>
<span class="nx">b</span> <span class="o">:=</span> <span class="nx">f</span><span class="p">.</span><span class="nf">CreateCar</span><span class="p">()</span>
<span class="nx">b</span><span class="p">.</span><span class="nf">Intro</span><span class="p">()</span>
</code></pre></div><h5 id="抽象工厂模式的优缺点">抽象工厂模式的优缺点</h5>
<pre><code>优点:
抽象工厂模式除了具有工厂方法模式的优点外，最主要的优点就是可以在类的内部对产品族进行约束。所谓的产品族，一般或多或少的都存在一定的关联，抽象工厂模式就可以在类内部对产品族的关联关系进行定义和描述，而不必专门引入一个新的类来进行管理。
</code></pre><pre><code>缺点:
产品族的扩展将是一件十分费力的事情，假如产品族中需要增加一个新的产品，则几乎所有的工厂类都需要进行修改。所以使用抽象工厂模式时，对产品等级结构的划分是非常重要的
</code></pre><h4 id="基于简单工厂模式的日志系统">基于简单工厂模式的日志系统</h4>
<ol>
<li>
<p>构建结构体</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kd">type</span> <span class="nx">Log</span> <span class="kd">struct</span> <span class="p">{</span>
  <span class="nx">Connector</span>                    <span class="c1">// 内嵌连接器，用来定制化功能
</span><span class="c1"></span>  <span class="nx">sync</span><span class="p">.</span><span class="nx">Mutex</span>
  <span class="nx">initialized</span>     <span class="kt">bool</span>         <span class="c1">// 该日志对象是否初始化
</span><span class="c1"></span>  <span class="nx">mode</span>            <span class="kt">int</span>          <span class="c1">// 日志记录模式 同步记录 or 协程池记录
</span><span class="c1"></span>  <span class="nx">pool</span>            <span class="o">*</span><span class="nx">grpool</span><span class="p">.</span><span class="nx">Pool</span> <span class="c1">// 协程池
</span><span class="c1"></span>  <span class="nx">poolExpiredTime</span> <span class="kt">int</span>          <span class="c1">// 协程池模式下，每个空闲协程的存活时间(秒)
</span><span class="c1"></span>  <span class="nx">poolWorkerNum</span>   <span class="kt">int</span>          <span class="c1">// 协程池模式下，允许的最高协程数
</span><span class="c1"></span><span class="p">}</span>
       
</code></pre></div></li>
<li>
<p>构建连接器接口</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kd">type</span> <span class="nx">Connector</span> <span class="kd">interface</span> <span class="p">{</span>
    <span class="nf">Fatal</span><span class="p">(</span><span class="nx">message</span> <span class="o">...</span><span class="kd">interface</span><span class="p">{})</span>
    <span class="nf">Error</span><span class="p">(</span><span class="nx">message</span> <span class="o">...</span><span class="kd">interface</span><span class="p">{})</span>
    <span class="nf">Warning</span><span class="p">(</span><span class="nx">message</span> <span class="o">...</span><span class="kd">interface</span><span class="p">{})</span>
    <span class="nf">Debug</span><span class="p">(</span><span class="nx">message</span> <span class="o">...</span><span class="kd">interface</span><span class="p">{})</span>
    <span class="nf">Info</span><span class="p">(</span><span class="nx">message</span> <span class="o">...</span><span class="kd">interface</span><span class="p">{})</span>                           <span class="c1">// 打印
</span><span class="c1"></span>    <span class="nf">Output</span><span class="p">(</span><span class="nx">message</span> <span class="kt">string</span><span class="p">)</span>                                 <span class="c1">// 将信息输出到文件中
</span><span class="c1"></span>    <span class="nf">GetMessage</span><span class="p">(</span><span class="nx">degree</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">message</span> <span class="o">...</span><span class="kd">interface</span><span class="p">{})</span> <span class="kt">string</span> <span class="c1">// 将输入的信息添加抬头（例如添加打印时间等）
</span><span class="c1"></span>    <span class="nf">GetFile</span><span class="p">(</span><span class="nx">config</span> <span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">string</span><span class="p">)</span> <span class="o">*</span><span class="nx">os</span><span class="p">.</span><span class="nx">File</span>             <span class="c1">// 当前日志要输出到的文件位置,传入一个map 代表配置
</span><span class="c1"></span><span class="p">}</span>
</code></pre></div></li>
<li>
<p>创建日志</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kd">func</span> <span class="nf">NewLog</span><span class="p">(</span><span class="nx">mode</span> <span class="kt">int</span><span class="p">)</span> <span class="o">*</span><span class="nx">Log</span> <span class="p">{</span>
    <span class="nx">l</span> <span class="o">:=</span> <span class="o">&amp;</span><span class="nx">Log</span><span class="p">{}</span>
    <span class="nx">l</span><span class="p">.</span><span class="nf">initialize</span><span class="p">()</span>  <span class="c1">// 这里对结构体中的数据做初始化
</span><span class="c1"></span>    <span class="k">return</span> <span class="nx">l</span>
<span class="p">}</span>
</code></pre></div></li>
<li>
<p>加载连接器</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="c1">// 加载连接器
</span><span class="c1"></span><span class="kd">func</span> <span class="p">(</span><span class="nx">l</span> <span class="o">*</span><span class="nx">Log</span><span class="p">)</span> <span class="nf">LoadConnector</span><span class="p">(</span><span class="nx">conn</span> <span class="nx">Connector</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">l</span><span class="p">.</span><span class="nx">Connector</span> <span class="p">=</span> <span class="nx">conn</span>  <span class="c1">// 所有实现了连接器接口的对象都可以作为参数传入
</span><span class="c1"></span><span class="p">}</span>
</code></pre></div></li>
<li>
<p>5种级别</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="c1">// 重写5种日志级别的打印函数
</span><span class="c1"></span><span class="kd">func</span> <span class="p">(</span><span class="nx">l</span> <span class="o">*</span><span class="nx">Log</span><span class="p">)</span> <span class="nf">Fatal</span><span class="p">(</span><span class="nx">message</span> <span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">l</span><span class="p">.</span><span class="nf">exec</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">Connector</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">,</span> <span class="nx">message</span><span class="p">)</span>
<span class="p">}</span>
       
<span class="kd">func</span> <span class="p">(</span><span class="nx">l</span> <span class="o">*</span><span class="nx">Log</span><span class="p">)</span> <span class="nf">Error</span><span class="p">(</span><span class="nx">message</span> <span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">l</span><span class="p">.</span><span class="nf">exec</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">Connector</span><span class="p">.</span><span class="nx">Error</span><span class="p">,</span> <span class="nx">message</span><span class="p">)</span>
<span class="p">}</span>
       
<span class="kd">func</span> <span class="p">(</span><span class="nx">l</span> <span class="o">*</span><span class="nx">Log</span><span class="p">)</span> <span class="nf">Warning</span><span class="p">(</span><span class="nx">message</span> <span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">l</span><span class="p">.</span><span class="nf">exec</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">Connector</span><span class="p">.</span><span class="nx">Warning</span><span class="p">,</span> <span class="nx">message</span><span class="p">)</span>
<span class="p">}</span>
       
<span class="kd">func</span> <span class="p">(</span><span class="nx">l</span> <span class="o">*</span><span class="nx">Log</span><span class="p">)</span> <span class="nf">Debug</span><span class="p">(</span><span class="nx">message</span> <span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">l</span><span class="p">.</span><span class="nf">exec</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">Connector</span><span class="p">.</span><span class="nx">Debug</span><span class="p">,</span> <span class="nx">message</span><span class="p">)</span>
<span class="p">}</span>
       
<span class="kd">func</span> <span class="p">(</span><span class="nx">l</span> <span class="o">*</span><span class="nx">Log</span><span class="p">)</span> <span class="nf">Info</span><span class="p">(</span><span class="nx">message</span> <span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">l</span><span class="p">.</span><span class="nf">exec</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">Connector</span><span class="p">.</span><span class="nx">Info</span><span class="p">,</span> <span class="nx">message</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></li>
<li>
<p>日志输出</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kd">func</span> <span class="p">(</span><span class="nx">l</span> <span class="o">*</span><span class="nx">Log</span><span class="p">)</span> <span class="nf">exec</span><span class="p">(</span><span class="nx">f</span> <span class="kd">func</span><span class="p">(</span><span class="nx">message</span> <span class="o">...</span><span class="kd">interface</span><span class="p">{}),</span> <span class="nx">message</span> <span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">l</span><span class="p">.</span><span class="nf">Lock</span><span class="p">()</span>
    <span class="k">defer</span> <span class="nx">l</span><span class="p">.</span><span class="nf">Unlock</span><span class="p">()</span>
    <span class="nf">f</span><span class="p">(</span><span class="nx">message</span><span class="p">)</span>
<span class="p">}</span>
       
</code></pre></div></li>
<li>
<p>创建base连接器</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kd">type</span> <span class="nx">BaseConnector</span> <span class="kd">struct</span> <span class="p">{</span>
        <span class="nx">sync</span><span class="p">.</span><span class="nx">Mutex</span>
<span class="p">}</span>
       
<span class="kd">func</span> <span class="p">(</span><span class="nx">b</span> <span class="nx">BaseConnector</span><span class="p">)</span> <span class="nf">Output</span><span class="p">(</span><span class="nx">message</span> <span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// 输出日志
</span><span class="c1"></span><span class="p">}</span>
       
</code></pre></div></li>
<li>
<p>创建cloud连接器</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="kd">type</span> <span class="nx">CloudConnector</span> <span class="kd">struct</span> <span class="p">{</span>
    <span class="nx">BaseConnector</span>
    <span class="nx">config</span> <span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">string</span>
<span class="p">}</span>
       
<span class="kd">func</span> <span class="p">(</span><span class="nx">k</span> <span class="nx">CloudConnector</span><span class="p">)</span> <span class="nf">Output</span><span class="p">(</span><span class="nx">message</span> <span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// 发送给cloud, 并写入flash
</span><span class="c1"></span><span class="p">}</span>
       
</code></pre></div></li>
<li>
<p>测试</p>
<div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="nx">log</span> <span class="o">:=</span> <span class="nx">Log</span><span class="p">.</span><span class="nf">NewLog</span><span class="p">()</span>
       
<span class="nx">conn1</span> <span class="o">:=</span> <span class="nb">new</span><span class="p">(</span><span class="nx">Log</span><span class="p">.</span><span class="nx">BaseConnector</span><span class="p">)</span>
       
<span class="nx">log</span><span class="p">.</span><span class="nf">LoadConnector</span><span class="p">(</span><span class="nx">conn1</span><span class="p">)</span>
       
<span class="nx">log</span><span class="p">.</span><span class="nf">Info</span><span class="p">(</span><span class="s">&#34;testing&#34;</span><span class="p">)</span> <span class="c1">//本地记录日志
</span><span class="c1"></span>       
       
<span class="nx">conn2</span> <span class="o">:=</span> <span class="nb">new</span><span class="p">(</span><span class="nx">Log</span><span class="p">.</span><span class="nx">CloudConnector</span><span class="p">)</span>
       
<span class="nx">log</span><span class="p">.</span><span class="nf">LoadConnector</span><span class="p">(</span><span class="nx">conn2</span><span class="p">)</span>
       
<span class="nx">log</span><span class="p">.</span><span class="nf">Info</span><span class="p">(</span><span class="s">&#34;testing&#34;</span><span class="p">)</span> <span class="c1">//发送cloud, 写入flash
</span></code></pre></div></li>
</ol>
<h4 id="5-总结">5. 总结</h4>
<p>创建型设计模式的结果都是得到指定对象，模式之间没有好坏，按需使用，只要能够达到解耦的目的，就是好模式。</p>
</li>
</ol>
]]></content>
		</item>
		
		<item>
			<title></title>
			<link>https://example.com/posts/%E7%BA%BF%E7%A8%8B%E9%94%81/</link>
			<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
			
			<guid>https://example.com/posts/%E7%BA%BF%E7%A8%8B%E9%94%81/</guid>
			<description>线程锁 </description>
			<content type="html"><![CDATA[<h3 id="线程锁">线程锁</h3>
]]></content>
		</item>
		
	</channel>
</rss>
